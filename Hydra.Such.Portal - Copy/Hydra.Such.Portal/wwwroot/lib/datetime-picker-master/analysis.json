{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`<calendar-element>` adds a calendar to your page using Polymer.\n\nIf you like to connect it to an input, try it like:\n\n  ```html\n    <input type=\"date\" value=\"{{date::input}}\">\n\n    <calendar-element date=\"{{date}}\"></calendar-element>\n  ```\n\nFor example if you clamp on `hours`, you can round `datetime` and `value` to `00:00:00`. If you set `clamp=\"day\"` you hide the day-selection.\n\nThe following custom properties and mixins are also available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--datetime-background` | text-color of the time-element | `#2b2b2b`\n`--datetime-color` | text-color of the time-element | `#dadada`\n`--datetime-selected-background` | background-color of the focussed time-input and the hovered icons and buttons | `--primary-color, #394FE8`\n`--datetime-selected-color` | color of the focussed time-input and the hovered icons and buttons | `#f5f5f5`\n`--datetime-element` | Mixin applied to the time-element and the calender-element | `{border-radius: 4px; padding: 4px;}`\n`--datetime-picker` | Mixin applied to the picker | `{ box-shadow: 0 3px 4px 0 rgba(0, 0, 0, 0.14), 0 1px 8px 0 rgba(0, 0, 0, 0.12), 0 3px 3px -2px rgba(0, 0, 0, 0.4); }`\n`--datetime-input` | Mixin applied to the inputs | {border-radius: 4px; padding: 0.3em 0.2em; border: none; outline: none; text-align: center; color: inherit; cursor: pointer; background-color: transparent; box-sizing: content-box; transition: background-color 150ms cubic-bezier(0.6, 1, 0.2, 1);}`\n`--datetime-icon` | Mixin applied to closing icon | `{border-radius: 2px; padding: 8px; height: 16px; width: 16px; background-color: transparent; transition: background-color 150ms cubic-bezier(0.6, 1, 0.2, 1); cursor: pointer; fill: currentColor; }`",
      "summary": "",
      "path": "calendar-element.html",
      "properties": [
        {
          "name": "clamp",
          "type": "string",
          "description": "clamp datetime to a property\npossible values: 'month', 'day', 'hours', 'minutes', 'seconds', 'milliseconds'",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 73,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "currentSelectedDayNode",
          "type": "Node",
          "description": "current hovered day node\nto access: bind the attribute ('current-hovered-day') and get its '.dataset.date'- property represents the DateString",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 8
            },
            "end": {
              "line": 184,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "currentHoveredDayNode",
          "type": "Node",
          "description": "node of the last selected day (warning: if view changes )\nto access: bind the attribute ('current-hovered-day') and get its '.dataset.date'- property represents the DateString",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 190,
              "column": 8
            },
            "end": {
              "line": 193,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_viewYear",
          "type": "number",
          "description": "The year of the view",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 198,
              "column": 8
            },
            "end": {
              "line": 201,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_viewMonth",
          "type": "number",
          "description": "The month of the view",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 206,
              "column": 8
            },
            "end": {
              "line": 209,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_hideMonth",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 211,
              "column": 8
            },
            "end": {
              "line": 214,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_hideDay",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 216,
              "column": 8
            },
            "end": {
              "line": 219,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_maxDayOfMonth",
          "type": "number",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 221,
              "column": 8
            },
            "end": {
              "line": 223,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "datetime",
          "type": "string",
          "description": "the selected date and time (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 20,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "type": "string",
          "description": "the selected date (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 24,
              "column": 10
            },
            "end": {
              "line": 28,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "type": "string",
          "description": "the selected time (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "year",
          "type": "number",
          "description": "The year of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 42,
              "column": 10
            },
            "end": {
              "line": 45,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "type": "number",
          "description": "The month of the selected date (starts with 1)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 50,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "type": "number",
          "description": "The day of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 61,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hours",
          "type": "number",
          "description": "The hours of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 66,
              "column": 10
            },
            "end": {
              "line": 70,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_hoursChanged\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minutes",
          "type": "number",
          "description": "The minutes of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 75,
              "column": 10
            },
            "end": {
              "line": 78,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "seconds",
          "type": "number",
          "description": "The seconds of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 83,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "milliseconds",
          "type": "number",
          "description": "The milliseconds of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 94,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value",
          "type": "number",
          "description": "The value of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 99,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueChanged\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "type": "string",
          "description": "The minimal date (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 112,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_minChanged\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "type": "string",
          "description": "The maximal date (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 117,
              "column": 10
            },
            "end": {
              "line": 121,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_maxChanged\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "type": "boolean",
          "description": "when true 12-hour local time format, else 24-hour",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 127,
              "column": 10
            },
            "end": {
              "line": 130,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "isAm",
          "type": "boolean",
          "description": "true, when A.M. (when `hours` < 12)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 136,
              "column": 10
            },
            "end": {
              "line": 139,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_isAmChanged\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hours12",
          "type": "number",
          "description": "hours in 12-hour-format",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 145,
              "column": 10
            },
            "end": {
              "line": 149,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_hours12Changed\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "locale",
          "type": "string",
          "description": "The current locale",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 22,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_localeChanged\""
            }
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_am",
          "type": "string",
          "description": "locale representation of 'AM'",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 31,
              "column": 10
            },
            "end": {
              "line": 33,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_pm",
          "type": "string",
          "description": "locale representation of 'PM'",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 38,
              "column": 10
            },
            "end": {
              "line": 40,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_localDateSeparator",
          "type": "string",
          "description": "Separator for local date values (date-string is still in ISO-Format)",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 46,
              "column": 10
            },
            "end": {
              "line": 49,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"-\"",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_localTimeSeparator",
          "type": "string",
          "description": "Separator for local time values (time-string is still in ISO-Format)",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 55,
              "column": 10
            },
            "end": {
              "line": 58,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\":\"",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_localDecimalSeparator",
          "type": "string",
          "description": "Separator for local decimal values",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 64,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\".\"",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_orderDate",
          "type": "Object",
          "description": "order of date-parts",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 80,
              "column": 10
            },
            "end": {
              "line": 91,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "DatetimePickerMixin"
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 139,
              "column": 6
            },
            "end": {
              "line": 145,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 147,
              "column": 6
            },
            "end": {
              "line": 150,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_onClickDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 244,
              "column": 4
            },
            "end": {
              "line": 250,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_onMouseMoveDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 252,
              "column": 4
            },
            "end": {
              "line": 266,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_computeViewDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 268,
              "column": 4
            },
            "end": {
              "line": 278,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year"
            },
            {
              "name": "month"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "now",
          "description": "Sets value to the actual date",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 180,
              "column": 6
            },
            "end": {
              "line": 182,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_prev",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 286,
              "column": 4
            },
            "end": {
              "line": 288,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_next",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 290,
              "column": 4
            },
            "end": {
              "line": 292,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_increm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 294,
              "column": 4
            },
            "end": {
              "line": 307,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "i"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_incremViewMonth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 309,
              "column": 4
            },
            "end": {
              "line": 312,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "i"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_incremViewYear",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 314,
              "column": 4
            },
            "end": {
              "line": 316,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "i"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_cancelTimeout",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 318,
              "column": 4
            },
            "end": {
              "line": 322,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_localeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 201,
              "column": 6
            },
            "end": {
              "line": 256,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "renderCalendar",
          "description": "renderCalendars the current view (manually).",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 360,
              "column": 4
            },
            "end": {
              "line": 436,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_viewYear",
              "type": "number",
              "description": "The value of the date of the current view."
            },
            {
              "name": "_viewMonth",
              "type": "number",
              "description": "The value of the date of the current view."
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_dayDiff",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 438,
              "column": 4
            },
            "end": {
              "line": 440,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "end"
            },
            {
              "name": "start"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_minChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 279,
              "column": 6
            },
            "end": {
              "line": 292,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "min"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 294,
              "column": 6
            },
            "end": {
              "line": 307,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "max"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkKeycode",
          "description": "key press event handler",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 262,
              "column": 6
            },
            "end": {
              "line": 266,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_computeTime",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 152,
              "column": 6
            },
            "end": {
              "line": 170,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hours"
            },
            {
              "name": "minutes"
            },
            {
              "name": "seconds"
            },
            {
              "name": "milliseconds"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_computeDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 172,
              "column": 6
            },
            "end": {
              "line": 186,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year"
            },
            {
              "name": "month"
            },
            {
              "name": "day"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_computeValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 200,
              "column": 6
            },
            "end": {
              "line": 232,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            },
            {
              "name": "time"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_valueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 234,
              "column": 6
            },
            "end": {
              "line": 262,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_pad",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 264,
              "column": 6
            },
            "end": {
              "line": 277,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n"
            },
            {
              "name": "padLength"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkMax",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 309,
              "column": 6
            },
            "end": {
              "line": 321,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkMin",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 323,
              "column": 6
            },
            "end": {
              "line": 335,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 337,
              "column": 6
            },
            "end": {
              "line": 342,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toTime",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 344,
              "column": 6
            },
            "end": {
              "line": 349,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_hoursChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 351,
              "column": 6
            },
            "end": {
              "line": 354,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hours"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_hours12Changed",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 356,
              "column": 6
            },
            "end": {
              "line": 358,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hours12"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_isAmChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 360,
              "column": 6
            },
            "end": {
              "line": 368,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isAm"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_hideIfClamped",
          "description": "hide features",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 194,
              "column": 6
            },
            "end": {
              "line": 199,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp",
              "type": "string",
              "description": "'clamp'-property"
            },
            {
              "name": "comp",
              "type": "string",
              "description": "the property to compare to"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "true when should be hidden"
          },
          "inheritedFrom": "DatetimePickerMixin"
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/date-picker.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 512,
          "column": 4
        },
        "end": {
          "line": 525,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "CalendarElement",
      "attributes": [
        {
          "name": "clamp",
          "description": "clamp datetime to a property\npossible values: 'month', 'day', 'hours', 'minutes', 'seconds', 'milliseconds'",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 73,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "current-selected-day-node",
          "description": "current hovered day node\nto access: bind the attribute ('current-hovered-day') and get its '.dataset.date'- property represents the DateString",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 8
            },
            "end": {
              "line": 184,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Node",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "current-hovered-day-node",
          "description": "node of the last selected day (warning: if view changes )\nto access: bind the attribute ('current-hovered-day') and get its '.dataset.date'- property represents the DateString",
          "sourceRange": {
            "start": {
              "line": 190,
              "column": 8
            },
            "end": {
              "line": 193,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Node",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "datetime",
          "description": "the selected date and time (format: iso8061)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 20,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "description": "the selected date (format: iso8061)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 24,
              "column": 10
            },
            "end": {
              "line": 28,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "description": "the selected time (format: iso8061)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "year",
          "description": "The year of the selected date",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 42,
              "column": 10
            },
            "end": {
              "line": 45,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "description": "The month of the selected date (starts with 1)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 50,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "description": "The day of the selected date",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 61,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hours",
          "description": "The hours of the selected time",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 66,
              "column": 10
            },
            "end": {
              "line": 70,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minutes",
          "description": "The minutes of the selected time",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 75,
              "column": 10
            },
            "end": {
              "line": 78,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "seconds",
          "description": "The seconds of the selected time",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 83,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "milliseconds",
          "description": "The milliseconds of the selected time",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 94,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value",
          "description": "The value of the selected date",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 99,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "description": "The minimal date (format: iso8061)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 112,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "description": "The maximal date (format: iso8061)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 117,
              "column": 10
            },
            "end": {
              "line": 121,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "description": "when true 12-hour local time format, else 24-hour",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 127,
              "column": 10
            },
            "end": {
              "line": 130,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "is-am",
          "description": "true, when A.M. (when `hours` < 12)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 136,
              "column": 10
            },
            "end": {
              "line": 139,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hours12",
          "description": "hours in 12-hour-format",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 145,
              "column": 10
            },
            "end": {
              "line": 149,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "locale",
          "description": "The current locale",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 22,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimePickerMixin"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "calendar-element",
      "mixins": [
        "CalendarElementPattern",
        "DatetimePickerMixin"
      ]
    },
    {
      "description": "`date-picker` is a picker for time for **[Polymer](https://github.com/Polymer/polymer)** that can use the **native** input, too. If the **native** picker is choosen and is not supported, this element uses the **polyfill** date-picker. The `<calendar-element>` will come in place if the native picker is not available or is not explicitly wanted. A range picker is provided by combining the `min`- and `max`-attributes.\n\n ```html\n   <date-picker value=\"{{value}}\"></date-picker>\n ```\n\n If you need an **overlay** then use `overlay-date-picker`, that creates the element in an `overlay-element`, that extends *IronOverlayBehavior* and will create some of its attribute-bindings.\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--datetime-background` | text-color of the time-element | `#2b2b2b`\n`--datetime-color` | text-color of the time-element | `#dadada`\n`--datetime-selected-background` | background-color of the focussed time-input and the hovered icons and buttons | `--primary-color, #394FE8`\n`--datetime-selected-color` | color of the focussed time-input and the hovered icons and buttons | `#f5f5f5`\n`--datetime-element` | Mixin applied to the time-element and the calender-element | `{ border-radius: 4px; padding: 4px; }`\n`--datetime-picker` | Mixin applied to the picker | `{ box-shadow: 0 3px 4px 0 rgba(0, 0, 0, 0.14), 0 1px 8px 0 rgba(0, 0, 0, 0.12), 0 3px 3px -2px rgba(0, 0, 0, 0.4); }`\n`--datetime-input` | Mixin applied to the inputs | { border-radius: 4px; padding: 0.3em 0.2em; border: none; outline: none; text-align: center; color: inherit; cursor: pointer; background-color: transparent; box-sizing: content-box; transition: background-color 150ms cubic-bezier(0.6, 1, 0.2, 1); }`\n`--datetime-icon` | Mixin applied to closing icon | `{ border-radius: 2px; padding: 8px; height: 16px; width: 16px; background-color: transparent; transition: background-color 150ms cubic-bezier(0.6, 1, 0.2, 1); cursor: pointer; fill: currentColor; }`",
      "summary": "",
      "path": "date-picker.html",
      "properties": [
        {
          "name": "clamp",
          "type": "string",
          "description": "clamp datetime to a property\npossible values: 'month', 'day', 'hours', 'minutes', 'seconds', 'milliseconds'",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 73,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "currentSelectedDayNode",
          "type": "Node",
          "description": "current hovered day node\nto access: bind the attribute ('current-hovered-day') and get its '.dataset.date'- property represents the DateString",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 181,
              "column": 8
            },
            "end": {
              "line": 184,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "currentHoveredDayNode",
          "type": "Node",
          "description": "node of the last selected day (warning: if view changes )\nto access: bind the attribute ('current-hovered-day') and get its '.dataset.date'- property represents the DateString",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 190,
              "column": 8
            },
            "end": {
              "line": 193,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_viewYear",
          "type": "number",
          "description": "The year of the view",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 198,
              "column": 8
            },
            "end": {
              "line": 201,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_viewMonth",
          "type": "number",
          "description": "The month of the view",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 206,
              "column": 8
            },
            "end": {
              "line": 209,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_hideMonth",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 211,
              "column": 8
            },
            "end": {
              "line": 214,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_hideDay",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 216,
              "column": 8
            },
            "end": {
              "line": 219,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_maxDayOfMonth",
          "type": "number",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 221,
              "column": 8
            },
            "end": {
              "line": 223,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "datetime",
          "type": "string",
          "description": "the selected date and time (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 20,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "type": "string",
          "description": "the selected date (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 24,
              "column": 10
            },
            "end": {
              "line": 28,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "type": "string",
          "description": "the selected time (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "year",
          "type": "number",
          "description": "The year of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 42,
              "column": 10
            },
            "end": {
              "line": 45,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "type": "number",
          "description": "The month of the selected date (starts with 1)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 50,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "type": "number",
          "description": "The day of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 61,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hours",
          "type": "number",
          "description": "The hours of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 66,
              "column": 10
            },
            "end": {
              "line": 70,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_hoursChanged\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minutes",
          "type": "number",
          "description": "The minutes of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 75,
              "column": 10
            },
            "end": {
              "line": 78,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "seconds",
          "type": "number",
          "description": "The seconds of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 83,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "milliseconds",
          "type": "number",
          "description": "The milliseconds of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 94,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value",
          "type": "number",
          "description": "The value of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 99,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueChanged\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "type": "string",
          "description": "The minimal date (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 112,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_minChanged\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "type": "string",
          "description": "The maximal date (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 117,
              "column": 10
            },
            "end": {
              "line": 121,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_maxChanged\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "type": "boolean",
          "description": "when true 12-hour local time format, else 24-hour",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 127,
              "column": 10
            },
            "end": {
              "line": 130,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "isAm",
          "type": "boolean",
          "description": "true, when A.M. (when `hours` < 12)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 136,
              "column": 10
            },
            "end": {
              "line": 139,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_isAmChanged\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hours12",
          "type": "number",
          "description": "hours in 12-hour-format",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 145,
              "column": 10
            },
            "end": {
              "line": 149,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_hours12Changed\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "locale",
          "type": "string",
          "description": "The current locale",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 22,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_localeChanged\""
            }
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_am",
          "type": "string",
          "description": "locale representation of 'AM'",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 31,
              "column": 10
            },
            "end": {
              "line": 33,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_pm",
          "type": "string",
          "description": "locale representation of 'PM'",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 38,
              "column": 10
            },
            "end": {
              "line": 40,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_localDateSeparator",
          "type": "string",
          "description": "Separator for local date values (date-string is still in ISO-Format)",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 46,
              "column": 10
            },
            "end": {
              "line": 49,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"-\"",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_localTimeSeparator",
          "type": "string",
          "description": "Separator for local time values (time-string is still in ISO-Format)",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 55,
              "column": 10
            },
            "end": {
              "line": 58,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\":\"",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_localDecimalSeparator",
          "type": "string",
          "description": "Separator for local decimal values",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 64,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\".\"",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_orderDate",
          "type": "Object",
          "description": "order of date-parts",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 80,
              "column": 10
            },
            "end": {
              "line": 91,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "native",
          "type": "boolean",
          "description": "use the native input, if it exists",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 34,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "opened",
          "type": "boolean",
          "description": "opens the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 42,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "horizontalAlign",
          "type": "string",
          "description": "The orientation against which to align the element horizontally\nrelative to the related input element. Possible values are \"left\", \"right\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 53,
              "column": 10
            },
            "end": {
              "line": 56,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "verticalAlign",
          "type": "string",
          "description": "The orientation against which to align the element vertically\nrelative to the related input element. Possible values are \"top\", \"bottom\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 61,
              "column": 10
            },
            "end": {
              "line": 65,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"top\"",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "disabled",
          "type": "boolean",
          "description": "disables the input elements",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 70,
              "column": 10
            },
            "end": {
              "line": 73,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "noCancelOnEscKey",
          "type": "boolean",
          "description": "Set to true to disable canceling the overlay with the ESC key.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 78,
              "column": 10
            },
            "end": {
              "line": 81,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 223,
              "column": 6
            },
            "end": {
              "line": 226,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 228,
              "column": 6
            },
            "end": {
              "line": 231,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_onClickDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 244,
              "column": 4
            },
            "end": {
              "line": 250,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_onMouseMoveDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 252,
              "column": 4
            },
            "end": {
              "line": 266,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_computeViewDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 268,
              "column": 4
            },
            "end": {
              "line": 278,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year"
            },
            {
              "name": "month"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "now",
          "description": "Sets value to the actual date",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 180,
              "column": 6
            },
            "end": {
              "line": 182,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_prev",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 286,
              "column": 4
            },
            "end": {
              "line": 288,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_next",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 290,
              "column": 4
            },
            "end": {
              "line": 292,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_increm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 294,
              "column": 4
            },
            "end": {
              "line": 307,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "i"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_incremViewMonth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 309,
              "column": 4
            },
            "end": {
              "line": 312,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "i"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_incremViewYear",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 314,
              "column": 4
            },
            "end": {
              "line": 316,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "i"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_cancelTimeout",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 318,
              "column": 4
            },
            "end": {
              "line": 322,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_localeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 201,
              "column": 6
            },
            "end": {
              "line": 256,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "renderCalendar",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 71,
              "column": 6
            },
            "end": {
              "line": 76,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_viewYear"
            },
            {
              "name": "_viewMonth"
            },
            {
              "name": "day"
            }
          ]
        },
        {
          "name": "_dayDiff",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 438,
              "column": 4
            },
            "end": {
              "line": 440,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "end"
            },
            {
              "name": "start"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_minChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 279,
              "column": 6
            },
            "end": {
              "line": 292,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "min"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 294,
              "column": 6
            },
            "end": {
              "line": 307,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "max"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkKeycode",
          "description": "key press event handler",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 237,
              "column": 6
            },
            "end": {
              "line": 244,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_computeTime",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 152,
              "column": 6
            },
            "end": {
              "line": 170,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hours"
            },
            {
              "name": "minutes"
            },
            {
              "name": "seconds"
            },
            {
              "name": "milliseconds"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_computeDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 172,
              "column": 6
            },
            "end": {
              "line": 186,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year"
            },
            {
              "name": "month"
            },
            {
              "name": "day"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_computeValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 200,
              "column": 6
            },
            "end": {
              "line": 232,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            },
            {
              "name": "time"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_valueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 234,
              "column": 6
            },
            "end": {
              "line": 262,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_pad",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 264,
              "column": 6
            },
            "end": {
              "line": 277,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n"
            },
            {
              "name": "padLength"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkMax",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 309,
              "column": 6
            },
            "end": {
              "line": 321,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkMin",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 323,
              "column": 6
            },
            "end": {
              "line": 335,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 337,
              "column": 6
            },
            "end": {
              "line": 342,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toTime",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 344,
              "column": 6
            },
            "end": {
              "line": 349,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_hoursChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 351,
              "column": 6
            },
            "end": {
              "line": 354,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hours"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_hours12Changed",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 356,
              "column": 6
            },
            "end": {
              "line": 358,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hours12"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_isAmChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 360,
              "column": 6
            },
            "end": {
              "line": 368,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isAm"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_hideIfClamped",
          "description": "hide features",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 194,
              "column": 6
            },
            "end": {
              "line": 199,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp",
              "type": "string",
              "description": "'clamp'-property"
            },
            {
              "name": "comp",
              "type": "string",
              "description": "the property to compare to"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "true when should be hidden"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "open",
          "description": "open the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 249,
              "column": 6
            },
            "end": {
              "line": 254,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "close",
          "description": "close the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 260,
              "column": 6
            },
            "end": {
              "line": 268,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "toggle",
          "description": "toggle the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 274,
              "column": 6
            },
            "end": {
              "line": 282,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "inheritedFrom": "InputPickerPattern"
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/date-picker.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 39,
          "column": 4
        },
        "end": {
          "line": 78,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "DatePicker",
      "attributes": [
        {
          "name": "clamp",
          "description": "clamp datetime to a property\npossible values: 'month', 'day', 'hours', 'minutes', 'seconds', 'milliseconds'",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 73,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "current-selected-day-node",
          "description": "current hovered day node\nto access: bind the attribute ('current-hovered-day') and get its '.dataset.date'- property represents the DateString",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 181,
              "column": 8
            },
            "end": {
              "line": 184,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Node",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "current-hovered-day-node",
          "description": "node of the last selected day (warning: if view changes )\nto access: bind the attribute ('current-hovered-day') and get its '.dataset.date'- property represents the DateString",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 190,
              "column": 8
            },
            "end": {
              "line": 193,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Node",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "datetime",
          "description": "the selected date and time (format: iso8061)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 20,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "description": "the selected date (format: iso8061)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 24,
              "column": 10
            },
            "end": {
              "line": 28,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "description": "the selected time (format: iso8061)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "year",
          "description": "The year of the selected date",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 42,
              "column": 10
            },
            "end": {
              "line": 45,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "description": "The month of the selected date (starts with 1)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 50,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "description": "The day of the selected date",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 61,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hours",
          "description": "The hours of the selected time",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 66,
              "column": 10
            },
            "end": {
              "line": 70,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minutes",
          "description": "The minutes of the selected time",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 75,
              "column": 10
            },
            "end": {
              "line": 78,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "seconds",
          "description": "The seconds of the selected time",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 83,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "milliseconds",
          "description": "The milliseconds of the selected time",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 94,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value",
          "description": "The value of the selected date",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 99,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "description": "The minimal date (format: iso8061)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 112,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "description": "The maximal date (format: iso8061)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 117,
              "column": 10
            },
            "end": {
              "line": 121,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "description": "when true 12-hour local time format, else 24-hour",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 127,
              "column": 10
            },
            "end": {
              "line": 130,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "is-am",
          "description": "true, when A.M. (when `hours` < 12)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 136,
              "column": 10
            },
            "end": {
              "line": 139,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hours12",
          "description": "hours in 12-hour-format",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 145,
              "column": 10
            },
            "end": {
              "line": 149,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "locale",
          "description": "The current locale",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 22,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "native",
          "description": "use the native input, if it exists",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 34,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "opened",
          "description": "opens the picker",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 42,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "horizontal-align",
          "description": "The orientation against which to align the element horizontally\nrelative to the related input element. Possible values are \"left\", \"right\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 53,
              "column": 10
            },
            "end": {
              "line": 56,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "vertical-align",
          "description": "The orientation against which to align the element vertically\nrelative to the related input element. Possible values are \"top\", \"bottom\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 61,
              "column": 10
            },
            "end": {
              "line": 65,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "disabled",
          "description": "disables the input elements",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 70,
              "column": 10
            },
            "end": {
              "line": 73,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "no-cancel-on-esc-key",
          "description": "Set to true to disable canceling the overlay with the ESC key.",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 78,
              "column": 10
            },
            "end": {
              "line": 81,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "InputPickerPattern"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "date-picker",
      "mixins": [
        "CalendarElementPattern",
        "DatetimePickerMixin",
        "PolyfillPickerPattern"
      ]
    },
    {
      "description": "`overlay-element`\nA helper-element, that creates an overlay using iron-overlay-behavior of Polymer.",
      "summary": "",
      "path": "overlay-element.html",
      "properties": [
        {
          "name": "sizingTarget",
          "type": "!Element",
          "description": "The element that will receive a `max-height`/`width`. By default it is the same as `this`,\nbut it can be set to a child element. This is useful, for example, for implementing a\nscrolling region inside the element.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 69,
              "column": 6
            },
            "end": {
              "line": 74,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "fitInto",
          "type": "Object",
          "description": "The element to fit `this` into.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 79,
              "column": 6
            },
            "end": {
              "line": 82,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "noOverlap",
          "type": "boolean",
          "description": "Will position the element around the positionTarget without overlapping it.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 87,
              "column": 6
            },
            "end": {
              "line": 89,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "positionTarget",
          "type": "!Element",
          "description": "The element that should be used to position the element. If not set, it will\ndefault to the parent node.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 96,
              "column": 6
            },
            "end": {
              "line": 98,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "horizontalAlign",
          "type": "string",
          "description": "The orientation against which to align the element horizontally\nrelative to the `positionTarget`. Possible values are \"left\", \"right\", \"auto\".",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 104,
              "column": 6
            },
            "end": {
              "line": 106,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "verticalAlign",
          "type": "string",
          "description": "The orientation against which to align the element vertically\nrelative to the `positionTarget`. Possible values are \"top\", \"bottom\", \"auto\".",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 112,
              "column": 6
            },
            "end": {
              "line": 114,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "dynamicAlign",
          "type": "boolean",
          "description": "If true, it will use `horizontalAlign` and `verticalAlign` values as preferred alignment\nand if there's not enough space, it will pick the values which minimize the cropping.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 120,
              "column": 6
            },
            "end": {
              "line": 122,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "horizontalOffset",
          "type": "number",
          "description": "A pixel value that will be added to the position calculated for the\ngiven `horizontalAlign`, in the direction of alignment. You can think\nof it as increasing or decreasing the distance to the side of the\nscreen given by `horizontalAlign`.\n\nIf `horizontalAlign` is \"left\", this offset will increase or decrease\nthe distance to the left side of the screen: a negative offset will\nmove the dropdown to the left; a positive one, to the right.\n\nConversely if `horizontalAlign` is \"right\", this offset will increase\nor decrease the distance to the right side of the screen: a negative\noffset will move the dropdown to the right; a positive one, to the left.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 138,
              "column": 6
            },
            "end": {
              "line": 142,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "0",
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "verticalOffset",
          "type": "number",
          "description": "A pixel value that will be added to the position calculated for the\ngiven `verticalAlign`, in the direction of alignment. You can think\nof it as increasing or decreasing the distance to the side of the\nscreen given by `verticalAlign`.\n\nIf `verticalAlign` is \"top\", this offset will increase or decrease\nthe distance to the top side of the screen: a negative offset will\nmove the dropdown upwards; a positive one, downwards.\n\nConversely if `verticalAlign` is \"bottom\", this offset will increase\nor decrease the distance to the bottom side of the screen: a negative\noffset will move the dropdown downwards; a positive one, upwards.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 158,
              "column": 6
            },
            "end": {
              "line": 162,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "0",
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "autoFitOnAttach",
          "type": "boolean",
          "description": "Set to true to auto-fit on attach.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 167,
              "column": 6
            },
            "end": {
              "line": 170,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "_fitInfo",
          "type": "?Object",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 173,
              "column": 6
            },
            "end": {
              "line": 175,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "_parentResizable",
          "type": "Object",
          "description": "The closest ancestor element that implements `IronResizableBehavior`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-resizable-behavior\\iron-resizable-behavior.html",
            "start": {
              "line": 36,
              "column": 6
            },
            "end": {
              "line": 39,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_parentResizableChanged\""
            }
          },
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_notifyingDescendant",
          "type": "boolean",
          "description": "True if this element is currently notifying its descendant elements of\nresize.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-resizable-behavior\\iron-resizable-behavior.html",
            "start": {
              "line": 45,
              "column": 6
            },
            "end": {
              "line": 48,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "opened",
          "type": "boolean",
          "description": "True if the overlay is currently displayed.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 28,
              "column": 6
            },
            "end": {
              "line": 33,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_openedChanged\""
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "canceled",
          "type": "boolean",
          "description": "True if the overlay was canceled when it was last closed.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 38,
              "column": 6
            },
            "end": {
              "line": 43,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_canceledChanged\"",
              "readOnly": true
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "withBackdrop",
          "type": "boolean",
          "description": "Set to true to display a backdrop behind the overlay. It traps the focus\nwithin the light DOM of the overlay.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 49,
              "column": 6
            },
            "end": {
              "line": 52,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_withBackdropChanged\""
            }
          },
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "noAutoFocus",
          "type": "boolean",
          "description": "Set to true to disable auto-focusing the overlay or child nodes with\nthe `autofocus` attribute` when the overlay is opened.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 58,
              "column": 6
            },
            "end": {
              "line": 61,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "noCancelOnEscKey",
          "type": "boolean",
          "description": "Set to true to disable canceling the overlay with the ESC key.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 66,
              "column": 6
            },
            "end": {
              "line": 69,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "noCancelOnOutsideClick",
          "type": "boolean",
          "description": "Set to true to disable canceling the overlay by clicking outside it.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 74,
              "column": 6
            },
            "end": {
              "line": 77,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "closingReason",
          "type": "Object",
          "description": "Contains the reason(s) this overlay was last closed (see `iron-overlay-closed`).\n`IronOverlayBehavior` provides the `canceled` reason; implementers of the\nbehavior can provide other reasons in addition to `canceled`.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 84,
              "column": 6
            },
            "end": {
              "line": 88,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "restoreFocusOnClose",
          "type": "boolean",
          "description": "Set to true to enable restoring of focus when overlay is closed.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 93,
              "column": 6
            },
            "end": {
              "line": 96,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "alwaysOnTop",
          "type": "boolean",
          "description": "Set to true to keep overlay always on top.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 101,
              "column": 6
            },
            "end": {
              "line": 103,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "_manager",
          "type": "Polymer.IronOverlayManagerClass",
          "description": "Shortcut to access to the overlay manager.",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 110,
              "column": 6
            },
            "end": {
              "line": 113,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "_focusedChild",
          "type": "?Node",
          "description": "The node being focused.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 119,
              "column": 6
            },
            "end": {
              "line": 121,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        }
      ],
      "methods": [
        {
          "name": "_fitWidth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 178,
              "column": 4
            },
            "end": {
              "line": 186,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "_fitHeight",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 188,
              "column": 4
            },
            "end": {
              "line": 196,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "_fitLeft",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 198,
              "column": 4
            },
            "end": {
              "line": 206,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "_fitTop",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 208,
              "column": 4
            },
            "end": {
              "line": 216,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "_defaultPositionTarget",
          "description": "The element that should be used to position the element,\nif no position target is configured.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 222,
              "column": 4
            },
            "end": {
              "line": 230,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "_localeHorizontalAlign",
          "description": "The horizontal align value, accounting for the RTL/LTR text direction.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 235,
              "column": 4
            },
            "end": {
              "line": 246,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "attached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 174,
              "column": 4
            },
            "end": {
              "line": 180,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "detached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 182,
              "column": 4
            },
            "end": {
              "line": 190,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "fit",
          "description": "Positions and fits the element into the `fitInto` element.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 280,
              "column": 4
            },
            "end": {
              "line": 284,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "_discoverInfo",
          "description": "Memoize information needed to position and size the target element.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 290,
              "column": 4
            },
            "end": {
              "line": 327,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "resetFit",
          "description": "Resets the target element's position and size constraints, and clear\nthe memoized data.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 333,
              "column": 4
            },
            "end": {
              "line": 343,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "refit",
          "description": "Equivalent to calling `resetFit()` and `fit()`. Useful to call this after\nthe element or the `fitInto` element has been resized, or if any of the\npositioning properties (e.g. `horizontalAlign, verticalAlign`) is updated.\nIt preserves the scroll position of the sizingTarget.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 351,
              "column": 4
            },
            "end": {
              "line": 358,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "position",
          "description": "Positions the element according to `horizontalAlign, verticalAlign`.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 363,
              "column": 4
            },
            "end": {
              "line": 413,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "constrain",
          "description": "Constrains the size of the element to `fitInto` by setting `max-height`\nand/or `max-width`.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 419,
              "column": 4
            },
            "end": {
              "line": 446,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "_sizeDimension",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 452,
              "column": 4
            },
            "end": {
              "line": 454,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "rect"
            },
            {
              "name": "positionedBy"
            },
            {
              "name": "start"
            },
            {
              "name": "end"
            },
            {
              "name": "extent"
            }
          ],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "__sizeDimension",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 459,
              "column": 4
            },
            "end": {
              "line": 469,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "rect"
            },
            {
              "name": "positionedBy"
            },
            {
              "name": "start"
            },
            {
              "name": "end"
            },
            {
              "name": "extent"
            }
          ],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "center",
          "description": "Centers horizontally and vertically if not already positioned. This also sets\n`position:fixed`.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 475,
              "column": 4
            },
            "end": {
              "line": 508,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "__getNormalizedRect",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 510,
              "column": 4
            },
            "end": {
              "line": 522,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "target"
            }
          ],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "__getCroppedArea",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 524,
              "column": 4
            },
            "end": {
              "line": 528,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "position"
            },
            {
              "name": "size"
            },
            {
              "name": "fitRect"
            }
          ],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "__getPosition",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 531,
              "column": 4
            },
            "end": {
              "line": 618,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hAlign"
            },
            {
              "name": "vAlign"
            },
            {
              "name": "size"
            },
            {
              "name": "positionRect"
            },
            {
              "name": "fitRect"
            }
          ],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "created",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-resizable-behavior\\iron-resizable-behavior.html",
            "start": {
              "line": 55,
              "column": 4
            },
            "end": {
              "line": 60,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "notifyResize",
          "description": "Can be called to manually notify a resizable and its descendant\nresizables of a resize change.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-resizable-behavior\\iron-resizable-behavior.html",
            "start": {
              "line": 80,
              "column": 4
            },
            "end": {
              "line": 92,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "assignParentResizable",
          "description": "Used to assign the closest resizable ancestor to this resizable\nif the ancestor detects a request for notifications.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-resizable-behavior\\iron-resizable-behavior.html",
            "start": {
              "line": 98,
              "column": 4
            },
            "end": {
              "line": 100,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "parentResizable"
            }
          ],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "stopResizeNotificationsFor",
          "description": "Used to remove a resizable descendant from the list of descendants\nthat should be notified of a resize change.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-resizable-behavior\\iron-resizable-behavior.html",
            "start": {
              "line": 106,
              "column": 4
            },
            "end": {
              "line": 113,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "target"
            }
          ],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "resizerShouldNotify",
          "description": "This method can be overridden to filter nested elements that should or\nshould not be notified by the current element. Return true if an element\nshould be notified, or false if it should not be notified.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-resizable-behavior\\iron-resizable-behavior.html",
            "start": {
              "line": 124,
              "column": 4
            },
            "end": {
              "line": 124,
              "column": 59
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "element",
              "type": "HTMLElement",
              "description": "A candidate descendant element that\nimplements `IronResizableBehavior`."
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "True if the `element` should be notified of resize."
          },
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_onDescendantIronResize",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-resizable-behavior\\iron-resizable-behavior.html",
            "start": {
              "line": 126,
              "column": 4
            },
            "end": {
              "line": 138,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_fireResize",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-resizable-behavior\\iron-resizable-behavior.html",
            "start": {
              "line": 140,
              "column": 4
            },
            "end": {
              "line": 145,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_onIronRequestResizeNotifications",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-resizable-behavior\\iron-resizable-behavior.html",
            "start": {
              "line": 147,
              "column": 4
            },
            "end": {
              "line": 162,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_parentResizableChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-resizable-behavior\\iron-resizable-behavior.html",
            "start": {
              "line": 164,
              "column": 4
            },
            "end": {
              "line": 168,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "parentResizable"
            }
          ],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_notifyDescendant",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-resizable-behavior\\iron-resizable-behavior.html",
            "start": {
              "line": 170,
              "column": 4
            },
            "end": {
              "line": 181,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "descendant"
            }
          ],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_requestResizeNotifications",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-resizable-behavior\\iron-resizable-behavior.html",
            "start": {
              "line": 183,
              "column": 4
            },
            "end": {
              "line": 211,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "backdropElement",
          "description": "The backdrop element.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 133,
              "column": 4
            },
            "end": {
              "line": 135,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "_focusNode",
          "description": "Returns the node to give focus to.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 141,
              "column": 4
            },
            "end": {
              "line": 143,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "_focusableNodes",
          "description": "Array of nodes that can receive focus (overlay included), ordered by `tabindex`.\nThis is used to retrieve which is the first and last focusable nodes in order\nto wrap the focus for overlays `with-backdrop`.\n\nIf you know what is your content (specifically the first and last focusable children),\nyou can override this method to return only `[firstFocusable, lastFocusable];`",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 155,
              "column": 4
            },
            "end": {
              "line": 157,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 159,
              "column": 4
            },
            "end": {
              "line": 172,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "toggle",
          "description": "Toggle the opened state of the overlay.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 195,
              "column": 4
            },
            "end": {
              "line": 198,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "open",
          "description": "Open the overlay.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 203,
              "column": 4
            },
            "end": {
              "line": 206,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "close",
          "description": "Close the overlay.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 211,
              "column": 4
            },
            "end": {
              "line": 214,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "cancel",
          "description": "Cancels the overlay.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 220,
              "column": 4
            },
            "end": {
              "line": 228,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "Event=",
              "description": "The original event"
            }
          ],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "invalidateTabbables",
          "description": "Invalidates the cached tabbable nodes. To be called when any of the focusable\ncontent changes (e.g. a button is disabled).",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 234,
              "column": 4
            },
            "end": {
              "line": 236,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "_ensureSetup",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 238,
              "column": 4
            },
            "end": {
              "line": 245,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "_openedChanged",
          "description": "Called when `opened` changes.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 252,
              "column": 4
            },
            "end": {
              "line": 269,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "opened",
              "type": "boolean="
            }
          ],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "_canceledChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 271,
              "column": 4
            },
            "end": {
              "line": 274,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "_withBackdropChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 276,
              "column": 4
            },
            "end": {
              "line": 288,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "_prepareRenderOpened",
          "description": "tasks which must occur before opening; e.g. making the element visible.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 294,
              "column": 4
            },
            "end": {
              "line": 310,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "_renderOpened",
          "description": "Tasks which cause the overlay to actually open; typically play an animation.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 316,
              "column": 4
            },
            "end": {
              "line": 318,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "_renderClosed",
          "description": "Tasks which cause the overlay to actually close; typically play an animation.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 324,
              "column": 4
            },
            "end": {
              "line": 326,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "_finishRenderOpened",
          "description": "Tasks to be performed at the end of open action. Will fire `iron-overlay-opened`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 332,
              "column": 4
            },
            "end": {
              "line": 337,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "_finishRenderClosed",
          "description": "Tasks to be performed at the end of close action. Will fire `iron-overlay-closed`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 343,
              "column": 4
            },
            "end": {
              "line": 351,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "_preparePositioning",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 353,
              "column": 4
            },
            "end": {
              "line": 357,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "_finishPositioning",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 359,
              "column": 4
            },
            "end": {
              "line": 372,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "_applyFocus",
          "description": "Applies focus according to the opened state.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 378,
              "column": 4
            },
            "end": {
              "line": 400,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "_onCaptureClick",
          "description": "Cancels (closes) the overlay. Call when click happens outside the overlay.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 407,
              "column": 4
            },
            "end": {
              "line": 411,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "!Event"
            }
          ],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "_onCaptureFocus",
          "description": "Keeps track of the focused child. If withBackdrop, traps focus within overlay.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 418,
              "column": 4
            },
            "end": {
              "line": 429,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "!Event"
            }
          ],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "_onCaptureEsc",
          "description": "Handles the ESC key event and cancels (closes) the overlay.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 436,
              "column": 4
            },
            "end": {
              "line": 440,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "!Event"
            }
          ],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "_onCaptureTab",
          "description": "Handles TAB key events to track focus changes.\nWill wrap focus for overlays withBackdrop.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 448,
              "column": 4
            },
            "end": {
              "line": 490,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "!Event"
            }
          ],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "_onIronResize",
          "description": "Refits if the overlay is opened and not animating.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 496,
              "column": 4
            },
            "end": {
              "line": 500,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "_onNodesChange",
          "description": "Will call notifyResize if overlay is opened.\nCan be overridden in order to avoid multiple observers on the same node.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 507,
              "column": 4
            },
            "end": {
              "line": 513,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "__ensureFirstLastFocusables",
          "description": "Will set first and last focusable nodes if any of them is not set.",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 519,
              "column": 4
            },
            "end": {
              "line": 525,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "__openedChanged",
          "description": "Tasks executed when opened changes: prepare for the opening, move the\nfocus, update the manager, render opened/closed.",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 532,
              "column": 4
            },
            "end": {
              "line": 548,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "__onNextAnimationFrame",
          "description": "Executes a callback on the next animation frame, overriding any previous\ncallback awaiting for the next animation frame. e.g.\n`__onNextAnimationFrame(callback1) && __onNextAnimationFrame(callback2)`;\n`callback1` will never be invoked.",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 558,
              "column": 4
            },
            "end": {
              "line": 567,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "callback",
              "type": "!Function",
              "description": "Its `this` parameter is the overlay itself."
            }
          ],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "_fitIntoChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 32,
              "column": 6
            },
            "end": {
              "line": 36,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fitInto"
            },
            {
              "name": "positionTarget"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/overlay.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 21,
          "column": 4
        },
        "end": {
          "line": 37,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "OverlayElement",
      "attributes": [
        {
          "name": "sizing-target",
          "description": "The element that will receive a `max-height`/`width`. By default it is the same as `this`,\nbut it can be set to a child element. This is useful, for example, for implementing a\nscrolling region inside the element.",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 69,
              "column": 6
            },
            "end": {
              "line": 74,
              "column": 7
            }
          },
          "metadata": {},
          "type": "!Element",
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "fit-into",
          "description": "The element to fit `this` into.",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 79,
              "column": 6
            },
            "end": {
              "line": 82,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "no-overlap",
          "description": "Will position the element around the positionTarget without overlapping it.",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 87,
              "column": 6
            },
            "end": {
              "line": 89,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "position-target",
          "description": "The element that should be used to position the element. If not set, it will\ndefault to the parent node.",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 96,
              "column": 6
            },
            "end": {
              "line": 98,
              "column": 7
            }
          },
          "metadata": {},
          "type": "!Element",
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "horizontal-align",
          "description": "The orientation against which to align the element horizontally\nrelative to the `positionTarget`. Possible values are \"left\", \"right\", \"auto\".",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 104,
              "column": 6
            },
            "end": {
              "line": 106,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "vertical-align",
          "description": "The orientation against which to align the element vertically\nrelative to the `positionTarget`. Possible values are \"top\", \"bottom\", \"auto\".",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 112,
              "column": 6
            },
            "end": {
              "line": 114,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "dynamic-align",
          "description": "If true, it will use `horizontalAlign` and `verticalAlign` values as preferred alignment\nand if there's not enough space, it will pick the values which minimize the cropping.",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 120,
              "column": 6
            },
            "end": {
              "line": 122,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "horizontal-offset",
          "description": "A pixel value that will be added to the position calculated for the\ngiven `horizontalAlign`, in the direction of alignment. You can think\nof it as increasing or decreasing the distance to the side of the\nscreen given by `horizontalAlign`.\n\nIf `horizontalAlign` is \"left\", this offset will increase or decrease\nthe distance to the left side of the screen: a negative offset will\nmove the dropdown to the left; a positive one, to the right.\n\nConversely if `horizontalAlign` is \"right\", this offset will increase\nor decrease the distance to the right side of the screen: a negative\noffset will move the dropdown to the right; a positive one, to the left.",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 138,
              "column": 6
            },
            "end": {
              "line": 142,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "vertical-offset",
          "description": "A pixel value that will be added to the position calculated for the\ngiven `verticalAlign`, in the direction of alignment. You can think\nof it as increasing or decreasing the distance to the side of the\nscreen given by `verticalAlign`.\n\nIf `verticalAlign` is \"top\", this offset will increase or decrease\nthe distance to the top side of the screen: a negative offset will\nmove the dropdown upwards; a positive one, downwards.\n\nConversely if `verticalAlign` is \"bottom\", this offset will increase\nor decrease the distance to the bottom side of the screen: a negative\noffset will move the dropdown downwards; a positive one, upwards.",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 158,
              "column": 6
            },
            "end": {
              "line": 162,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "auto-fit-on-attach",
          "description": "Set to true to auto-fit on attach.",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 167,
              "column": 6
            },
            "end": {
              "line": 170,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "opened",
          "description": "True if the overlay is currently displayed.",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 28,
              "column": 6
            },
            "end": {
              "line": 33,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "canceled",
          "description": "True if the overlay was canceled when it was last closed.",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 38,
              "column": 6
            },
            "end": {
              "line": 43,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "with-backdrop",
          "description": "Set to true to display a backdrop behind the overlay. It traps the focus\nwithin the light DOM of the overlay.",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 49,
              "column": 6
            },
            "end": {
              "line": 52,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "no-auto-focus",
          "description": "Set to true to disable auto-focusing the overlay or child nodes with\nthe `autofocus` attribute` when the overlay is opened.",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 58,
              "column": 6
            },
            "end": {
              "line": 61,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "no-cancel-on-esc-key",
          "description": "Set to true to disable canceling the overlay with the ESC key.",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 66,
              "column": 6
            },
            "end": {
              "line": 69,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "no-cancel-on-outside-click",
          "description": "Set to true to disable canceling the overlay by clicking outside it.",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 74,
              "column": 6
            },
            "end": {
              "line": 77,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "closing-reason",
          "description": "Contains the reason(s) this overlay was last closed (see `iron-overlay-closed`).\n`IronOverlayBehavior` provides the `canceled` reason; implementers of the\nbehavior can provide other reasons in addition to `canceled`.",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 84,
              "column": 6
            },
            "end": {
              "line": 88,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "restore-focus-on-close",
          "description": "Set to true to enable restoring of focus when overlay is closed.",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 93,
              "column": 6
            },
            "end": {
              "line": 96,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "always-on-top",
          "description": "Set to true to keep overlay always on top.",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 101,
              "column": 6
            },
            "end": {
              "line": 103,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "horizontal-offset-changed",
          "description": "Fired when the `horizontalOffset` property changes.",
          "metadata": {},
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "type": "CustomEvent",
          "name": "vertical-offset-changed",
          "description": "Fired when the `verticalOffset` property changes.",
          "metadata": {},
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "type": "CustomEvent",
          "name": "opened-changed",
          "description": "Fired when the `opened` property changes.",
          "metadata": {},
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "type": "CustomEvent",
          "name": "iron-overlay-canceled",
          "description": "iron-overlay-canceled",
          "metadata": {},
          "inheritedFrom": "Polymer.IronOverlayBehavior"
        },
        {
          "type": "CustomEvent",
          "name": "iron-overlay-closed",
          "description": "iron-overlay-closed",
          "metadata": {},
          "inheritedFrom": "Polymer.IronOverlayBehavior"
        },
        {
          "type": "CustomEvent",
          "name": "iron-overlay-opened",
          "description": "iron-overlay-opened",
          "metadata": {},
          "inheritedFrom": "Polymer.IronOverlayBehavior"
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [
        {
          "description": "",
          "name": "",
          "range": {
            "file": "overlay-element.html",
            "start": {
              "line": 5,
              "column": 4
            },
            "end": {
              "line": 5,
              "column": 17
            }
          }
        }
      ],
      "tagname": "overlay-element",
      "mixins": [
        "Polymer.IronOverlayBehavior"
      ]
    },
    {
      "description": "`<time-element>` adds a time-input to your page using Polymer.\n\nIf you like to connect it to an input, try it like:\n\n ```html\n    <input type=\"time\" value=\"{{time::input}}\" step=\"1\">\n\n    <time-element time=\"{{time}}\"></time-element>\n ```\n\nFor example if you clamp on `milliseconds`, you can round to `0` milliseconds and hide the input. If you set `clamp=\"seconds\"` the inputs for *seconds* and *milliseconds* are hidden.\n\nThe following custom properties and mixins are also available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--datetime-background` | text-color of the time-element | `#2b2b2b`\n`--datetime-color` | text-color of the time-element | `#dadada`\n`--datetime-selected-background` | background-color of the focussed time-input and the hovered icons and buttons | `--primary-color, #394FE8`\n`--datetime-selected-color` | color of the focussed time-input and the hovered icons and buttons | `#f5f5f5`\n`--datetime-element` | Mixin applied to the time-element and the calender-element | `{border-radius: 4px; padding: 4px;}`\n`--datetime-picker` | Mixin applied to the picker | `{ box-shadow: 0 3px 4px 0 rgba(0, 0, 0, 0.14), 0 1px 8px 0 rgba(0, 0, 0, 0.12), 0 3px 3px -2px rgba(0, 0, 0, 0.4); }`\n`--datetime-input` | Mixin applied to the inputs | {border-radius: 4px; padding: 0.3em 0.2em; border: none; outline: none; text-align: center; color: inherit; cursor: pointer; background-color: transparent; box-sizing: content-box; transition: background-color 150ms cubic-bezier(0.6, 1, 0.2, 1);}`\n`--datetime-icon` | Mixin applied to closing icon | `{border-radius: 2px; padding: 8px; height: 16px; width: 16px; background-color: transparent; transition: background-color 150ms cubic-bezier(0.6, 1, 0.2, 1); cursor: pointer; fill: currentColor; }`",
      "summary": "",
      "path": "time-element.html",
      "properties": [
        {
          "name": "clamp",
          "type": "string",
          "description": "clamp datetime to a property\npossible values: 'month', 'day', 'hours', 'minutes', 'seconds', 'milliseconds'",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 73,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_hideMinutes",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 8
            },
            "end": {
              "line": 104,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "_hideSeconds",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 106,
              "column": 8
            },
            "end": {
              "line": 109,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "_hideMilliSeconds",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 111,
              "column": 8
            },
            "end": {
              "line": 114,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "datetime",
          "type": "string",
          "description": "the selected date and time (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 20,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "type": "string",
          "description": "the selected date (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 24,
              "column": 10
            },
            "end": {
              "line": 28,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "type": "string",
          "description": "the selected time (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "year",
          "type": "number",
          "description": "The year of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 42,
              "column": 10
            },
            "end": {
              "line": 45,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "type": "number",
          "description": "The month of the selected date (starts with 1)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 50,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "type": "number",
          "description": "The day of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 61,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hours",
          "type": "number",
          "description": "The hours of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 66,
              "column": 10
            },
            "end": {
              "line": 70,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_hoursChanged\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minutes",
          "type": "number",
          "description": "The minutes of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 75,
              "column": 10
            },
            "end": {
              "line": 78,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "seconds",
          "type": "number",
          "description": "The seconds of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 83,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "milliseconds",
          "type": "number",
          "description": "The milliseconds of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 94,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value",
          "type": "number",
          "description": "The value of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 99,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueChanged\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "type": "string",
          "description": "The minimal date (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 112,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_minChanged\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "type": "string",
          "description": "The maximal date (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 117,
              "column": 10
            },
            "end": {
              "line": 121,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_maxChanged\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "type": "boolean",
          "description": "when true 12-hour local time format, else 24-hour",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 127,
              "column": 10
            },
            "end": {
              "line": 130,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "isAm",
          "type": "boolean",
          "description": "true, when A.M. (when `hours` < 12)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 136,
              "column": 10
            },
            "end": {
              "line": 139,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_isAmChanged\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hours12",
          "type": "number",
          "description": "hours in 12-hour-format",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 145,
              "column": 10
            },
            "end": {
              "line": 149,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_hours12Changed\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "locale",
          "type": "string",
          "description": "The current locale",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 22,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_localeChanged\""
            }
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_am",
          "type": "string",
          "description": "locale representation of 'AM'",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 31,
              "column": 10
            },
            "end": {
              "line": 33,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_pm",
          "type": "string",
          "description": "locale representation of 'PM'",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 38,
              "column": 10
            },
            "end": {
              "line": 40,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_localDateSeparator",
          "type": "string",
          "description": "Separator for local date values (date-string is still in ISO-Format)",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 46,
              "column": 10
            },
            "end": {
              "line": 49,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"-\"",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_localTimeSeparator",
          "type": "string",
          "description": "Separator for local time values (time-string is still in ISO-Format)",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 55,
              "column": 10
            },
            "end": {
              "line": 58,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\":\"",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_localDecimalSeparator",
          "type": "string",
          "description": "Separator for local decimal values",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 64,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\".\"",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_orderDate",
          "type": "Object",
          "description": "order of date-parts",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 80,
              "column": 10
            },
            "end": {
              "line": 91,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "DatetimePickerMixin"
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 139,
              "column": 6
            },
            "end": {
              "line": 145,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 147,
              "column": 6
            },
            "end": {
              "line": 150,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_startIncrem",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 149,
              "column": 4
            },
            "end": {
              "line": 157,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "s"
            }
          ],
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "_stopIncrem",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 4
            },
            "end": {
              "line": 163,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "_switchAm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 165,
              "column": 4
            },
            "end": {
              "line": 167,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "now",
          "description": "Sets value to the actual date",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 180,
              "column": 6
            },
            "end": {
              "line": 182,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTime",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 152,
              "column": 6
            },
            "end": {
              "line": 170,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hours"
            },
            {
              "name": "minutes"
            },
            {
              "name": "seconds"
            },
            {
              "name": "milliseconds"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_computeDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 172,
              "column": 6
            },
            "end": {
              "line": 186,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year"
            },
            {
              "name": "month"
            },
            {
              "name": "day"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_computeValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 200,
              "column": 6
            },
            "end": {
              "line": 232,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            },
            {
              "name": "time"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_valueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 234,
              "column": 6
            },
            "end": {
              "line": 262,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_pad",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 264,
              "column": 6
            },
            "end": {
              "line": 277,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n"
            },
            {
              "name": "padLength"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 279,
              "column": 6
            },
            "end": {
              "line": 292,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "min"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 294,
              "column": 6
            },
            "end": {
              "line": 307,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "max"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkMax",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 309,
              "column": 6
            },
            "end": {
              "line": 321,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkMin",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 323,
              "column": 6
            },
            "end": {
              "line": 335,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 337,
              "column": 6
            },
            "end": {
              "line": 342,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toTime",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 344,
              "column": 6
            },
            "end": {
              "line": 349,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_hoursChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 351,
              "column": 6
            },
            "end": {
              "line": 354,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hours"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_hours12Changed",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 356,
              "column": 6
            },
            "end": {
              "line": 358,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hours12"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_isAmChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 360,
              "column": 6
            },
            "end": {
              "line": 368,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isAm"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_hideIfClamped",
          "description": "hide features",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 194,
              "column": 6
            },
            "end": {
              "line": 199,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp",
              "type": "string",
              "description": "'clamp'-property"
            },
            {
              "name": "comp",
              "type": "string",
              "description": "the property to compare to"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "true when should be hidden"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_localeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 201,
              "column": 6
            },
            "end": {
              "line": 256,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_checkKeycode",
          "description": "key press event handler",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 262,
              "column": 6
            },
            "end": {
              "line": 266,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/time-picker.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 208,
          "column": 4
        },
        "end": {
          "line": 221,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "TimeElement",
      "attributes": [
        {
          "name": "clamp",
          "description": "clamp datetime to a property\npossible values: 'month', 'day', 'hours', 'minutes', 'seconds', 'milliseconds'",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 73,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "datetime",
          "description": "the selected date and time (format: iso8061)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 20,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "description": "the selected date (format: iso8061)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 24,
              "column": 10
            },
            "end": {
              "line": 28,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "description": "the selected time (format: iso8061)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "year",
          "description": "The year of the selected date",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 42,
              "column": 10
            },
            "end": {
              "line": 45,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "description": "The month of the selected date (starts with 1)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 50,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "description": "The day of the selected date",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 61,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hours",
          "description": "The hours of the selected time",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 66,
              "column": 10
            },
            "end": {
              "line": 70,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minutes",
          "description": "The minutes of the selected time",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 75,
              "column": 10
            },
            "end": {
              "line": 78,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "seconds",
          "description": "The seconds of the selected time",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 83,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "milliseconds",
          "description": "The milliseconds of the selected time",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 94,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value",
          "description": "The value of the selected date",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 99,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "description": "The minimal date (format: iso8061)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 112,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "description": "The maximal date (format: iso8061)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 117,
              "column": 10
            },
            "end": {
              "line": 121,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "description": "when true 12-hour local time format, else 24-hour",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 127,
              "column": 10
            },
            "end": {
              "line": 130,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "is-am",
          "description": "true, when A.M. (when `hours` < 12)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 136,
              "column": 10
            },
            "end": {
              "line": 139,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hours12",
          "description": "hours in 12-hour-format",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 145,
              "column": 10
            },
            "end": {
              "line": 149,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "locale",
          "description": "The current locale",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 22,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimePickerMixin"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "time-element",
      "mixins": [
        "TimeElementPattern",
        "DatetimePickerMixin"
      ]
    },
    {
      "description": "`datetime-picker` is a picker for date and time for **[Polymer](https://github.com/Polymer/polymer)** that can use the **native** input, too. If the **native** picker is choosen and is not supported, this element uses the **polyfill** datetime-picker. The `<calendar-element>` and the `<time-element>` will come in place if the native picker is not available or is not explicitly wanted. A range picker is provided by combining the `min`- and `max`-attributes.\n\n ```html\n   <datetime-picker value=\"{{value}}\"></datetime-picker>\n ```\n\n A use case could be for example, if you want on mobile devices use the `native picker` and on desktop devices this polyfill.\n\n ```html\n   <datetime-picker native=\"[[isMobile]]\"></datetime-picker>\n   ...\n     isMobile() {\n       const ua = window.navigator.userAgent;\n       return (/[mM]obi/i.test(ua) || /[tT]ablet/i.test(ua) || /[aA]ndroid/i.test(ua));\n     }\n   ...\n ```\n\n If you need an **overlay** then use `overlay-datetime-picker`, that creates the element in an `overlay-element`, that extends *IronOverlayBehavior* and will create some of its attribute-bindings.\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--datetime-background` | text-color of the time-element | `#2b2b2b`\n`--datetime-color` | text-color of the time-element | `#dadada`\n`--datetime-selected-background` | background-color of the focussed time-input and the hovered icons and buttons | `--primary-color, #394FE8`\n`--datetime-selected-color` | color of the focussed time-input and the hovered icons and buttons | `#f5f5f5`\n`--datetime-element` | Mixin applied to the time-element and the calender-element | `{border-radius: 4px; padding: 4px;}`\n`--datetime-picker` | Mixin applied to the picker | `{ box-shadow: 0 3px 4px 0 rgba(0, 0, 0, 0.14), 0 1px 8px 0 rgba(0, 0, 0, 0.12), 0 3px 3px -2px rgba(0, 0, 0, 0.4); }`\n`--datetime-input` | Mixin applied to the inputs | {border-radius: 4px; padding: 0.3em 0.2em; border: none; outline: none; text-align: center; color: inherit; cursor: pointer; background-color: transparent; box-sizing: content-box; transition: background-color 150ms cubic-bezier(0.6, 1, 0.2, 1);}`\n`--datetime-icon` | Mixin applied to closing icon | `{border-radius: 2px; padding: 8px; height: 16px; width: 16px; background-color: transparent; transition: background-color 150ms cubic-bezier(0.6, 1, 0.2, 1); cursor: pointer; fill: currentColor; }`",
      "summary": "",
      "path": "datetime-picker.html",
      "properties": [
        {
          "name": "clamp",
          "type": "string",
          "description": "clamp datetime to a property\npossible values: 'month', 'day', 'hours', 'minutes', 'seconds', 'milliseconds'",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 73,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "currentSelectedDayNode",
          "type": "Node",
          "description": "current hovered day node\nto access: bind the attribute ('current-hovered-day') and get its '.dataset.date'- property represents the DateString",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 181,
              "column": 8
            },
            "end": {
              "line": 184,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "currentHoveredDayNode",
          "type": "Node",
          "description": "node of the last selected day (warning: if view changes )\nto access: bind the attribute ('current-hovered-day') and get its '.dataset.date'- property represents the DateString",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 190,
              "column": 8
            },
            "end": {
              "line": 193,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_viewYear",
          "type": "number",
          "description": "The year of the view",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 198,
              "column": 8
            },
            "end": {
              "line": 201,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_viewMonth",
          "type": "number",
          "description": "The month of the view",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 206,
              "column": 8
            },
            "end": {
              "line": 209,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_hideMonth",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 211,
              "column": 8
            },
            "end": {
              "line": 214,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_hideDay",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 216,
              "column": 8
            },
            "end": {
              "line": 219,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_maxDayOfMonth",
          "type": "number",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 221,
              "column": 8
            },
            "end": {
              "line": 223,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_hideMinutes",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-element.html",
            "start": {
              "line": 101,
              "column": 8
            },
            "end": {
              "line": 104,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "_hideSeconds",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-element.html",
            "start": {
              "line": 106,
              "column": 8
            },
            "end": {
              "line": 109,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "_hideMilliSeconds",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-element.html",
            "start": {
              "line": 111,
              "column": 8
            },
            "end": {
              "line": 114,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "datetime",
          "type": "string",
          "description": "the selected date and time (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 20,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "type": "string",
          "description": "the selected date (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 24,
              "column": 10
            },
            "end": {
              "line": 28,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "type": "string",
          "description": "the selected time (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "year",
          "type": "number",
          "description": "The year of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 42,
              "column": 10
            },
            "end": {
              "line": 45,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "type": "number",
          "description": "The month of the selected date (starts with 1)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 50,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "type": "number",
          "description": "The day of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 61,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hours",
          "type": "number",
          "description": "The hours of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 66,
              "column": 10
            },
            "end": {
              "line": 70,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_hoursChanged\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minutes",
          "type": "number",
          "description": "The minutes of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 75,
              "column": 10
            },
            "end": {
              "line": 78,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "seconds",
          "type": "number",
          "description": "The seconds of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 83,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "milliseconds",
          "type": "number",
          "description": "The milliseconds of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 94,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value",
          "type": "number",
          "description": "The value of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 99,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueChanged\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "type": "string",
          "description": "The minimal date (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 112,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_minChanged\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "type": "string",
          "description": "The maximal date (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 117,
              "column": 10
            },
            "end": {
              "line": 121,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_maxChanged\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "type": "boolean",
          "description": "when true 12-hour local time format, else 24-hour",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 127,
              "column": 10
            },
            "end": {
              "line": 130,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "isAm",
          "type": "boolean",
          "description": "true, when A.M. (when `hours` < 12)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 136,
              "column": 10
            },
            "end": {
              "line": 139,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_isAmChanged\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hours12",
          "type": "number",
          "description": "hours in 12-hour-format",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 145,
              "column": 10
            },
            "end": {
              "line": 149,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_hours12Changed\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "locale",
          "type": "string",
          "description": "The current locale",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 22,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_localeChanged\""
            }
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_am",
          "type": "string",
          "description": "locale representation of 'AM'",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 31,
              "column": 10
            },
            "end": {
              "line": 33,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_pm",
          "type": "string",
          "description": "locale representation of 'PM'",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 38,
              "column": 10
            },
            "end": {
              "line": 40,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_localDateSeparator",
          "type": "string",
          "description": "Separator for local date values (date-string is still in ISO-Format)",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 46,
              "column": 10
            },
            "end": {
              "line": 49,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"-\"",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_localTimeSeparator",
          "type": "string",
          "description": "Separator for local time values (time-string is still in ISO-Format)",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 55,
              "column": 10
            },
            "end": {
              "line": 58,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\":\"",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_localDecimalSeparator",
          "type": "string",
          "description": "Separator for local decimal values",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 64,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\".\"",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_orderDate",
          "type": "Object",
          "description": "order of date-parts",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 80,
              "column": 10
            },
            "end": {
              "line": 91,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "native",
          "type": "boolean",
          "description": "use the native input, if it exists",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 34,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "opened",
          "type": "boolean",
          "description": "opens the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 42,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "horizontalAlign",
          "type": "string",
          "description": "The orientation against which to align the element horizontally\nrelative to the related input element. Possible values are \"left\", \"right\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 53,
              "column": 10
            },
            "end": {
              "line": 56,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "verticalAlign",
          "type": "string",
          "description": "The orientation against which to align the element vertically\nrelative to the related input element. Possible values are \"top\", \"bottom\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 61,
              "column": 10
            },
            "end": {
              "line": 65,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"top\"",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "disabled",
          "type": "boolean",
          "description": "disables the input elements",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 70,
              "column": 10
            },
            "end": {
              "line": 73,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "noCancelOnEscKey",
          "type": "boolean",
          "description": "Set to true to disable canceling the overlay with the ESC key.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 78,
              "column": 10
            },
            "end": {
              "line": 81,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 223,
              "column": 6
            },
            "end": {
              "line": 226,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 228,
              "column": 6
            },
            "end": {
              "line": 231,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_onClickDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 244,
              "column": 4
            },
            "end": {
              "line": 250,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_onMouseMoveDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 252,
              "column": 4
            },
            "end": {
              "line": 266,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_computeViewDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 268,
              "column": 4
            },
            "end": {
              "line": 278,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year"
            },
            {
              "name": "month"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "now",
          "description": "Sets value to the actual date",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 180,
              "column": 6
            },
            "end": {
              "line": 182,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_prev",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 286,
              "column": 4
            },
            "end": {
              "line": 288,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_next",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 290,
              "column": 4
            },
            "end": {
              "line": 292,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_increm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 294,
              "column": 4
            },
            "end": {
              "line": 307,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "i"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_incremViewMonth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 309,
              "column": 4
            },
            "end": {
              "line": 312,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "i"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_incremViewYear",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 314,
              "column": 4
            },
            "end": {
              "line": 316,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "i"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_cancelTimeout",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 318,
              "column": 4
            },
            "end": {
              "line": 322,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_localeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 201,
              "column": 6
            },
            "end": {
              "line": 256,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "renderCalendar",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 104,
              "column": 6
            },
            "end": {
              "line": 109,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_viewYear"
            },
            {
              "name": "_viewMonth"
            },
            {
              "name": "day"
            }
          ]
        },
        {
          "name": "_dayDiff",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 438,
              "column": 4
            },
            "end": {
              "line": 440,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "end"
            },
            {
              "name": "start"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_minChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 279,
              "column": 6
            },
            "end": {
              "line": 292,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "min"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 294,
              "column": 6
            },
            "end": {
              "line": 307,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "max"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkKeycode",
          "description": "key press event handler",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 237,
              "column": 6
            },
            "end": {
              "line": 244,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_startIncrem",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-element.html",
            "start": {
              "line": 149,
              "column": 4
            },
            "end": {
              "line": 157,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "s"
            }
          ],
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "_stopIncrem",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-element.html",
            "start": {
              "line": 159,
              "column": 4
            },
            "end": {
              "line": 163,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "_switchAm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-element.html",
            "start": {
              "line": 165,
              "column": 4
            },
            "end": {
              "line": 167,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "_computeTime",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 152,
              "column": 6
            },
            "end": {
              "line": 170,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hours"
            },
            {
              "name": "minutes"
            },
            {
              "name": "seconds"
            },
            {
              "name": "milliseconds"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_computeDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 172,
              "column": 6
            },
            "end": {
              "line": 186,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year"
            },
            {
              "name": "month"
            },
            {
              "name": "day"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_computeValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 200,
              "column": 6
            },
            "end": {
              "line": 232,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            },
            {
              "name": "time"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_valueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 234,
              "column": 6
            },
            "end": {
              "line": 262,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_pad",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 264,
              "column": 6
            },
            "end": {
              "line": 277,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n"
            },
            {
              "name": "padLength"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkMax",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 309,
              "column": 6
            },
            "end": {
              "line": 321,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkMin",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 323,
              "column": 6
            },
            "end": {
              "line": 335,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 337,
              "column": 6
            },
            "end": {
              "line": 342,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toTime",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 344,
              "column": 6
            },
            "end": {
              "line": 349,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_hoursChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 351,
              "column": 6
            },
            "end": {
              "line": 354,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hours"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_hours12Changed",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 356,
              "column": 6
            },
            "end": {
              "line": 358,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hours12"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_isAmChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 360,
              "column": 6
            },
            "end": {
              "line": 368,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isAm"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_hideIfClamped",
          "description": "hide features",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 194,
              "column": 6
            },
            "end": {
              "line": 199,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp",
              "type": "string",
              "description": "'clamp'-property"
            },
            {
              "name": "comp",
              "type": "string",
              "description": "the property to compare to"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "true when should be hidden"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "open",
          "description": "open the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 249,
              "column": 6
            },
            "end": {
              "line": 254,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "close",
          "description": "close the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 260,
              "column": 6
            },
            "end": {
              "line": 268,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "toggle",
          "description": "toggle the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 274,
              "column": 6
            },
            "end": {
              "line": 282,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "inheritedFrom": "InputPickerPattern"
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/datetime-picker.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 53,
          "column": 4
        },
        "end": {
          "line": 110,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "DatetimePicker",
      "attributes": [
        {
          "name": "clamp",
          "description": "clamp datetime to a property\npossible values: 'month', 'day', 'hours', 'minutes', 'seconds', 'milliseconds'",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 73,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "current-selected-day-node",
          "description": "current hovered day node\nto access: bind the attribute ('current-hovered-day') and get its '.dataset.date'- property represents the DateString",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 181,
              "column": 8
            },
            "end": {
              "line": 184,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Node",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "current-hovered-day-node",
          "description": "node of the last selected day (warning: if view changes )\nto access: bind the attribute ('current-hovered-day') and get its '.dataset.date'- property represents the DateString",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 190,
              "column": 8
            },
            "end": {
              "line": 193,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Node",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "datetime",
          "description": "the selected date and time (format: iso8061)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 20,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "description": "the selected date (format: iso8061)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 24,
              "column": 10
            },
            "end": {
              "line": 28,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "description": "the selected time (format: iso8061)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "year",
          "description": "The year of the selected date",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 42,
              "column": 10
            },
            "end": {
              "line": 45,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "description": "The month of the selected date (starts with 1)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 50,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "description": "The day of the selected date",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 61,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hours",
          "description": "The hours of the selected time",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 66,
              "column": 10
            },
            "end": {
              "line": 70,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minutes",
          "description": "The minutes of the selected time",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 75,
              "column": 10
            },
            "end": {
              "line": 78,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "seconds",
          "description": "The seconds of the selected time",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 83,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "milliseconds",
          "description": "The milliseconds of the selected time",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 94,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value",
          "description": "The value of the selected date",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 99,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "description": "The minimal date (format: iso8061)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 112,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "description": "The maximal date (format: iso8061)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 117,
              "column": 10
            },
            "end": {
              "line": 121,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "description": "when true 12-hour local time format, else 24-hour",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 127,
              "column": 10
            },
            "end": {
              "line": 130,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "is-am",
          "description": "true, when A.M. (when `hours` < 12)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 136,
              "column": 10
            },
            "end": {
              "line": 139,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hours12",
          "description": "hours in 12-hour-format",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 145,
              "column": 10
            },
            "end": {
              "line": 149,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "locale",
          "description": "The current locale",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 22,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "native",
          "description": "use the native input, if it exists",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 34,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "opened",
          "description": "opens the picker",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 42,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "horizontal-align",
          "description": "The orientation against which to align the element horizontally\nrelative to the related input element. Possible values are \"left\", \"right\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 53,
              "column": 10
            },
            "end": {
              "line": 56,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "vertical-align",
          "description": "The orientation against which to align the element vertically\nrelative to the related input element. Possible values are \"top\", \"bottom\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 61,
              "column": 10
            },
            "end": {
              "line": 65,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "disabled",
          "description": "disables the input elements",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 70,
              "column": 10
            },
            "end": {
              "line": 73,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "no-cancel-on-esc-key",
          "description": "Set to true to disable canceling the overlay with the ESC key.",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 78,
              "column": 10
            },
            "end": {
              "line": 81,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "InputPickerPattern"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "datetime-picker",
      "mixins": [
        "CalendarElementPattern",
        "TimeElementPattern",
        "DatetimePickerMixin",
        "PolyfillPickerPattern",
        "InputPickerPattern"
      ]
    },
    {
      "description": "`overlay-datetime-picker` extends `datetime-picker` and behaves simular.\n\n  ```html\n  <overlay-datetime-picker value=\"{{value}}\" ></overlay-datetime-picker>\n  ```\n\n A use case could be for example, if you want on mobile devices use the `native picker` and on desktop devices the polyfill.\n\n ```html\n   <overlay-datetime-picker native=\"[[isMobile]]\"></overlay-datetime-picker>\n   ...\n     isMobile() {\n       const ua = window.navigator.userAgent;\n       return (/[mM]obi/i.test(ua) || /[tT]ablet/i.test(ua) || /[aA]ndroid/i.test(ua));\n     }\n   ...\n ```\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--datetime-background` | text-color of the time-element | `#2b2b2b`\n`--datetime-color` | text-color of the time-element | `#dadada`\n`--datetime-selected-background` | background-color of the focussed time-input and the hovered icons and buttons | `--primary-color, #394FE8`\n`--datetime-selected-color` | color of the focussed time-input and the hovered icons and buttons | `#f5f5f5`\n`--datetime-element` | Mixin applied to the time-element and the calender-element | `{border-radius: 4px; padding: 4px;}`\n`--datetime-picker` | Mixin applied to the picker | `{ box-shadow: 0 3px 4px 0 rgba(0, 0, 0, 0.14), 0 1px 8px 0 rgba(0, 0, 0, 0.12), 0 3px 3px -2px rgba(0, 0, 0, 0.4); }`\n`--datetime-input` | Mixin applied to the inputs | {border-radius: 4px; padding: 0.3em 0.2em; border: none; outline: none; text-align: center; color: inherit; cursor: pointer; background-color: transparent; box-sizing: content-box; transition: background-color 150ms cubic-bezier(0.6, 1, 0.2, 1);}`\n`--datetime-icon` | Mixin applied to closing icon | `{border-radius: 2px; padding: 8px; height: 16px; width: 16px; background-color: transparent; transition: background-color 150ms cubic-bezier(0.6, 1, 0.2, 1); cursor: pointer; fill: currentColor; }`",
      "summary": "",
      "path": "overlay-datetime-picker.html",
      "properties": [
        {
          "name": "clamp",
          "type": "string",
          "description": "clamp datetime to a property\npossible values: 'month', 'day', 'hours', 'minutes', 'seconds', 'milliseconds'",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 73,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "currentSelectedDayNode",
          "type": "Node",
          "description": "current hovered day node\nto access: bind the attribute ('current-hovered-day') and get its '.dataset.date'- property represents the DateString",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 181,
              "column": 8
            },
            "end": {
              "line": 184,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "currentHoveredDayNode",
          "type": "Node",
          "description": "node of the last selected day (warning: if view changes )\nto access: bind the attribute ('current-hovered-day') and get its '.dataset.date'- property represents the DateString",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 190,
              "column": 8
            },
            "end": {
              "line": 193,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_viewYear",
          "type": "number",
          "description": "The year of the view",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 198,
              "column": 8
            },
            "end": {
              "line": 201,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_viewMonth",
          "type": "number",
          "description": "The month of the view",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 206,
              "column": 8
            },
            "end": {
              "line": 209,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_hideMonth",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 211,
              "column": 8
            },
            "end": {
              "line": 214,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_hideDay",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 216,
              "column": 8
            },
            "end": {
              "line": 219,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_maxDayOfMonth",
          "type": "number",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 221,
              "column": 8
            },
            "end": {
              "line": 223,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_hideMinutes",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-element.html",
            "start": {
              "line": 101,
              "column": 8
            },
            "end": {
              "line": 104,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "_hideSeconds",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-element.html",
            "start": {
              "line": 106,
              "column": 8
            },
            "end": {
              "line": 109,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "_hideMilliSeconds",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-element.html",
            "start": {
              "line": 111,
              "column": 8
            },
            "end": {
              "line": 114,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "datetime",
          "type": "string",
          "description": "the selected date and time (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 20,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "type": "string",
          "description": "the selected date (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 24,
              "column": 10
            },
            "end": {
              "line": 28,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "type": "string",
          "description": "the selected time (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "year",
          "type": "number",
          "description": "The year of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 42,
              "column": 10
            },
            "end": {
              "line": 45,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "type": "number",
          "description": "The month of the selected date (starts with 1)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 50,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "type": "number",
          "description": "The day of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 61,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hours",
          "type": "number",
          "description": "The hours of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 66,
              "column": 10
            },
            "end": {
              "line": 70,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_hoursChanged\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minutes",
          "type": "number",
          "description": "The minutes of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 75,
              "column": 10
            },
            "end": {
              "line": 78,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "seconds",
          "type": "number",
          "description": "The seconds of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 83,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "milliseconds",
          "type": "number",
          "description": "The milliseconds of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 94,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value",
          "type": "number",
          "description": "The value of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 99,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueChanged\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "type": "string",
          "description": "The minimal date (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 112,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_minChanged\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "type": "string",
          "description": "The maximal date (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 117,
              "column": 10
            },
            "end": {
              "line": 121,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_maxChanged\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "type": "boolean",
          "description": "when true 12-hour local time format, else 24-hour",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 127,
              "column": 10
            },
            "end": {
              "line": 130,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "isAm",
          "type": "boolean",
          "description": "true, when A.M. (when `hours` < 12)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 136,
              "column": 10
            },
            "end": {
              "line": 139,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_isAmChanged\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hours12",
          "type": "number",
          "description": "hours in 12-hour-format",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 145,
              "column": 10
            },
            "end": {
              "line": 149,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_hours12Changed\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "locale",
          "type": "string",
          "description": "The current locale",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 22,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_localeChanged\""
            }
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_am",
          "type": "string",
          "description": "locale representation of 'AM'",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 31,
              "column": 10
            },
            "end": {
              "line": 33,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_pm",
          "type": "string",
          "description": "locale representation of 'PM'",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 38,
              "column": 10
            },
            "end": {
              "line": 40,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_localDateSeparator",
          "type": "string",
          "description": "Separator for local date values (date-string is still in ISO-Format)",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 46,
              "column": 10
            },
            "end": {
              "line": 49,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"-\"",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_localTimeSeparator",
          "type": "string",
          "description": "Separator for local time values (time-string is still in ISO-Format)",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 55,
              "column": 10
            },
            "end": {
              "line": 58,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\":\"",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_localDecimalSeparator",
          "type": "string",
          "description": "Separator for local decimal values",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 64,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\".\"",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_orderDate",
          "type": "Object",
          "description": "order of date-parts",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 80,
              "column": 10
            },
            "end": {
              "line": 91,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "native",
          "type": "boolean",
          "description": "use the native input, if it exists",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 34,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "opened",
          "type": "boolean",
          "description": "opens the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 42,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "horizontalAlign",
          "type": "string",
          "description": "The orientation against which to align the element horizontally\nrelative to the related input element. Possible values are \"left\", \"right\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 53,
              "column": 10
            },
            "end": {
              "line": 56,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "verticalAlign",
          "type": "string",
          "description": "The orientation against which to align the element vertically\nrelative to the related input element. Possible values are \"top\", \"bottom\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 61,
              "column": 10
            },
            "end": {
              "line": 65,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"top\"",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "disabled",
          "type": "boolean",
          "description": "disables the input elements",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 70,
              "column": 10
            },
            "end": {
              "line": 73,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "noCancelOnEscKey",
          "type": "boolean",
          "description": "Set to true to disable canceling the overlay with the ESC key.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 78,
              "column": 10
            },
            "end": {
              "line": 81,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 223,
              "column": 6
            },
            "end": {
              "line": 226,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 228,
              "column": 6
            },
            "end": {
              "line": 231,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_onClickDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 244,
              "column": 4
            },
            "end": {
              "line": 250,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_onMouseMoveDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 252,
              "column": 4
            },
            "end": {
              "line": 266,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_computeViewDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 268,
              "column": 4
            },
            "end": {
              "line": 278,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year"
            },
            {
              "name": "month"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "now",
          "description": "Sets value to the actual date",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 180,
              "column": 6
            },
            "end": {
              "line": 182,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_prev",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 286,
              "column": 4
            },
            "end": {
              "line": 288,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_next",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 290,
              "column": 4
            },
            "end": {
              "line": 292,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_increm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 294,
              "column": 4
            },
            "end": {
              "line": 307,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "i"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_incremViewMonth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 309,
              "column": 4
            },
            "end": {
              "line": 312,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "i"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_incremViewYear",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 314,
              "column": 4
            },
            "end": {
              "line": 316,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "i"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_cancelTimeout",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 318,
              "column": 4
            },
            "end": {
              "line": 322,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_localeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 201,
              "column": 6
            },
            "end": {
              "line": 256,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "renderCalendar",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker.html",
            "start": {
              "line": 104,
              "column": 6
            },
            "end": {
              "line": 109,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_viewYear"
            },
            {
              "name": "_viewMonth"
            },
            {
              "name": "day"
            }
          ],
          "inheritedFrom": "DatetimePicker"
        },
        {
          "name": "_dayDiff",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 438,
              "column": 4
            },
            "end": {
              "line": 440,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "end"
            },
            {
              "name": "start"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_minChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 279,
              "column": 6
            },
            "end": {
              "line": 292,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "min"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 294,
              "column": 6
            },
            "end": {
              "line": 307,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "max"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkKeycode",
          "description": "key press event handler",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 237,
              "column": 6
            },
            "end": {
              "line": 244,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_startIncrem",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-element.html",
            "start": {
              "line": 149,
              "column": 4
            },
            "end": {
              "line": 157,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "s"
            }
          ],
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "_stopIncrem",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-element.html",
            "start": {
              "line": 159,
              "column": 4
            },
            "end": {
              "line": 163,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "_switchAm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-element.html",
            "start": {
              "line": 165,
              "column": 4
            },
            "end": {
              "line": 167,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "_computeTime",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 152,
              "column": 6
            },
            "end": {
              "line": 170,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hours"
            },
            {
              "name": "minutes"
            },
            {
              "name": "seconds"
            },
            {
              "name": "milliseconds"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_computeDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 172,
              "column": 6
            },
            "end": {
              "line": 186,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year"
            },
            {
              "name": "month"
            },
            {
              "name": "day"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_computeValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 200,
              "column": 6
            },
            "end": {
              "line": 232,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            },
            {
              "name": "time"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_valueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 234,
              "column": 6
            },
            "end": {
              "line": 262,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_pad",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 264,
              "column": 6
            },
            "end": {
              "line": 277,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n"
            },
            {
              "name": "padLength"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkMax",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 309,
              "column": 6
            },
            "end": {
              "line": 321,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkMin",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 323,
              "column": 6
            },
            "end": {
              "line": 335,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 337,
              "column": 6
            },
            "end": {
              "line": 342,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toTime",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 344,
              "column": 6
            },
            "end": {
              "line": 349,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_hoursChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 351,
              "column": 6
            },
            "end": {
              "line": 354,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hours"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_hours12Changed",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 356,
              "column": 6
            },
            "end": {
              "line": 358,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hours12"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_isAmChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 360,
              "column": 6
            },
            "end": {
              "line": 368,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isAm"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_hideIfClamped",
          "description": "hide features",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 194,
              "column": 6
            },
            "end": {
              "line": 199,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp",
              "type": "string",
              "description": "'clamp'-property"
            },
            {
              "name": "comp",
              "type": "string",
              "description": "the property to compare to"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "true when should be hidden"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "open",
          "description": "open the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 249,
              "column": 6
            },
            "end": {
              "line": 254,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "close",
          "description": "close the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 260,
              "column": 6
            },
            "end": {
              "line": 268,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "toggle",
          "description": "toggle the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 274,
              "column": 6
            },
            "end": {
              "line": 282,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "inheritedFrom": "InputPickerPattern"
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/overlay.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 43,
          "column": 4
        },
        "end": {
          "line": 49,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "OverlayDatetimePicker",
      "attributes": [
        {
          "name": "clamp",
          "description": "clamp datetime to a property\npossible values: 'month', 'day', 'hours', 'minutes', 'seconds', 'milliseconds'",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 73,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "current-selected-day-node",
          "description": "current hovered day node\nto access: bind the attribute ('current-hovered-day') and get its '.dataset.date'- property represents the DateString",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 181,
              "column": 8
            },
            "end": {
              "line": 184,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Node",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "current-hovered-day-node",
          "description": "node of the last selected day (warning: if view changes )\nto access: bind the attribute ('current-hovered-day') and get its '.dataset.date'- property represents the DateString",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 190,
              "column": 8
            },
            "end": {
              "line": 193,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Node",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "datetime",
          "description": "the selected date and time (format: iso8061)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 20,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "description": "the selected date (format: iso8061)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 24,
              "column": 10
            },
            "end": {
              "line": 28,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "description": "the selected time (format: iso8061)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "year",
          "description": "The year of the selected date",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 42,
              "column": 10
            },
            "end": {
              "line": 45,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "description": "The month of the selected date (starts with 1)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 50,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "description": "The day of the selected date",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 61,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hours",
          "description": "The hours of the selected time",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 66,
              "column": 10
            },
            "end": {
              "line": 70,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minutes",
          "description": "The minutes of the selected time",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 75,
              "column": 10
            },
            "end": {
              "line": 78,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "seconds",
          "description": "The seconds of the selected time",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 83,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "milliseconds",
          "description": "The milliseconds of the selected time",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 94,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value",
          "description": "The value of the selected date",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 99,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "description": "The minimal date (format: iso8061)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 112,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "description": "The maximal date (format: iso8061)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 117,
              "column": 10
            },
            "end": {
              "line": 121,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "description": "when true 12-hour local time format, else 24-hour",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 127,
              "column": 10
            },
            "end": {
              "line": 130,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "is-am",
          "description": "true, when A.M. (when `hours` < 12)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 136,
              "column": 10
            },
            "end": {
              "line": 139,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hours12",
          "description": "hours in 12-hour-format",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 145,
              "column": 10
            },
            "end": {
              "line": 149,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "locale",
          "description": "The current locale",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 22,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "native",
          "description": "use the native input, if it exists",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 34,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "opened",
          "description": "opens the picker",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 42,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "horizontal-align",
          "description": "The orientation against which to align the element horizontally\nrelative to the related input element. Possible values are \"left\", \"right\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 53,
              "column": 10
            },
            "end": {
              "line": 56,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "vertical-align",
          "description": "The orientation against which to align the element vertically\nrelative to the related input element. Possible values are \"top\", \"bottom\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 61,
              "column": 10
            },
            "end": {
              "line": 65,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "disabled",
          "description": "disables the input elements",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 70,
              "column": 10
            },
            "end": {
              "line": 73,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "no-cancel-on-esc-key",
          "description": "Set to true to disable canceling the overlay with the ESC key.",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 78,
              "column": 10
            },
            "end": {
              "line": 81,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "InputPickerPattern"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "overlay-datetime-picker"
    },
    {
      "description": "`overlay-date-picker` extends `date-picker` in an overlay.\n\n  ```html\n  <overlay-date-picker value=\"{{value}}\" ></overlay-date-picker>\n  ```\n\n A use case could be for example, if you want on mobile devices use the `native picker` and on desktop devices the polyfill.\n\n ```html\n   <overlay-date-picker native=\"[[isMobile]]\"></overlay-date-picker>\n   ...\n     isMobile() {\n       const ua = window.navigator.userAgent;\n       return (/[mM]obi/i.test(ua) || /[tT]ablet/i.test(ua) || /[aA]ndroid/i.test(ua));\n     }\n   ...\n ```\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--datetime-background` | text-color of the time-element | `#2b2b2b`\n`--datetime-color` | text-color of the time-element | `#dadada`\n`--datetime-selected-background` | background-color of the focussed time-input and the hovered icons and buttons | `--primary-color, #394FE8`\n`--datetime-selected-color` | color of the focussed time-input and the hovered icons and buttons | `#f5f5f5`\n`--datetime-element` | Mixin applied to the time-element and the calender-element | `{border-radius: 4px; padding: 4px;}`\n`--datetime-picker` | Mixin applied to the picker | `{ box-shadow: 0 3px 4px 0 rgba(0, 0, 0, 0.14), 0 1px 8px 0 rgba(0, 0, 0, 0.12), 0 3px 3px -2px rgba(0, 0, 0, 0.4); }`\n`--datetime-input` | Mixin applied to the inputs | {border-radius: 4px; padding: 0.3em 0.2em; border: none; outline: none; text-align: center; color: inherit; cursor: pointer; background-color: transparent; box-sizing: content-box; transition: background-color 150ms cubic-bezier(0.6, 1, 0.2, 1);}`\n`--datetime-icon` | Mixin applied to closing icon | `{border-radius: 2px; padding: 8px; height: 16px; width: 16px; background-color: transparent; transition: background-color 150ms cubic-bezier(0.6, 1, 0.2, 1); cursor: pointer; fill: currentColor; }`",
      "summary": "",
      "path": "overlay-date-picker.html",
      "properties": [
        {
          "name": "clamp",
          "type": "string",
          "description": "clamp datetime to a property\npossible values: 'month', 'day', 'hours', 'minutes', 'seconds', 'milliseconds'",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 73,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "currentSelectedDayNode",
          "type": "Node",
          "description": "current hovered day node\nto access: bind the attribute ('current-hovered-day') and get its '.dataset.date'- property represents the DateString",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 181,
              "column": 8
            },
            "end": {
              "line": 184,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "currentHoveredDayNode",
          "type": "Node",
          "description": "node of the last selected day (warning: if view changes )\nto access: bind the attribute ('current-hovered-day') and get its '.dataset.date'- property represents the DateString",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 190,
              "column": 8
            },
            "end": {
              "line": 193,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_viewYear",
          "type": "number",
          "description": "The year of the view",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 198,
              "column": 8
            },
            "end": {
              "line": 201,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_viewMonth",
          "type": "number",
          "description": "The month of the view",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 206,
              "column": 8
            },
            "end": {
              "line": 209,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_hideMonth",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 211,
              "column": 8
            },
            "end": {
              "line": 214,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_hideDay",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 216,
              "column": 8
            },
            "end": {
              "line": 219,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_maxDayOfMonth",
          "type": "number",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 221,
              "column": 8
            },
            "end": {
              "line": 223,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "datetime",
          "type": "string",
          "description": "the selected date and time (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 20,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "type": "string",
          "description": "the selected date (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 24,
              "column": 10
            },
            "end": {
              "line": 28,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "type": "string",
          "description": "the selected time (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "year",
          "type": "number",
          "description": "The year of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 42,
              "column": 10
            },
            "end": {
              "line": 45,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "type": "number",
          "description": "The month of the selected date (starts with 1)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 50,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "type": "number",
          "description": "The day of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 61,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hours",
          "type": "number",
          "description": "The hours of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 66,
              "column": 10
            },
            "end": {
              "line": 70,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_hoursChanged\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minutes",
          "type": "number",
          "description": "The minutes of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 75,
              "column": 10
            },
            "end": {
              "line": 78,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "seconds",
          "type": "number",
          "description": "The seconds of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 83,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "milliseconds",
          "type": "number",
          "description": "The milliseconds of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 94,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value",
          "type": "number",
          "description": "The value of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 99,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueChanged\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "type": "string",
          "description": "The minimal date (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 112,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_minChanged\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "type": "string",
          "description": "The maximal date (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 117,
              "column": 10
            },
            "end": {
              "line": 121,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_maxChanged\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "type": "boolean",
          "description": "when true 12-hour local time format, else 24-hour",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 127,
              "column": 10
            },
            "end": {
              "line": 130,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "isAm",
          "type": "boolean",
          "description": "true, when A.M. (when `hours` < 12)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 136,
              "column": 10
            },
            "end": {
              "line": 139,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_isAmChanged\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hours12",
          "type": "number",
          "description": "hours in 12-hour-format",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 145,
              "column": 10
            },
            "end": {
              "line": 149,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_hours12Changed\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "locale",
          "type": "string",
          "description": "The current locale",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 22,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_localeChanged\""
            }
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_am",
          "type": "string",
          "description": "locale representation of 'AM'",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 31,
              "column": 10
            },
            "end": {
              "line": 33,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_pm",
          "type": "string",
          "description": "locale representation of 'PM'",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 38,
              "column": 10
            },
            "end": {
              "line": 40,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_localDateSeparator",
          "type": "string",
          "description": "Separator for local date values (date-string is still in ISO-Format)",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 46,
              "column": 10
            },
            "end": {
              "line": 49,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"-\"",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_localTimeSeparator",
          "type": "string",
          "description": "Separator for local time values (time-string is still in ISO-Format)",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 55,
              "column": 10
            },
            "end": {
              "line": 58,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\":\"",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_localDecimalSeparator",
          "type": "string",
          "description": "Separator for local decimal values",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 64,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\".\"",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_orderDate",
          "type": "Object",
          "description": "order of date-parts",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 80,
              "column": 10
            },
            "end": {
              "line": 91,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "native",
          "type": "boolean",
          "description": "use the native input, if it exists",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 34,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "opened",
          "type": "boolean",
          "description": "opens the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 42,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "horizontalAlign",
          "type": "string",
          "description": "The orientation against which to align the element horizontally\nrelative to the related input element. Possible values are \"left\", \"right\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 53,
              "column": 10
            },
            "end": {
              "line": 56,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "verticalAlign",
          "type": "string",
          "description": "The orientation against which to align the element vertically\nrelative to the related input element. Possible values are \"top\", \"bottom\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 61,
              "column": 10
            },
            "end": {
              "line": 65,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"top\"",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "disabled",
          "type": "boolean",
          "description": "disables the input elements",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 70,
              "column": 10
            },
            "end": {
              "line": 73,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "noCancelOnEscKey",
          "type": "boolean",
          "description": "Set to true to disable canceling the overlay with the ESC key.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 78,
              "column": 10
            },
            "end": {
              "line": 81,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 223,
              "column": 6
            },
            "end": {
              "line": 226,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 228,
              "column": 6
            },
            "end": {
              "line": 231,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_onClickDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 244,
              "column": 4
            },
            "end": {
              "line": 250,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_onMouseMoveDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 252,
              "column": 4
            },
            "end": {
              "line": 266,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_computeViewDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 268,
              "column": 4
            },
            "end": {
              "line": 278,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year"
            },
            {
              "name": "month"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "now",
          "description": "Sets value to the actual date",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 180,
              "column": 6
            },
            "end": {
              "line": 182,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_prev",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 286,
              "column": 4
            },
            "end": {
              "line": 288,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_next",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 290,
              "column": 4
            },
            "end": {
              "line": 292,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_increm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 294,
              "column": 4
            },
            "end": {
              "line": 307,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "i"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_incremViewMonth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 309,
              "column": 4
            },
            "end": {
              "line": 312,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "i"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_incremViewYear",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 314,
              "column": 4
            },
            "end": {
              "line": 316,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "i"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_cancelTimeout",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 318,
              "column": 4
            },
            "end": {
              "line": 322,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_localeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 201,
              "column": 6
            },
            "end": {
              "line": 256,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "renderCalendar",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "date-picker.html",
            "start": {
              "line": 71,
              "column": 6
            },
            "end": {
              "line": 76,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_viewYear"
            },
            {
              "name": "_viewMonth"
            },
            {
              "name": "day"
            }
          ],
          "inheritedFrom": "DatePicker"
        },
        {
          "name": "_dayDiff",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 438,
              "column": 4
            },
            "end": {
              "line": 440,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "end"
            },
            {
              "name": "start"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_minChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 279,
              "column": 6
            },
            "end": {
              "line": 292,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "min"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 294,
              "column": 6
            },
            "end": {
              "line": 307,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "max"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkKeycode",
          "description": "key press event handler",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 237,
              "column": 6
            },
            "end": {
              "line": 244,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_computeTime",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 152,
              "column": 6
            },
            "end": {
              "line": 170,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hours"
            },
            {
              "name": "minutes"
            },
            {
              "name": "seconds"
            },
            {
              "name": "milliseconds"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_computeDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 172,
              "column": 6
            },
            "end": {
              "line": 186,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year"
            },
            {
              "name": "month"
            },
            {
              "name": "day"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_computeValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 200,
              "column": 6
            },
            "end": {
              "line": 232,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            },
            {
              "name": "time"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_valueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 234,
              "column": 6
            },
            "end": {
              "line": 262,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_pad",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 264,
              "column": 6
            },
            "end": {
              "line": 277,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n"
            },
            {
              "name": "padLength"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkMax",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 309,
              "column": 6
            },
            "end": {
              "line": 321,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkMin",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 323,
              "column": 6
            },
            "end": {
              "line": 335,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 337,
              "column": 6
            },
            "end": {
              "line": 342,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toTime",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 344,
              "column": 6
            },
            "end": {
              "line": 349,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_hoursChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 351,
              "column": 6
            },
            "end": {
              "line": 354,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hours"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_hours12Changed",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 356,
              "column": 6
            },
            "end": {
              "line": 358,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hours12"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_isAmChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 360,
              "column": 6
            },
            "end": {
              "line": 368,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isAm"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_hideIfClamped",
          "description": "hide features",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 194,
              "column": 6
            },
            "end": {
              "line": 199,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp",
              "type": "string",
              "description": "'clamp'-property"
            },
            {
              "name": "comp",
              "type": "string",
              "description": "the property to compare to"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "true when should be hidden"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "open",
          "description": "open the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 249,
              "column": 6
            },
            "end": {
              "line": 254,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "close",
          "description": "close the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 260,
              "column": 6
            },
            "end": {
              "line": 268,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "toggle",
          "description": "toggle the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 274,
              "column": 6
            },
            "end": {
              "line": 282,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "inheritedFrom": "InputPickerPattern"
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/overlay.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 43,
          "column": 4
        },
        "end": {
          "line": 49,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "OverlayDatePicker",
      "attributes": [
        {
          "name": "clamp",
          "description": "clamp datetime to a property\npossible values: 'month', 'day', 'hours', 'minutes', 'seconds', 'milliseconds'",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 73,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "current-selected-day-node",
          "description": "current hovered day node\nto access: bind the attribute ('current-hovered-day') and get its '.dataset.date'- property represents the DateString",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 181,
              "column": 8
            },
            "end": {
              "line": 184,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Node",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "current-hovered-day-node",
          "description": "node of the last selected day (warning: if view changes )\nto access: bind the attribute ('current-hovered-day') and get its '.dataset.date'- property represents the DateString",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 190,
              "column": 8
            },
            "end": {
              "line": 193,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Node",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "datetime",
          "description": "the selected date and time (format: iso8061)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 20,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "description": "the selected date (format: iso8061)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 24,
              "column": 10
            },
            "end": {
              "line": 28,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "description": "the selected time (format: iso8061)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "year",
          "description": "The year of the selected date",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 42,
              "column": 10
            },
            "end": {
              "line": 45,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "description": "The month of the selected date (starts with 1)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 50,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "description": "The day of the selected date",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 61,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hours",
          "description": "The hours of the selected time",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 66,
              "column": 10
            },
            "end": {
              "line": 70,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minutes",
          "description": "The minutes of the selected time",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 75,
              "column": 10
            },
            "end": {
              "line": 78,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "seconds",
          "description": "The seconds of the selected time",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 83,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "milliseconds",
          "description": "The milliseconds of the selected time",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 94,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value",
          "description": "The value of the selected date",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 99,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "description": "The minimal date (format: iso8061)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 112,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "description": "The maximal date (format: iso8061)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 117,
              "column": 10
            },
            "end": {
              "line": 121,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "description": "when true 12-hour local time format, else 24-hour",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 127,
              "column": 10
            },
            "end": {
              "line": 130,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "is-am",
          "description": "true, when A.M. (when `hours` < 12)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 136,
              "column": 10
            },
            "end": {
              "line": 139,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hours12",
          "description": "hours in 12-hour-format",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 145,
              "column": 10
            },
            "end": {
              "line": 149,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "locale",
          "description": "The current locale",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 22,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "native",
          "description": "use the native input, if it exists",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 34,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "opened",
          "description": "opens the picker",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 42,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "horizontal-align",
          "description": "The orientation against which to align the element horizontally\nrelative to the related input element. Possible values are \"left\", \"right\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 53,
              "column": 10
            },
            "end": {
              "line": 56,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "vertical-align",
          "description": "The orientation against which to align the element vertically\nrelative to the related input element. Possible values are \"top\", \"bottom\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 61,
              "column": 10
            },
            "end": {
              "line": 65,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "disabled",
          "description": "disables the input elements",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 70,
              "column": 10
            },
            "end": {
              "line": 73,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "no-cancel-on-esc-key",
          "description": "Set to true to disable canceling the overlay with the ESC key.",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 78,
              "column": 10
            },
            "end": {
              "line": 81,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "InputPickerPattern"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "overlay-date-picker"
    },
    {
      "description": "`time-picker` is a picker for time for **[Polymer](https://github.com/Polymer/polymer)** that can use the **native** input, too. If the **native** picker is choosen and is not supported, this element uses the **polyfill** time-picker. The `<time-element>` will come in place if the native picker is not available or is not explicitly wanted. A range picker is provided by combining the `min`- and `max`-attributes.\n\n ```html\n   <time-picker value=\"{{value}}\"></time-picker>\n ```\n\n If you need an **overlay** then use `overlay-time-picker`, that creates the element in an `overlay-element`, that extends *IronOverlayBehavior* and will create some of its attribute-bindings.\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--datetime-background` | text-color of the time-element | `#2b2b2b`\n`--datetime-color` | text-color of the time-element | `#dadada`\n`--datetime-selected-background` | background-color of the focussed time-input and the hovered icons and buttons | `--primary-color, #394FE8`\n`--datetime-selected-color` | color of the focussed time-input and the hovered icons and buttons | `#f5f5f5`\n`--datetime-element` | Mixin applied to the time-element and the calender-element | `{border-radius: 4px; padding: 4px;}`\n`--datetime-picker` | Mixin applied to the picker | `{ box-shadow: 0 3px 4px 0 rgba(0, 0, 0, 0.14), 0 1px 8px 0 rgba(0, 0, 0, 0.12), 0 3px 3px -2px rgba(0, 0, 0, 0.4); }`\n`--datetime-input` | Mixin applied to the inputs | {border-radius: 4px; padding: 0.3em 0.2em; border: none; outline: none; text-align: center; color: inherit; cursor: pointer; background-color: transparent; box-sizing: content-box; transition: background-color 150ms cubic-bezier(0.6, 1, 0.2, 1);}`\n`--datetime-icon` | Mixin applied to closing icon | `{border-radius: 2px; padding: 8px; height: 16px; width: 16px; background-color: transparent; transition: background-color 150ms cubic-bezier(0.6, 1, 0.2, 1); cursor: pointer; fill: currentColor; }`",
      "summary": "",
      "path": "time-picker.html",
      "properties": [
        {
          "name": "clamp",
          "type": "string",
          "description": "clamp datetime to a property\npossible values: 'month', 'day', 'hours', 'minutes', 'seconds', 'milliseconds'",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 73,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_hideMinutes",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-element.html",
            "start": {
              "line": 101,
              "column": 8
            },
            "end": {
              "line": 104,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "_hideSeconds",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-element.html",
            "start": {
              "line": 106,
              "column": 8
            },
            "end": {
              "line": 109,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "_hideMilliSeconds",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-element.html",
            "start": {
              "line": 111,
              "column": 8
            },
            "end": {
              "line": 114,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "datetime",
          "type": "string",
          "description": "the selected date and time (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 20,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "type": "string",
          "description": "the selected date (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 24,
              "column": 10
            },
            "end": {
              "line": 28,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "type": "string",
          "description": "the selected time (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "year",
          "type": "number",
          "description": "The year of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 42,
              "column": 10
            },
            "end": {
              "line": 45,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "type": "number",
          "description": "The month of the selected date (starts with 1)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 50,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "type": "number",
          "description": "The day of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 61,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hours",
          "type": "number",
          "description": "The hours of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 66,
              "column": 10
            },
            "end": {
              "line": 70,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_hoursChanged\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minutes",
          "type": "number",
          "description": "The minutes of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 75,
              "column": 10
            },
            "end": {
              "line": 78,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "seconds",
          "type": "number",
          "description": "The seconds of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 83,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "milliseconds",
          "type": "number",
          "description": "The milliseconds of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 94,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value",
          "type": "number",
          "description": "The value of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 99,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueChanged\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "type": "string",
          "description": "The minimal date (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 112,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_minChanged\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "type": "string",
          "description": "The maximal date (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 117,
              "column": 10
            },
            "end": {
              "line": 121,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_maxChanged\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "type": "boolean",
          "description": "when true 12-hour local time format, else 24-hour",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 127,
              "column": 10
            },
            "end": {
              "line": 130,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "isAm",
          "type": "boolean",
          "description": "true, when A.M. (when `hours` < 12)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 136,
              "column": 10
            },
            "end": {
              "line": 139,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_isAmChanged\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hours12",
          "type": "number",
          "description": "hours in 12-hour-format",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 145,
              "column": 10
            },
            "end": {
              "line": 149,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_hours12Changed\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "locale",
          "type": "string",
          "description": "The current locale",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 22,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_localeChanged\""
            }
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_am",
          "type": "string",
          "description": "locale representation of 'AM'",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 31,
              "column": 10
            },
            "end": {
              "line": 33,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_pm",
          "type": "string",
          "description": "locale representation of 'PM'",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 38,
              "column": 10
            },
            "end": {
              "line": 40,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_localDateSeparator",
          "type": "string",
          "description": "Separator for local date values (date-string is still in ISO-Format)",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 46,
              "column": 10
            },
            "end": {
              "line": 49,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"-\"",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_localTimeSeparator",
          "type": "string",
          "description": "Separator for local time values (time-string is still in ISO-Format)",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 55,
              "column": 10
            },
            "end": {
              "line": 58,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\":\"",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_localDecimalSeparator",
          "type": "string",
          "description": "Separator for local decimal values",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 64,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\".\"",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_orderDate",
          "type": "Object",
          "description": "order of date-parts",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 80,
              "column": 10
            },
            "end": {
              "line": 91,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "native",
          "type": "boolean",
          "description": "use the native input, if it exists",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 34,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "opened",
          "type": "boolean",
          "description": "opens the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 42,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "horizontalAlign",
          "type": "string",
          "description": "The orientation against which to align the element horizontally\nrelative to the related input element. Possible values are \"left\", \"right\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 53,
              "column": 10
            },
            "end": {
              "line": 56,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "verticalAlign",
          "type": "string",
          "description": "The orientation against which to align the element vertically\nrelative to the related input element. Possible values are \"top\", \"bottom\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 61,
              "column": 10
            },
            "end": {
              "line": 65,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"top\"",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "disabled",
          "type": "boolean",
          "description": "disables the input elements",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 70,
              "column": 10
            },
            "end": {
              "line": 73,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "noCancelOnEscKey",
          "type": "boolean",
          "description": "Set to true to disable canceling the overlay with the ESC key.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 78,
              "column": 10
            },
            "end": {
              "line": 81,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 223,
              "column": 6
            },
            "end": {
              "line": 226,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 228,
              "column": 6
            },
            "end": {
              "line": 231,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_startIncrem",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-element.html",
            "start": {
              "line": 149,
              "column": 4
            },
            "end": {
              "line": 157,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "s"
            }
          ],
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "_stopIncrem",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-element.html",
            "start": {
              "line": 159,
              "column": 4
            },
            "end": {
              "line": 163,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "_switchAm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-element.html",
            "start": {
              "line": 165,
              "column": 4
            },
            "end": {
              "line": 167,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "now",
          "description": "Sets value to the actual date",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 180,
              "column": 6
            },
            "end": {
              "line": 182,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTime",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 152,
              "column": 6
            },
            "end": {
              "line": 170,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hours"
            },
            {
              "name": "minutes"
            },
            {
              "name": "seconds"
            },
            {
              "name": "milliseconds"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_computeDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 172,
              "column": 6
            },
            "end": {
              "line": 186,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year"
            },
            {
              "name": "month"
            },
            {
              "name": "day"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_computeValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 200,
              "column": 6
            },
            "end": {
              "line": 232,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            },
            {
              "name": "time"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_valueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 234,
              "column": 6
            },
            "end": {
              "line": 262,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_pad",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 264,
              "column": 6
            },
            "end": {
              "line": 277,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n"
            },
            {
              "name": "padLength"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 279,
              "column": 6
            },
            "end": {
              "line": 292,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "min"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 294,
              "column": 6
            },
            "end": {
              "line": 307,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "max"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkMax",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 309,
              "column": 6
            },
            "end": {
              "line": 321,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkMin",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 323,
              "column": 6
            },
            "end": {
              "line": 335,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 337,
              "column": 6
            },
            "end": {
              "line": 342,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toTime",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 344,
              "column": 6
            },
            "end": {
              "line": 349,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_hoursChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 351,
              "column": 6
            },
            "end": {
              "line": 354,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hours"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_hours12Changed",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 356,
              "column": 6
            },
            "end": {
              "line": 358,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hours12"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_isAmChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 360,
              "column": 6
            },
            "end": {
              "line": 368,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isAm"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_hideIfClamped",
          "description": "hide features",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 194,
              "column": 6
            },
            "end": {
              "line": 199,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp",
              "type": "string",
              "description": "'clamp'-property"
            },
            {
              "name": "comp",
              "type": "string",
              "description": "the property to compare to"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "true when should be hidden"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_localeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 201,
              "column": 6
            },
            "end": {
              "line": 256,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_checkKeycode",
          "description": "key press event handler",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 237,
              "column": 6
            },
            "end": {
              "line": 244,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "open",
          "description": "open the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 249,
              "column": 6
            },
            "end": {
              "line": 254,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "close",
          "description": "close the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 260,
              "column": 6
            },
            "end": {
              "line": 268,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "toggle",
          "description": "toggle the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 274,
              "column": 6
            },
            "end": {
              "line": 282,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "inheritedFrom": "InputPickerPattern"
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/time-picker.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 39,
          "column": 4
        },
        "end": {
          "line": 78,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "TimePicker",
      "attributes": [
        {
          "name": "clamp",
          "description": "clamp datetime to a property\npossible values: 'month', 'day', 'hours', 'minutes', 'seconds', 'milliseconds'",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 73,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "datetime",
          "description": "the selected date and time (format: iso8061)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 20,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "description": "the selected date (format: iso8061)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 24,
              "column": 10
            },
            "end": {
              "line": 28,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "description": "the selected time (format: iso8061)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "year",
          "description": "The year of the selected date",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 42,
              "column": 10
            },
            "end": {
              "line": 45,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "description": "The month of the selected date (starts with 1)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 50,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "description": "The day of the selected date",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 61,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hours",
          "description": "The hours of the selected time",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 66,
              "column": 10
            },
            "end": {
              "line": 70,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minutes",
          "description": "The minutes of the selected time",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 75,
              "column": 10
            },
            "end": {
              "line": 78,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "seconds",
          "description": "The seconds of the selected time",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 83,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "milliseconds",
          "description": "The milliseconds of the selected time",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 94,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value",
          "description": "The value of the selected date",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 99,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "description": "The minimal date (format: iso8061)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 112,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "description": "The maximal date (format: iso8061)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 117,
              "column": 10
            },
            "end": {
              "line": 121,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "description": "when true 12-hour local time format, else 24-hour",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 127,
              "column": 10
            },
            "end": {
              "line": 130,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "is-am",
          "description": "true, when A.M. (when `hours` < 12)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 136,
              "column": 10
            },
            "end": {
              "line": 139,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hours12",
          "description": "hours in 12-hour-format",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 145,
              "column": 10
            },
            "end": {
              "line": 149,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "locale",
          "description": "The current locale",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 22,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "native",
          "description": "use the native input, if it exists",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 34,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "opened",
          "description": "opens the picker",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 42,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "horizontal-align",
          "description": "The orientation against which to align the element horizontally\nrelative to the related input element. Possible values are \"left\", \"right\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 53,
              "column": 10
            },
            "end": {
              "line": 56,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "vertical-align",
          "description": "The orientation against which to align the element vertically\nrelative to the related input element. Possible values are \"top\", \"bottom\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 61,
              "column": 10
            },
            "end": {
              "line": 65,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "disabled",
          "description": "disables the input elements",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 70,
              "column": 10
            },
            "end": {
              "line": 73,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "no-cancel-on-esc-key",
          "description": "Set to true to disable canceling the overlay with the ESC key.",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 78,
              "column": 10
            },
            "end": {
              "line": 81,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "InputPickerPattern"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "time-picker",
      "mixins": [
        "TimeElementPattern",
        "DatetimePickerMixin",
        "PolyfillPickerPattern"
      ]
    },
    {
      "description": "`overlay-time-picker` extends `time-picker` in an overlay.\n\n  ```html\n  <overlay-time-picker value=\"{{value}}\"></overlay-time-picker>\n  ```\n\n A use case could be for example, if you want on mobile devices use the `native picker` and on desktop devices the polyfill.\n\n ```html\n   <overlay-time-picker native=\"[[isMobile]]\"></overlay-time-picker>\n   ...\n     isMobile() {\n       const ua = window.navigator.userAgent;\n       return (/[mM]obi/i.test(ua) || /[tT]ablet/i.test(ua) || /[aA]ndroid/i.test(ua));\n     }\n   ...\n ```\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--datetime-background` | text-color of the time-element | `#2b2b2b`\n`--datetime-color` | text-color of the time-element | `#dadada`\n`--datetime-selected-background` | background-color of the focussed time-input and the hovered icons and buttons | `--primary-color, #394FE8`\n`--datetime-selected-color` | color of the focussed time-input and the hovered icons and buttons | `#f5f5f5`\n`--datetime-element` | Mixin applied to the time-element and the calender-element | `{border-radius: 4px; padding: 4px;}`\n`--datetime-picker` | Mixin applied to the picker | `{ box-shadow: 0 3px 4px 0 rgba(0, 0, 0, 0.14), 0 1px 8px 0 rgba(0, 0, 0, 0.12), 0 3px 3px -2px rgba(0, 0, 0, 0.4); }`\n`--datetime-input` | Mixin applied to the inputs | {border-radius: 4px; padding: 0.3em 0.2em; border: none; outline: none; text-align: center; color: inherit; cursor: pointer; background-color: transparent; box-sizing: content-box; transition: background-color 150ms cubic-bezier(0.6, 1, 0.2, 1);}`\n`--datetime-icon` | Mixin applied to closing icon | `{border-radius: 2px; padding: 8px; height: 16px; width: 16px; background-color: transparent; transition: background-color 150ms cubic-bezier(0.6, 1, 0.2, 1); cursor: pointer; fill: currentColor; }`",
      "summary": "",
      "path": "overlay-time-picker.html",
      "properties": [
        {
          "name": "clamp",
          "type": "string",
          "description": "clamp datetime to a property\npossible values: 'month', 'day', 'hours', 'minutes', 'seconds', 'milliseconds'",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 73,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_hideMinutes",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-element.html",
            "start": {
              "line": 101,
              "column": 8
            },
            "end": {
              "line": 104,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "_hideSeconds",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-element.html",
            "start": {
              "line": 106,
              "column": 8
            },
            "end": {
              "line": 109,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "_hideMilliSeconds",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-element.html",
            "start": {
              "line": 111,
              "column": 8
            },
            "end": {
              "line": 114,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "datetime",
          "type": "string",
          "description": "the selected date and time (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 20,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "type": "string",
          "description": "the selected date (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 24,
              "column": 10
            },
            "end": {
              "line": 28,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "type": "string",
          "description": "the selected time (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "year",
          "type": "number",
          "description": "The year of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 42,
              "column": 10
            },
            "end": {
              "line": 45,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "type": "number",
          "description": "The month of the selected date (starts with 1)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 50,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "type": "number",
          "description": "The day of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 61,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hours",
          "type": "number",
          "description": "The hours of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 66,
              "column": 10
            },
            "end": {
              "line": 70,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_hoursChanged\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minutes",
          "type": "number",
          "description": "The minutes of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 75,
              "column": 10
            },
            "end": {
              "line": 78,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "seconds",
          "type": "number",
          "description": "The seconds of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 83,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "milliseconds",
          "type": "number",
          "description": "The milliseconds of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 94,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value",
          "type": "number",
          "description": "The value of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 99,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueChanged\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "type": "string",
          "description": "The minimal date (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 112,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_minChanged\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "type": "string",
          "description": "The maximal date (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 117,
              "column": 10
            },
            "end": {
              "line": 121,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_maxChanged\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "type": "boolean",
          "description": "when true 12-hour local time format, else 24-hour",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 127,
              "column": 10
            },
            "end": {
              "line": 130,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "isAm",
          "type": "boolean",
          "description": "true, when A.M. (when `hours` < 12)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 136,
              "column": 10
            },
            "end": {
              "line": 139,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_isAmChanged\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hours12",
          "type": "number",
          "description": "hours in 12-hour-format",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 145,
              "column": 10
            },
            "end": {
              "line": 149,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_hours12Changed\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "locale",
          "type": "string",
          "description": "The current locale",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 22,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_localeChanged\""
            }
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_am",
          "type": "string",
          "description": "locale representation of 'AM'",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 31,
              "column": 10
            },
            "end": {
              "line": 33,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_pm",
          "type": "string",
          "description": "locale representation of 'PM'",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 38,
              "column": 10
            },
            "end": {
              "line": 40,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_localDateSeparator",
          "type": "string",
          "description": "Separator for local date values (date-string is still in ISO-Format)",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 46,
              "column": 10
            },
            "end": {
              "line": 49,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"-\"",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_localTimeSeparator",
          "type": "string",
          "description": "Separator for local time values (time-string is still in ISO-Format)",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 55,
              "column": 10
            },
            "end": {
              "line": 58,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\":\"",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_localDecimalSeparator",
          "type": "string",
          "description": "Separator for local decimal values",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 64,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\".\"",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_orderDate",
          "type": "Object",
          "description": "order of date-parts",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 80,
              "column": 10
            },
            "end": {
              "line": 91,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "native",
          "type": "boolean",
          "description": "use the native input, if it exists",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 34,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "opened",
          "type": "boolean",
          "description": "opens the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 42,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "horizontalAlign",
          "type": "string",
          "description": "The orientation against which to align the element horizontally\nrelative to the related input element. Possible values are \"left\", \"right\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 53,
              "column": 10
            },
            "end": {
              "line": 56,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "verticalAlign",
          "type": "string",
          "description": "The orientation against which to align the element vertically\nrelative to the related input element. Possible values are \"top\", \"bottom\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 61,
              "column": 10
            },
            "end": {
              "line": 65,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"top\"",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "disabled",
          "type": "boolean",
          "description": "disables the input elements",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 70,
              "column": 10
            },
            "end": {
              "line": 73,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "noCancelOnEscKey",
          "type": "boolean",
          "description": "Set to true to disable canceling the overlay with the ESC key.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 78,
              "column": 10
            },
            "end": {
              "line": 81,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 223,
              "column": 6
            },
            "end": {
              "line": 226,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 228,
              "column": 6
            },
            "end": {
              "line": 231,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_startIncrem",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-element.html",
            "start": {
              "line": 149,
              "column": 4
            },
            "end": {
              "line": 157,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "s"
            }
          ],
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "_stopIncrem",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-element.html",
            "start": {
              "line": 159,
              "column": 4
            },
            "end": {
              "line": 163,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "_switchAm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-element.html",
            "start": {
              "line": 165,
              "column": 4
            },
            "end": {
              "line": 167,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "now",
          "description": "Sets value to the actual date",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 180,
              "column": 6
            },
            "end": {
              "line": 182,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTime",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 152,
              "column": 6
            },
            "end": {
              "line": 170,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hours"
            },
            {
              "name": "minutes"
            },
            {
              "name": "seconds"
            },
            {
              "name": "milliseconds"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_computeDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 172,
              "column": 6
            },
            "end": {
              "line": 186,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year"
            },
            {
              "name": "month"
            },
            {
              "name": "day"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_computeValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 200,
              "column": 6
            },
            "end": {
              "line": 232,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            },
            {
              "name": "time"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_valueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 234,
              "column": 6
            },
            "end": {
              "line": 262,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_pad",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 264,
              "column": 6
            },
            "end": {
              "line": 277,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n"
            },
            {
              "name": "padLength"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 279,
              "column": 6
            },
            "end": {
              "line": 292,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "min"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 294,
              "column": 6
            },
            "end": {
              "line": 307,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "max"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkMax",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 309,
              "column": 6
            },
            "end": {
              "line": 321,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkMin",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 323,
              "column": 6
            },
            "end": {
              "line": 335,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 337,
              "column": 6
            },
            "end": {
              "line": 342,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toTime",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 344,
              "column": 6
            },
            "end": {
              "line": 349,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_hoursChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 351,
              "column": 6
            },
            "end": {
              "line": 354,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hours"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_hours12Changed",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 356,
              "column": 6
            },
            "end": {
              "line": 358,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hours12"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_isAmChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 360,
              "column": 6
            },
            "end": {
              "line": 368,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isAm"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_hideIfClamped",
          "description": "hide features",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 194,
              "column": 6
            },
            "end": {
              "line": 199,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp",
              "type": "string",
              "description": "'clamp'-property"
            },
            {
              "name": "comp",
              "type": "string",
              "description": "the property to compare to"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "true when should be hidden"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_localeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 201,
              "column": 6
            },
            "end": {
              "line": 256,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_checkKeycode",
          "description": "key press event handler",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 237,
              "column": 6
            },
            "end": {
              "line": 244,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "open",
          "description": "open the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 249,
              "column": 6
            },
            "end": {
              "line": 254,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "close",
          "description": "close the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 260,
              "column": 6
            },
            "end": {
              "line": 268,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "toggle",
          "description": "toggle the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 274,
              "column": 6
            },
            "end": {
              "line": 282,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "inheritedFrom": "InputPickerPattern"
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/overlay.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 43,
          "column": 4
        },
        "end": {
          "line": 49,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "OverlayTimePicker",
      "attributes": [
        {
          "name": "clamp",
          "description": "clamp datetime to a property\npossible values: 'month', 'day', 'hours', 'minutes', 'seconds', 'milliseconds'",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 73,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "datetime",
          "description": "the selected date and time (format: iso8061)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 20,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "description": "the selected date (format: iso8061)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 24,
              "column": 10
            },
            "end": {
              "line": 28,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "description": "the selected time (format: iso8061)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "year",
          "description": "The year of the selected date",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 42,
              "column": 10
            },
            "end": {
              "line": 45,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "description": "The month of the selected date (starts with 1)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 50,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "description": "The day of the selected date",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 61,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hours",
          "description": "The hours of the selected time",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 66,
              "column": 10
            },
            "end": {
              "line": 70,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minutes",
          "description": "The minutes of the selected time",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 75,
              "column": 10
            },
            "end": {
              "line": 78,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "seconds",
          "description": "The seconds of the selected time",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 83,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "milliseconds",
          "description": "The milliseconds of the selected time",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 94,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value",
          "description": "The value of the selected date",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 99,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "description": "The minimal date (format: iso8061)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 112,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "description": "The maximal date (format: iso8061)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 117,
              "column": 10
            },
            "end": {
              "line": 121,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "description": "when true 12-hour local time format, else 24-hour",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 127,
              "column": 10
            },
            "end": {
              "line": 130,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "is-am",
          "description": "true, when A.M. (when `hours` < 12)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 136,
              "column": 10
            },
            "end": {
              "line": 139,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hours12",
          "description": "hours in 12-hour-format",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 145,
              "column": 10
            },
            "end": {
              "line": 149,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "locale",
          "description": "The current locale",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 22,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "native",
          "description": "use the native input, if it exists",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 34,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "opened",
          "description": "opens the picker",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 42,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "horizontal-align",
          "description": "The orientation against which to align the element horizontally\nrelative to the related input element. Possible values are \"left\", \"right\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 53,
              "column": 10
            },
            "end": {
              "line": 56,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "vertical-align",
          "description": "The orientation against which to align the element vertically\nrelative to the related input element. Possible values are \"top\", \"bottom\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 61,
              "column": 10
            },
            "end": {
              "line": 65,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "disabled",
          "description": "disables the input elements",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 70,
              "column": 10
            },
            "end": {
              "line": 73,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "no-cancel-on-esc-key",
          "description": "Set to true to disable canceling the overlay with the ESC key.",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 78,
              "column": 10
            },
            "end": {
              "line": 81,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "InputPickerPattern"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "overlay-time-picker"
    }
  ],
  "mixins": [
    {
      "description": "mixin to extend an element with a test for an expected input type and implement a polyfill, when wanted or needed",
      "summary": "",
      "path": "polyfill-picker-pattern.html",
      "properties": [
        {
          "name": "native",
          "type": "boolean",
          "description": "use the native input, if it exists",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 34,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "opened",
          "type": "boolean",
          "description": "opens the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 42,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "horizontalAlign",
          "type": "string",
          "description": "The orientation against which to align the element horizontally\nrelative to the related input element. Possible values are \"left\", \"right\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 53,
              "column": 10
            },
            "end": {
              "line": 56,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "verticalAlign",
          "type": "string",
          "description": "The orientation against which to align the element vertically\nrelative to the related input element. Possible values are \"top\", \"bottom\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 61,
              "column": 10
            },
            "end": {
              "line": 65,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"top\"",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "disabled",
          "type": "boolean",
          "description": "disables the input elements",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 70,
              "column": 10
            },
            "end": {
              "line": 73,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "noCancelOnEscKey",
          "type": "boolean",
          "description": "Set to true to disable canceling the overlay with the ESC key.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 78,
              "column": 10
            },
            "end": {
              "line": 81,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 223,
              "column": 6
            },
            "end": {
              "line": 226,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 228,
              "column": 6
            },
            "end": {
              "line": 231,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_checkKeycode",
          "description": "key press event handler",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 237,
              "column": 6
            },
            "end": {
              "line": 244,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "open",
          "description": "open the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 249,
              "column": 6
            },
            "end": {
              "line": 254,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "close",
          "description": "close the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 260,
              "column": 6
            },
            "end": {
              "line": 268,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "toggle",
          "description": "toggle the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 274,
              "column": 6
            },
            "end": {
              "line": 282,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "inheritedFrom": "InputPickerPattern"
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 11,
          "column": 2
        },
        "end": {
          "line": 49,
          "column": 3
        }
      },
      "privacy": "public",
      "name": "PolyfillPickerPattern",
      "attributes": [
        {
          "name": "native",
          "description": "use the native input, if it exists",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 34,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "opened",
          "description": "opens the picker",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 42,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "horizontal-align",
          "description": "The orientation against which to align the element horizontally\nrelative to the related input element. Possible values are \"left\", \"right\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 53,
              "column": 10
            },
            "end": {
              "line": 56,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "vertical-align",
          "description": "The orientation against which to align the element vertically\nrelative to the related input element. Possible values are \"top\", \"bottom\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 61,
              "column": 10
            },
            "end": {
              "line": 65,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "disabled",
          "description": "disables the input elements",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 70,
              "column": 10
            },
            "end": {
              "line": 73,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "no-cancel-on-esc-key",
          "description": "Set to true to disable canceling the overlay with the ESC key.",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\input-picker-pattern.html",
            "start": {
              "line": 78,
              "column": 10
            },
            "end": {
              "line": 81,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "InputPickerPattern"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "mixins": [
        "InputPickerPattern"
      ]
    },
    {
      "description": "Mixin that provides datetime-properties",
      "summary": "",
      "path": "datetime-mixin.html",
      "properties": [
        {
          "name": "datetime",
          "type": "string",
          "description": "the selected date and time (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 20,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        },
        {
          "name": "date",
          "type": "string",
          "description": "the selected date (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 24,
              "column": 10
            },
            "end": {
              "line": 28,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        },
        {
          "name": "time",
          "type": "string",
          "description": "the selected time (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        },
        {
          "name": "year",
          "type": "number",
          "description": "The year of the selected date",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 42,
              "column": 10
            },
            "end": {
              "line": 45,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        },
        {
          "name": "month",
          "type": "number",
          "description": "The month of the selected date (starts with 1)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 50,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        },
        {
          "name": "day",
          "type": "number",
          "description": "The day of the selected date",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 61,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        },
        {
          "name": "hours",
          "type": "number",
          "description": "The hours of the selected time",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 66,
              "column": 10
            },
            "end": {
              "line": 70,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_hoursChanged\""
            }
          }
        },
        {
          "name": "minutes",
          "type": "number",
          "description": "The minutes of the selected time",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 75,
              "column": 10
            },
            "end": {
              "line": 78,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        },
        {
          "name": "seconds",
          "type": "number",
          "description": "The seconds of the selected time",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 83,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        },
        {
          "name": "milliseconds",
          "type": "number",
          "description": "The milliseconds of the selected time",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 94,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        },
        {
          "name": "value",
          "type": "number",
          "description": "The value of the selected date",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 99,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueChanged\""
            }
          }
        },
        {
          "name": "min",
          "type": "string",
          "description": "The minimal date (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 112,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_minChanged\""
            }
          }
        },
        {
          "name": "max",
          "type": "string",
          "description": "The maximal date (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 117,
              "column": 10
            },
            "end": {
              "line": 121,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_maxChanged\""
            }
          }
        },
        {
          "name": "hour12",
          "type": "boolean",
          "description": "when true 12-hour local time format, else 24-hour",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 10
            },
            "end": {
              "line": 130,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "isAm",
          "type": "boolean",
          "description": "true, when A.M. (when `hours` < 12)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 10
            },
            "end": {
              "line": 139,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_isAmChanged\""
            }
          }
        },
        {
          "name": "hours12",
          "type": "number",
          "description": "hours in 12-hour-format",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 145,
              "column": 10
            },
            "end": {
              "line": 149,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_hours12Changed\""
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 162,
              "column": 6
            },
            "end": {
              "line": 175,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "now",
          "description": "Sets value to the actual date",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 180,
              "column": 6
            },
            "end": {
              "line": 182,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_computeTime",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 184,
              "column": 6
            },
            "end": {
              "line": 190,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hours"
            },
            {
              "name": "minutes"
            },
            {
              "name": "seconds"
            },
            {
              "name": "milliseconds"
            }
          ]
        },
        {
          "name": "_computeDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 192,
              "column": 6
            },
            "end": {
              "line": 198,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year"
            },
            {
              "name": "month"
            },
            {
              "name": "day"
            }
          ]
        },
        {
          "name": "_computeValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 200,
              "column": 6
            },
            "end": {
              "line": 232,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            },
            {
              "name": "time"
            }
          ]
        },
        {
          "name": "_valueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 234,
              "column": 6
            },
            "end": {
              "line": 262,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ]
        },
        {
          "name": "_pad",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 264,
              "column": 6
            },
            "end": {
              "line": 277,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n"
            },
            {
              "name": "padLength"
            }
          ]
        },
        {
          "name": "_minChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 279,
              "column": 6
            },
            "end": {
              "line": 292,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "min"
            }
          ]
        },
        {
          "name": "_maxChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 294,
              "column": 6
            },
            "end": {
              "line": 307,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "max"
            }
          ]
        },
        {
          "name": "_checkMax",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 309,
              "column": 6
            },
            "end": {
              "line": 321,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ]
        },
        {
          "name": "_checkMin",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 323,
              "column": 6
            },
            "end": {
              "line": 335,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ]
        },
        {
          "name": "_toDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 337,
              "column": 6
            },
            "end": {
              "line": 342,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ]
        },
        {
          "name": "_toTime",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 344,
              "column": 6
            },
            "end": {
              "line": 349,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ]
        },
        {
          "name": "_hoursChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 351,
              "column": 6
            },
            "end": {
              "line": 354,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hours"
            }
          ]
        },
        {
          "name": "_hours12Changed",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 356,
              "column": 6
            },
            "end": {
              "line": 358,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hours12"
            }
          ]
        },
        {
          "name": "_isAmChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 360,
              "column": 6
            },
            "end": {
              "line": 368,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isAm"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 7,
          "column": 2
        },
        "end": {
          "line": 371,
          "column": 3
        }
      },
      "privacy": "public",
      "name": "DatetimeMixin",
      "attributes": [
        {
          "name": "datetime",
          "description": "the selected date and time (format: iso8061)",
          "sourceRange": {
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 20,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "date",
          "description": "the selected date (format: iso8061)",
          "sourceRange": {
            "start": {
              "line": 24,
              "column": 10
            },
            "end": {
              "line": 28,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "time",
          "description": "the selected time (format: iso8061)",
          "sourceRange": {
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "year",
          "description": "The year of the selected date",
          "sourceRange": {
            "start": {
              "line": 42,
              "column": 10
            },
            "end": {
              "line": 45,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "month",
          "description": "The month of the selected date (starts with 1)",
          "sourceRange": {
            "start": {
              "line": 50,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "day",
          "description": "The day of the selected date",
          "sourceRange": {
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 61,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "hours",
          "description": "The hours of the selected time",
          "sourceRange": {
            "start": {
              "line": 66,
              "column": 10
            },
            "end": {
              "line": 70,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "minutes",
          "description": "The minutes of the selected time",
          "sourceRange": {
            "start": {
              "line": 75,
              "column": 10
            },
            "end": {
              "line": 78,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "seconds",
          "description": "The seconds of the selected time",
          "sourceRange": {
            "start": {
              "line": 83,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "milliseconds",
          "description": "The milliseconds of the selected time",
          "sourceRange": {
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 94,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "value",
          "description": "The value of the selected date",
          "sourceRange": {
            "start": {
              "line": 99,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "min",
          "description": "The minimal date (format: iso8061)",
          "sourceRange": {
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 112,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "max",
          "description": "The maximal date (format: iso8061)",
          "sourceRange": {
            "start": {
              "line": 117,
              "column": 10
            },
            "end": {
              "line": 121,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "hour12",
          "description": "when true 12-hour local time format, else 24-hour",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 10
            },
            "end": {
              "line": 130,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "is-am",
          "description": "true, when A.M. (when `hours` < 12)",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 10
            },
            "end": {
              "line": 139,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "hours12",
          "description": "hours in 12-hour-format",
          "sourceRange": {
            "start": {
              "line": 145,
              "column": 10
            },
            "end": {
              "line": 149,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    },
    {
      "description": "mixin to extend an element for picking date or time to locale formating and hiding certain datetime-properties",
      "summary": "",
      "path": "datetime-picker-mixin.html",
      "properties": [
        {
          "name": "datetime",
          "type": "string",
          "description": "the selected date and time (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 20,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "type": "string",
          "description": "the selected date (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 24,
              "column": 10
            },
            "end": {
              "line": 28,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "type": "string",
          "description": "the selected time (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "year",
          "type": "number",
          "description": "The year of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 42,
              "column": 10
            },
            "end": {
              "line": 45,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "type": "number",
          "description": "The month of the selected date (starts with 1)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 50,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "type": "number",
          "description": "The day of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 61,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hours",
          "type": "number",
          "description": "The hours of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 66,
              "column": 10
            },
            "end": {
              "line": 70,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_hoursChanged\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minutes",
          "type": "number",
          "description": "The minutes of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 75,
              "column": 10
            },
            "end": {
              "line": 78,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "seconds",
          "type": "number",
          "description": "The seconds of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 83,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "milliseconds",
          "type": "number",
          "description": "The milliseconds of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 94,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value",
          "type": "number",
          "description": "The value of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 99,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueChanged\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "type": "string",
          "description": "The minimal date (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 112,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_minChanged\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "type": "string",
          "description": "The maximal date (format: iso8061)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 117,
              "column": 10
            },
            "end": {
              "line": 121,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_maxChanged\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "type": "boolean",
          "description": "when true 12-hour local time format, else 24-hour",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 127,
              "column": 10
            },
            "end": {
              "line": 130,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "isAm",
          "type": "boolean",
          "description": "true, when A.M. (when `hours` < 12)",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 136,
              "column": 10
            },
            "end": {
              "line": 139,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_isAmChanged\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hours12",
          "type": "number",
          "description": "hours in 12-hour-format",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 145,
              "column": 10
            },
            "end": {
              "line": 149,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_hours12Changed\""
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "locale",
          "type": "string",
          "description": "The current locale",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 22,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_localeChanged\""
            }
          }
        },
        {
          "name": "_am",
          "type": "string",
          "description": "locale representation of 'AM'",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 31,
              "column": 10
            },
            "end": {
              "line": 33,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_pm",
          "type": "string",
          "description": "locale representation of 'PM'",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 38,
              "column": 10
            },
            "end": {
              "line": 40,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_localDateSeparator",
          "type": "string",
          "description": "Separator for local date values (date-string is still in ISO-Format)",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 46,
              "column": 10
            },
            "end": {
              "line": 49,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"-\""
        },
        {
          "name": "_localTimeSeparator",
          "type": "string",
          "description": "Separator for local time values (time-string is still in ISO-Format)",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 55,
              "column": 10
            },
            "end": {
              "line": 58,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\":\""
        },
        {
          "name": "_localDecimalSeparator",
          "type": "string",
          "description": "Separator for local decimal values",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 64,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\".\""
        },
        {
          "name": "clamp",
          "type": "string",
          "description": "clamp datetime to a property\npossible values: 'month', 'day', 'hours', 'minutes', 'seconds', 'milliseconds'",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_orderDate",
          "type": "Object",
          "description": "order of date-parts",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 80,
              "column": 10
            },
            "end": {
              "line": 91,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 139,
              "column": 6
            },
            "end": {
              "line": 145,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "now",
          "description": "Sets value to the actual date",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 180,
              "column": 6
            },
            "end": {
              "line": 182,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTime",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 152,
              "column": 6
            },
            "end": {
              "line": 170,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hours"
            },
            {
              "name": "minutes"
            },
            {
              "name": "seconds"
            },
            {
              "name": "milliseconds"
            }
          ]
        },
        {
          "name": "_computeDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 172,
              "column": 6
            },
            "end": {
              "line": 186,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year"
            },
            {
              "name": "month"
            },
            {
              "name": "day"
            }
          ]
        },
        {
          "name": "_computeValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 200,
              "column": 6
            },
            "end": {
              "line": 232,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            },
            {
              "name": "time"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_valueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 234,
              "column": 6
            },
            "end": {
              "line": 262,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_pad",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 264,
              "column": 6
            },
            "end": {
              "line": 277,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n"
            },
            {
              "name": "padLength"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 279,
              "column": 6
            },
            "end": {
              "line": 292,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "min"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 294,
              "column": 6
            },
            "end": {
              "line": 307,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "max"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkMax",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 309,
              "column": 6
            },
            "end": {
              "line": 321,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkMin",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 323,
              "column": 6
            },
            "end": {
              "line": 335,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 337,
              "column": 6
            },
            "end": {
              "line": 342,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toTime",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 344,
              "column": 6
            },
            "end": {
              "line": 349,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_hoursChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 351,
              "column": 6
            },
            "end": {
              "line": 354,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hours"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_hours12Changed",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 356,
              "column": 6
            },
            "end": {
              "line": 358,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hours12"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_isAmChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 360,
              "column": 6
            },
            "end": {
              "line": 368,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isAm"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 6
            },
            "end": {
              "line": 150,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_hideIfClamped",
          "description": "hide features",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 194,
              "column": 6
            },
            "end": {
              "line": 199,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp",
              "type": "string",
              "description": "'clamp'-property"
            },
            {
              "name": "comp",
              "type": "string",
              "description": "the property to compare to"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "true when should be hidden"
          }
        },
        {
          "name": "_localeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 201,
              "column": 6
            },
            "end": {
              "line": 256,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            }
          ]
        },
        {
          "name": "_checkKeycode",
          "description": "key press event handler",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 262,
              "column": 6
            },
            "end": {
              "line": 266,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 12,
          "column": 2
        },
        "end": {
          "line": 269,
          "column": 3
        }
      },
      "privacy": "public",
      "name": "DatetimePickerMixin",
      "attributes": [
        {
          "name": "datetime",
          "description": "the selected date and time (format: iso8061)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 20,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "description": "the selected date (format: iso8061)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 24,
              "column": 10
            },
            "end": {
              "line": 28,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "description": "the selected time (format: iso8061)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "year",
          "description": "The year of the selected date",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 42,
              "column": 10
            },
            "end": {
              "line": 45,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "description": "The month of the selected date (starts with 1)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 50,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "description": "The day of the selected date",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 61,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hours",
          "description": "The hours of the selected time",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 66,
              "column": 10
            },
            "end": {
              "line": 70,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minutes",
          "description": "The minutes of the selected time",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 75,
              "column": 10
            },
            "end": {
              "line": 78,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "seconds",
          "description": "The seconds of the selected time",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 83,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "milliseconds",
          "description": "The milliseconds of the selected time",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 94,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value",
          "description": "The value of the selected date",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 99,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "description": "The minimal date (format: iso8061)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 112,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "description": "The maximal date (format: iso8061)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 117,
              "column": 10
            },
            "end": {
              "line": 121,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "description": "when true 12-hour local time format, else 24-hour",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 127,
              "column": 10
            },
            "end": {
              "line": 130,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "is-am",
          "description": "true, when A.M. (when `hours` < 12)",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 136,
              "column": 10
            },
            "end": {
              "line": 139,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hours12",
          "description": "hours in 12-hour-format",
          "sourceRange": {
            "file": "datetime-mixin.html",
            "start": {
              "line": 145,
              "column": 10
            },
            "end": {
              "line": 149,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "locale",
          "description": "The current locale",
          "sourceRange": {
            "start": {
              "line": 22,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "clamp",
          "description": "clamp datetime to a property\npossible values: 'month', 'day', 'hours', 'minutes', 'seconds', 'milliseconds'",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "mixins": [
        "DatetimeMixin"
      ]
    },
    {
      "description": "Mixin for calendar-element",
      "summary": "",
      "path": "calendar-element.html",
      "properties": [
        {
          "name": "clamp",
          "type": "string",
          "description": "clamp datetime to a property\npossible values: 'month', 'day', 'hours', 'minutes', 'seconds', 'milliseconds'",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 172,
              "column": 8
            },
            "end": {
              "line": 175,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"hours\""
        },
        {
          "name": "currentSelectedDayNode",
          "type": "Node",
          "description": "current hovered day node\nto access: bind the attribute ('current-hovered-day') and get its '.dataset.date'- property represents the DateString",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 8
            },
            "end": {
              "line": 184,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        },
        {
          "name": "currentHoveredDayNode",
          "type": "Node",
          "description": "node of the last selected day (warning: if view changes )\nto access: bind the attribute ('current-hovered-day') and get its '.dataset.date'- property represents the DateString",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 190,
              "column": 8
            },
            "end": {
              "line": 193,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        },
        {
          "name": "_viewYear",
          "type": "number",
          "description": "The year of the view",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 198,
              "column": 8
            },
            "end": {
              "line": 201,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        },
        {
          "name": "_viewMonth",
          "type": "number",
          "description": "The month of the view",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 206,
              "column": 8
            },
            "end": {
              "line": 209,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        },
        {
          "name": "_hideMonth",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 211,
              "column": 8
            },
            "end": {
              "line": 214,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "_hideDay",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 216,
              "column": 8
            },
            "end": {
              "line": 219,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "_maxDayOfMonth",
          "type": "number",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 221,
              "column": 8
            },
            "end": {
              "line": 223,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 234,
              "column": 4
            },
            "end": {
              "line": 237,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 239,
              "column": 4
            },
            "end": {
              "line": 242,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onClickDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 244,
              "column": 4
            },
            "end": {
              "line": 250,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_onMouseMoveDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 252,
              "column": 4
            },
            "end": {
              "line": 266,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_computeViewDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 268,
              "column": 4
            },
            "end": {
              "line": 278,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year"
            },
            {
              "name": "month"
            }
          ]
        },
        {
          "name": "now",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 280,
              "column": 4
            },
            "end": {
              "line": 284,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_prev",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 286,
              "column": 4
            },
            "end": {
              "line": 288,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_next",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 290,
              "column": 4
            },
            "end": {
              "line": 292,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_increm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 294,
              "column": 4
            },
            "end": {
              "line": 307,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "i"
            }
          ]
        },
        {
          "name": "_incremViewMonth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 309,
              "column": 4
            },
            "end": {
              "line": 312,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "i"
            }
          ]
        },
        {
          "name": "_incremViewYear",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 314,
              "column": 4
            },
            "end": {
              "line": 316,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "i"
            }
          ]
        },
        {
          "name": "_cancelTimeout",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 318,
              "column": 4
            },
            "end": {
              "line": 322,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_localeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 324,
              "column": 4
            },
            "end": {
              "line": 353,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            }
          ]
        },
        {
          "name": "renderCalendar",
          "description": "renderCalendars the current view (manually).",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 360,
              "column": 4
            },
            "end": {
              "line": 436,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_viewYear",
              "type": "number",
              "description": "The value of the date of the current view."
            },
            {
              "name": "_viewMonth",
              "type": "number",
              "description": "The value of the date of the current view."
            }
          ]
        },
        {
          "name": "_dayDiff",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 438,
              "column": 4
            },
            "end": {
              "line": 440,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "end"
            },
            {
              "name": "start"
            }
          ]
        },
        {
          "name": "_minChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 442,
              "column": 4
            },
            "end": {
              "line": 445,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "min"
            }
          ]
        },
        {
          "name": "_maxChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 447,
              "column": 4
            },
            "end": {
              "line": 450,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "max"
            }
          ]
        },
        {
          "name": "_checkKeycode",
          "description": "key press event handler",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 456,
              "column": 4
            },
            "end": {
              "line": 471,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 12,
          "column": 2
        },
        "end": {
          "line": 473,
          "column": 3
        }
      },
      "privacy": "public",
      "name": "CalendarElementPattern",
      "attributes": [
        {
          "name": "clamp",
          "description": "clamp datetime to a property\npossible values: 'month', 'day', 'hours', 'minutes', 'seconds', 'milliseconds'",
          "sourceRange": {
            "start": {
              "line": 172,
              "column": 8
            },
            "end": {
              "line": 175,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "current-selected-day-node",
          "description": "current hovered day node\nto access: bind the attribute ('current-hovered-day') and get its '.dataset.date'- property represents the DateString",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 8
            },
            "end": {
              "line": 184,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Node"
        },
        {
          "name": "current-hovered-day-node",
          "description": "node of the last selected day (warning: if view changes )\nto access: bind the attribute ('current-hovered-day') and get its '.dataset.date'- property represents the DateString",
          "sourceRange": {
            "start": {
              "line": 190,
              "column": 8
            },
            "end": {
              "line": 193,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Node"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    },
    {
      "description": "Mixin for calendar-element",
      "summary": "",
      "path": "time-element.html",
      "properties": [
        {
          "name": "clamp",
          "type": "string",
          "description": "clamp datetime to a property\npossible values: 'month', 'day', 'hours', 'minutes', 'seconds', 'milliseconds'",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 96,
              "column": 8
            },
            "end": {
              "line": 99,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"milliseconds\""
        },
        {
          "name": "_hideMinutes",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 8
            },
            "end": {
              "line": 104,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "_hideSeconds",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 106,
              "column": 8
            },
            "end": {
              "line": 109,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "_hideMilliSeconds",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 111,
              "column": 8
            },
            "end": {
              "line": 114,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 119,
              "column": 4
            },
            "end": {
              "line": 132,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 4
            },
            "end": {
              "line": 147,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_startIncrem",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 149,
              "column": 4
            },
            "end": {
              "line": 157,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "s"
            }
          ]
        },
        {
          "name": "_stopIncrem",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 4
            },
            "end": {
              "line": 163,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_switchAm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 165,
              "column": 4
            },
            "end": {
              "line": 167,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 12,
          "column": 2
        },
        "end": {
          "line": 169,
          "column": 3
        }
      },
      "privacy": "public",
      "name": "TimeElementPattern",
      "attributes": [
        {
          "name": "clamp",
          "description": "clamp datetime to a property\npossible values: 'month', 'day', 'hours', 'minutes', 'seconds', 'milliseconds'",
          "sourceRange": {
            "start": {
              "line": 96,
              "column": 8
            },
            "end": {
              "line": 99,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    },
    {
      "description": "mixin to extend an picker with an `overlay-element`",
      "summary": "",
      "path": "overlay-picker-extension.html",
      "properties": [
        {
          "name": "alwaysOnTop",
          "type": "boolean",
          "description": "Set to true to keep overlay always on top.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 19,
              "column": 10
            },
            "end": {
              "line": 21,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "noOverlap",
          "type": "boolean",
          "description": "Will position the element around the positionTarget without overlapping it.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 25,
              "column": 10
            },
            "end": {
              "line": 28,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "withBackdrop",
          "type": "boolean",
          "description": "Set to true to display a backdrop behind the overlay. It traps the focus\nwithin the light DOM of the overlay.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 36,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "noCancelOnOutsideClick",
          "type": "boolean",
          "description": "Set to true to disable canceling the overlay by clicking outside it.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 41,
              "column": 10
            },
            "end": {
              "line": 44,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "dynamicAlign",
          "type": "boolean",
          "description": "If true, it will use `horizontalAlign` and `verticalAlign` values as preferred alignment\nand if there's not enough space, it will pick the values which minimize the cropping.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 52,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        }
      ],
      "methods": [],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 10,
          "column": 2
        },
        "end": {
          "line": 92,
          "column": 3
        }
      },
      "privacy": "public",
      "name": "OverlayPickerExtension",
      "attributes": [
        {
          "name": "always-on-top",
          "description": "Set to true to keep overlay always on top.",
          "sourceRange": {
            "start": {
              "line": 19,
              "column": 10
            },
            "end": {
              "line": 21,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "no-overlap",
          "description": "Will position the element around the positionTarget without overlapping it.",
          "sourceRange": {
            "start": {
              "line": 25,
              "column": 10
            },
            "end": {
              "line": 28,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "with-backdrop",
          "description": "Set to true to display a backdrop behind the overlay. It traps the focus\nwithin the light DOM of the overlay.",
          "sourceRange": {
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 36,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "no-cancel-on-outside-click",
          "description": "Set to true to disable canceling the overlay by clicking outside it.",
          "sourceRange": {
            "start": {
              "line": 41,
              "column": 10
            },
            "end": {
              "line": 44,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "dynamic-align",
          "description": "If true, it will use `horizontalAlign` and `verticalAlign` values as preferred alignment\nand if there's not enough space, it will pick the values which minimize the cropping.",
          "sourceRange": {
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 52,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    }
  ]
}
