@{
    ViewData["Title"] = "Requisições Acordos Preços";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="import" href="/lib/paper-tabs-master/paper-tab.html" />
<link rel="import" href="/lib/paper-tabs-master/paper-tabs.html" />
<link rel="import" href="/lib/iron-pages-master/iron-pages.html" />
<link rel="import" href="/lib/iron-menu-behavior/iron-menubar-behavior.html" />
<link rel="import" href="/lib/iron-form/iron-form.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-sorter.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-sort-behavior.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-filter.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-filter-behavior.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-selection-column.html" />
<link rel="import" href="~/lib/vaadin-valo-theme/vaadin-checkbox.html">
<link rel="import" href="~/lib/vaadin-checkbox/vaadin-checkbox.html">
<link rel="import" href="~/lib/vaadin-valo-theme/vaadin-text-field.html">
<link rel="import" href="~/lib/vaadin-text-field/vaadin-text-field.html">
<link rel="import" href="~/lib/vaadin-valo-theme/vaadin-date-picker.html" />
<link rel="import" href="~/lib/vaadin-date-picker/vaadin-date-picker.html" />
<link rel="import" href="~/lib/vaadin-valo-theme/vaadin-combo-box.html" />
<link rel="import" href="/lib/vaadin-combo-box/vaadin-combo-box.html" />
<link rel="import" href="/lib/vaadin-combo-box/vaadin-combo-box-behavior.html" />
<link rel="import" href="~/lib/iron-form/iron-form.html" />
<link rel="import" href="~/lib/paper-button/paper-button.html" />
<link rel="import" href="~/lib/iron-flex-layout/iron-flex-layout.html" />
<link rel="import" href="~/lib/iron-flex-layout/iron-flex-layout-classes.html" />
<link rel="import" href="/lib/paper-toast-master/paper-toast.html" />
<link rel="import" href="~/elements/comboboxs/MovementTypeList.html" />
<link rel="import" href="~/elements/comboboxs/ProjectTypeList.html" />
<link rel="import" href="~/elements/comboboxs/ProjectList.html" />

<!--start ColumnToggle-->
<link rel="import" href="/lib/iron-menu-behavior/iron-menubar-behavior.html" />
<link rel="import" href="/lib/paper-tabs-master/paper-tabs.html" />
<link rel="import" href="/lib/iron-icons/iron-icons.html" />
<link rel="import" href="/lib/iron-behaviors/iron-button-state.html" />
<link rel="import" href="/lib/paper-menu-button/paper-menu-button.html" />
<!--end ColumnToggle-->

<x-request></x-request>

<dom-module id="x-request">
    <template>
        <link rel="stylesheet" href="/lib/bootstrap/dist/css/bootstrap.css" />
        <link rel="stylesheet" href="/lib/font-awesome-4.7.0/css/font-awesome.min.css" />
        <link rel="stylesheet" href="/css/main.css" />

        <paper-toast id="ToastError" style="background-color:red" duration="4000" horizontalAlign="right"></paper-toast>
        <paper-toast id="ToastMessage" duration="4000" horizontalAlign="right"></paper-toast>

        <iron-ajax url="/GestaoRequisicoes/GetRequisitionsAcordosPrecos"
                   id="ajax_getgrid"
                   last-response="{{result}}"
                   method="post"
                   handle-as="json"
                   content-type="application/json">
        </iron-ajax>

        <iron-ajax url="/GestaoRequisicoes/GetRequisitionsAcordosPrecosCG"
                   id="ajax_getgridCG"
                   last-response="{{resultCG}}"
                   method="post"
                   handle-as="json"
                   content-type="application/json">
        </iron-ajax>

        <iron-ajax url="/GestaoRequisicoes/GetRequisitionsAcordosPrecosHistoricoCG"
                   id="ajax_getgridHistoricoCG"
                   last-response="{{resultCG}}"
                   method="post"
                   handle-as="json"
                   content-type="application/json">
        </iron-ajax>

        <iron-ajax url="/GestaoRequisicoes/ExportToExcel_GestaoRequisicoes"
                   last-response="{{export}}"
                   id="ajax_Export"
                   method="post"
                   handle-as="json"
                   on-response="_exportEXCELResponse"
                   content-type="application/json">
        </iron-ajax>

        <iron-ajax url="/GestaoRequisicoes/ExportToExcel_GestaoRequisicoesCG"
                   last-response="{{exportCG}}"
                   id="ajax_ExportCG"
                   method="post"
                   handle-as="json"
                   on-response="_exportEXCELResponseCG"
                   content-type="application/json">
        </iron-ajax>

        <iron-ajax url="/GestaoRequisicoes/CreatePurchaseOrderList"
                   last-response="{{Requisition}}"
                   id="createPurchOrder_ajax"
                   on-response="_createPurchaseOrderResponse"
                   method="post"
                   handle-as="json"
                   content-type="application/json">
        </iron-ajax>

        <iron-ajax url="/GestaoRequisicoes/CreatePurchaseOrderList"
                   last-response="{{RequisitionCG}}"
                   id="createPurchOrderCG_ajax"
                   on-response="_createPurchaseOrderCGResponse"
                   method="post"
                   handle-as="json"
                   content-type="application/json">
        </iron-ajax>

        <iron-ajax url="/GestaoRequisicoes/ExportToExcelCG_LinhasNutricao"
                   last-response="{{exportCG_LinhasNutricao}}"
                   id="ajax_ExportCG_LinhasNutricao"
                   method="post"
                   handle-as="json"
                   on-response="_exportEXCELCG_LinhasNutricaoResponse"
                   content-type="application/json">
        </iron-ajax>

        <iron-ajax url="/GestaoRequisicoes/ExportToExcelCG_LinhasNutricaoUpdate"
                   last-response="{{exportCG_LinhasNutricaoUpdate}}"
                   id="ajax_ExportCG_LinhasNutricaoUpdate"
                   method="post"
                   handle-as="json"
                   on-response="_exportEXCELCG_LinhasNutricaoUpdateResponse"
                   content-type="application/json">
        </iron-ajax>

        <iron-ajax url="/PopulateDropdowns/GetRequestStatus" id="ajax_getstatus" auto last-response="{{resultstatus}}" method="post" handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/PopulateDropdowns/GetRegionCode" last-response="{{RegionData}}" auto method="post" handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/PopulateDropdowns/GetResponsabilityCenterCode" last-response="{{ResponsabilityCenterData}}" auto method="post" handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/PopulateDropdowns/GetFunctionalAreaCode" last-response="{{FunctionalAreaCodeData}}" auto method="post" handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/PopulateDropdowns/GetLocalMarketRegions" last-response="{{LocalMarketRegions}}" auto method="post" handle-as="json" content-type="application/json"></iron-ajax>



        <div class="row break_frm">
            <div class="col-sm-12 col-md-12 col-lg-12">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <paper-tabs id="tabAordoPrecos" name="tabAcordoPrecos" fit-container no-slide autoselect autoselect-delay="0" selected="{{selected}}">
                            <paper-tab>Geral</paper-tab>
                            <paper-tab>Interface CentralGest</paper-tab>
                        </paper-tabs>

                        <iron-pages selected="{{selected}}">
                            <!--Geral-->
                            <div>
                                <div class="subMenu">
                                    <paper-button class="tablinks" on-tap="_goBack" title="Voltar"><i class="fa fa-arrow-left" aria-hidden="true"></i> Voltar</paper-button>
                                    <paper-button id="btnExport" class="tablinks" on-tap="_exportEXCEL" title="Exportar para Excel"><i class="fa fa-file-excel-o" aria-hidden="true"></i>&nbsp; Exportar</paper-button>

                                    <!--start ColumnToggle-->
                                    <paper-menu-button class="column-toggle" no-animations id="gridOpcaoGeral">
                                        <paper-icon-button icon="view-column" slot="dropdown-trigger" alt="Colunas"></paper-icon-button>
                                        <div class="list-group" slot="dropdown-content">
                                            <template is="dom-repeat" items="[[ _toArray(_columns)]]" id="columnsList">
                                                <a href="javascript:void(0);" on-tap="_toggleColumn" data-item$="[[item]]" class$="list-group-item [[ _getColumnItemClass( item.key ) ]]">
                                                    {{ item.value.label }}
                                                </a>
                                                <hr />
                                            </template>
                                        </div>
                                    </paper-menu-button>
                                    <!--end ColumnToggle-->

                                    <paper-button class="tablinks" id="btnCreatePurchaseOrder" on-tap="_createPurchaseOrder" disabled="{{ !_permissions.create }}"><i class="fa fa-check" aria-hidden="true"></i>&nbsp; Criar Encomenda de Compra</paper-button>
                                </div>

                                <vaadin-grid column-reordering-allowed id="gridrequest" aria-label="ProfileModelsTabel" items="[[result]]" class="grid" selected-items={{selectedItems}} active-item="{{_SelectedLine}}">
                                    <vaadin-grid-selection-column auto-select id="grid_SelectAll">
                                    </vaadin-grid-selection-column>

                                    <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.requisitionNo.hidden }}">
                                        <template class="header">
                                            <vaadin-grid-sorter path="requisitionNo">Nº Requisição </vaadin-grid-sorter>
                                            <vaadin-grid-filter path="requisitionNo" />
                                        </template>
                                        <template>
                                            {{item.requisitionNo}}
                                        </template>

                                    </vaadin-grid-column>

                                    <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.state.hidden }}">
                                        <template class="header">
                                            <vaadin-grid-sorter path="state">Estado</vaadin-grid-sorter>
                                            @*<vaadin-grid-filter path="state" />*@
                                        </template>
                                        <template>
                                            [[ _parsestate(item.state)]]
                                        </template>
                                    </vaadin-grid-column>

                                    <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.urgent.hidden }}">
                                        <template class="header">
                                            Urgente
                                        </template>
                                        <template>
                                            <vaadin-checkbox checked="{{item.urgent}}" disabled></vaadin-checkbox>
                                        </template>
                                    </vaadin-grid-column>

                                    <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.buyCash.hidden }}">
                                        <template class="header">
                                            Compra a Dinheiro
                                        </template>
                                        <template>
                                            <vaadin-checkbox checked="{{item.buyCash}}" disabled></vaadin-checkbox>
                                        </template>
                                    </vaadin-grid-column>

                                    <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.alreadyPerformed.hidden }}">
                                        <template class="header">
                                            Trabalho já executado
                                        </template>
                                        <template>
                                            <vaadin-checkbox checked="{{item.alreadyPerformed}}" disabled></vaadin-checkbox>
                                        </template>
                                    </vaadin-grid-column>

                                    <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.requestNutrition.hidden }}">
                                        <template class="header">
                                            Requisição Nutrição
                                        </template>
                                        <template>
                                            <vaadin-checkbox checked="{{item.requestNutrition}}" disabled></vaadin-checkbox>
                                        </template>
                                    </vaadin-grid-column>

                                    <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.budget.hidden }}">
                                        <template class="header">
                                            <vaadin-grid-sorter path="budget">Orçamento</vaadin-grid-sorter>
                                            <vaadin-grid-filter path="budget" />
                                        </template>
                                        <template>
                                            {{item.budget}}
                                        </template>
                                    </vaadin-grid-column>

                                    <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.localMarket.hidden }}">
                                        <template class="header">
                                            Mercado Local
                                        </template>
                                        <template>
                                            <vaadin-checkbox checked="{{item.localMarket}}" disabled></vaadin-checkbox>
                                        </template>
                                    </vaadin-grid-column>

                                    <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.localMarketRegion.hidden }}">
                                        <template class="header">
                                            <vaadin-grid-sorter path="localMarketRegion">Região Mercado Local</vaadin-grid-sorter>
                                            <vaadin-grid-filter path="localMarketRegion" />
                                        </template>
                                        <template>
                                            [[ _getLocalMarketRegionDescription(item.localMarketRegion) ]]
                                        </template>
                                    </vaadin-grid-column>

                                    <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.localMarketDate.hidden }}">
                                        <template class="header">
                                            <vaadin-grid-sorter path="localMarketDate">Data Mercado Local</vaadin-grid-sorter>
                                            <vaadin-grid-filter path="localMarketDate" />
                                        </template>
                                        <template>
                                            [[ _parseDateFormat(item.localMarketDate)]]
                                        </template>
                                    </vaadin-grid-column>

                                    <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.regionCode.hidden }}">
                                        <template class="header">
                                            <vaadin-grid-sorter path="regionCode">Código Região</vaadin-grid-sorter>
                                            <vaadin-grid-filter path="regionCode" />
                                        </template>
                                        <template>
                                            @*[[ _parseregion(item.regionCode)]]*@
                                            {{item.regionCode}}
                                        </template>
                                    </vaadin-grid-column>

                                    <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.functionalAreaCode.hidden }}">
                                        <template class="header">
                                            <vaadin-grid-sorter path="functionalAreaCode">Código Área Funcional</vaadin-grid-sorter>
                                            <vaadin-grid-filter path="functionalAreaCode" />
                                        </template>
                                        <template>
                                            @*[[ _parseArea(item.functionalAreaCode)]]*@
                                            {{item.functionalAreaCode}}
                                        </template>
                                    </vaadin-grid-column>

                                    <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.centerResponsibilityCode.hidden }}">
                                        <template class="header">
                                            <vaadin-grid-sorter path="centerResponsibilityCode">Código Centro Responsabilidade</vaadin-grid-sorter>
                                            <vaadin-grid-filter path="centerResponsibilityCode" />
                                        </template>
                                        <template>
                                            @*[[ _parsecenterRespons(item.centerResponsibilityCode)]]*@
                                            {{item.centerResponsibilityCode}}
                                        </template>
                                    </vaadin-grid-column>

                                    <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.comments.hidden }}">
                                        <template class="header">
                                            <vaadin-grid-sorter path="comments">Observações</vaadin-grid-sorter>
                                            <vaadin-grid-filter path="comments" />
                                        </template>
                                        <template>
                                            {{item.comments}}
                                        </template>
                                    </vaadin-grid-column>

                                    <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.marketInquiryNo.hidden }}">
                                        <template class="header">
                                            <vaadin-grid-sorter path="marketInquiryNo">Nº Consulta Mercado</vaadin-grid-sorter>
                                            <vaadin-grid-filter path="marketInquiryNo" />
                                        </template>
                                        <template>
                                            {{item.marketInquiryNo}}
                                        </template>
                                    </vaadin-grid-column>

                                    <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.orderNo.hidden }}">
                                        <template class="header">
                                            <vaadin-grid-sorter path="orderNo">Nº Encomenda</vaadin-grid-sorter>
                                            <vaadin-grid-filter path="orderNo" />
                                        </template>
                                        <template>
                                            {{item.orderNo}}
                                        </template>
                                    </vaadin-grid-column>

                                    <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.stockReplacement.hidden }}">
                                        <template class="header">
                                            Reposição Stock
                                        </template>
                                        <template>
                                            <vaadin-checkbox checked="{{item.stockReplacement}}" disabled></vaadin-checkbox>
                                        </template>
                                    </vaadin-grid-column>

                                    <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.reclamation.hidden }}">
                                        <template class="header">
                                            Reclamação
                                        </template>
                                        <template>
                                            <vaadin-checkbox checked="{{item.reclamation}}" disabled></vaadin-checkbox>
                                        </template>
                                    </vaadin-grid-column>

                                    <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.requestReclaimNo.hidden }}">
                                        <template class="header">
                                            <vaadin-grid-sorter path="requestReclaimNo">Nº Requisição Reclamada</vaadin-grid-sorter>
                                            <vaadin-grid-filter path="requestReclaimNo" />
                                        </template>
                                        <template>
                                            {{item.requestReclaimNo}}
                                        </template>
                                    </vaadin-grid-column>

                                    <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.requisitionDate.hidden }}">
                                        <template class="header">
                                            <vaadin-grid-sorter path="requisitionDate">Data requisição</vaadin-grid-sorter>
                                            <vaadin-grid-filter path="requisitionDate" />
                                        </template>
                                        <template>
                                            [[ _parseDateFormat(item.requisitionDate)]]
                                        </template>
                                    </vaadin-grid-column>

                                    <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.createUser.hidden }}">
                                        <template class="header">
                                            <vaadin-grid-sorter path="createUser">Utilizador Criação</vaadin-grid-sorter>
                                            <vaadin-grid-filter path="createUser" />
                                        </template>
                                        <template>
                                            {{item.createUser}}
                                        </template>
                                    </vaadin-grid-column>

                                    <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.estimatedValue.hidden }}">
                                        <template class="header">
                                            <vaadin-grid-sorter path="estimatedValue">Valor Estimado</vaadin-grid-sorter>
                                            <vaadin-grid-filter path="estimatedValue" />
                                        </template>
                                        <template>
                                            {{item.estimatedValue}}
                                        </template>
                                    </vaadin-grid-column>
                                </vaadin-grid>
                            </div>

                            <!--Interface CentralGest-->
                            <div>
                                <div class="subMenu">
                                    <paper-button id="btnCGGoBack" class="tablinks" on-tap="_goBack" title="Voltar"><i class="fa fa-arrow-left" aria-hidden="true"></i> Voltar</paper-button>
                                    <paper-button id="btnCGVer" class="tablinks" on-tap="_btnVerCG"><i class="fa fa-eye" aria-hidden="true"></i>&nbsp; {{ _showVerMessage }}</paper-button>
                                    <paper-button id="btnCGEnviar" class="tablinks" on-tap="_EnviarCG" disabled="{{ !_permissions.create }}"><i class="fa fa-check" aria-hidden="true"></i>&nbsp; Enviar Ordem de Compra</paper-button>
                                    <paper-button id="btnCGCreatePurchaseOrder" class="tablinks" on-tap="_createPurchaseOrderCG" disabled="{{ !_permissions.create }}" hidden><i class="fa fa-check" aria-hidden="true"></i>&nbsp; Criar Encomenda de Compra</paper-button>
                                    <paper-button id="btnCGHistorico" class="tablinks" on-tap="_HistoricoCG" title="Ver Histórico"><i class="fa fa-eye" aria-hidden="true"></i>&nbsp; Ver Histórico</paper-button>
                                    <paper-button id="btnCGExport" class="tablinks" on-tap="_exportEXCELCG" title="Exportar para Excel"><i class="fa fa-file-excel-o" aria-hidden="true"></i>&nbsp; Exportar</paper-button>
                                    <paper-button id="btnCGExportLinhasNutricao" class="tablinks" on-tap="_exportEXCELCG_LinhasNutricao" title="Exportar Linhas para Excel"><i class="fa fa-file-excel-o" aria-hidden="true"></i>&nbsp; Exportar Linhas</paper-button>

                                    <!--start ColumnToggle-->
                                    <paper-menu-button class="column-toggle" no-animations id="gridOpcaoGeral">
                                        <paper-icon-button icon="view-column" slot="dropdown-trigger" alt="Colunas"></paper-icon-button>
                                        <div class="list-group" slot="dropdown-content">
                                            <template is="dom-repeat" items="[[ _toArrayCG(_columnsCG)]]" id="columnsList">
                                                <a href="javascript:void(0);" on-tap="_toggleColumnCG" data-item$="[[item]]" class$="list-group-item [[ _getColumnItemClassCG( item.key ) ]]">
                                                    {{ item.value.label }}
                                                </a>
                                                <hr />
                                            </template>
                                        </div>
                                    </paper-menu-button>
                                    <!--end ColumnToggle-->
                                </div>

                                <vaadin-grid column-reordering-allowed id="gridrequestCG" aria-label="ProfileModelsTabel" items="[[resultCG]]" class="grid" selected-items={{selectedItemsCG}} active-item="{{_SelectedLineCG}}">
                                    <vaadin-grid-selection-column auto-select id="grid_SelectAll">
                                    </vaadin-grid-selection-column>

                                    <vaadin-grid-column width="160px" resizable hidden$="{{ _columnsCG.requisitionNo.hidden }}">
                                        <template class="header">
                                            <vaadin-grid-sorter path="requisitionNo">Nº Requisição </vaadin-grid-sorter>
                                            <vaadin-grid-filter path="requisitionNo" />
                                        </template>
                                        <template>
                                            {{item.requisitionNo}}
                                        </template>
                                    </vaadin-grid-column>

                                    <vaadin-grid-column width="160px" resizable hidden>
                                        <template class="header">
                                            <vaadin-grid-sorter path="state">Estado</vaadin-grid-sorter>
                                        </template>
                                        <template>
                                            [[ _parsestate(item.state)]]
                                        </template>
                                    </vaadin-grid-column>

                                    <vaadin-grid-column width="160px" resizable hidden$="{{ _columnsCG.noSubFornecedor.hidden }}">
                                        <template class="header">
                                            <vaadin-grid-sorter path="noSubFornecedor">Nº SubFornecedor</vaadin-grid-sorter>
                                            <vaadin-grid-filter path="noSubFornecedor" />
                                        </template>
                                        <template>
                                            {{item.noSubFornecedor}}
                                        </template>
                                    </vaadin-grid-column>

                                    <vaadin-grid-column width="160px" resizable hidden$="{{ _columnsCG.nomeSubFornecedor.hidden }}">
                                        <template class="header">
                                            <vaadin-grid-sorter path="nomeSubFornecedor">SubFornecedor</vaadin-grid-sorter>
                                            <vaadin-grid-filter path="nomeSubFornecedor" />
                                        </template>
                                        <template>
                                            {{item.nomeSubFornecedor}}
                                        </template>
                                    </vaadin-grid-column>

                                    <vaadin-grid-column width="160px" resizable hidden$="{{ _columnsCG.noEncomendaFornecedor.hidden }}">
                                        <template class="header">
                                            <vaadin-grid-sorter path="noEncomendaFornecedor">Nº Encomenda do Fornecedor</vaadin-grid-sorter>
                                            <vaadin-grid-filter path="noEncomendaFornecedor" />
                                        </template>
                                        <template>
                                            {{item.noEncomendaFornecedor}}
                                        </template>
                                    </vaadin-grid-column>

                                    <vaadin-grid-column width="160px" resizable hidden$="{{ _columnsCG.dataEncomendaSubfornecedorText.hidden }}">
                                        <template class="header">
                                            <vaadin-grid-sorter path="dataEncomendaSubfornecedorText">Data Encomenda do SubFornecedor</vaadin-grid-sorter>
                                            <vaadin-grid-filter path="dataEncomendaSubfornecedorText" />
                                        </template>
                                        <template>
                                            {{item.dataEncomendaSubfornecedorText}}
                                        </template>
                                    </vaadin-grid-column>

                                    <vaadin-grid-column width="160px" resizable hidden$="{{ _columnsCG.urgent.hidden }}">
                                        <template class="header">
                                            Urgente
                                        </template>
                                        <template>
                                            <vaadin-checkbox checked="{{item.urgent}}" disabled></vaadin-checkbox>
                                        </template>
                                    </vaadin-grid-column>

                                    <vaadin-grid-column width="160px" resizable hidden$="{{ _columnsCG.buyCash.hidden }}">
                                        <template class="header">
                                            Compra a Dinheiro
                                        </template>
                                        <template>
                                            <vaadin-checkbox checked="{{item.buyCash}}" disabled></vaadin-checkbox>
                                        </template>
                                    </vaadin-grid-column>

                                    <vaadin-grid-column width="160px" resizable hidden$="{{ _columnsCG.alreadyPerformed.hidden }}">
                                        <template class="header">
                                            Trabalho já executado
                                        </template>
                                        <template>
                                            <vaadin-checkbox checked="{{item.alreadyPerformed}}" disabled></vaadin-checkbox>
                                        </template>
                                    </vaadin-grid-column>

                                    <vaadin-grid-column width="160px" resizable hidden$="{{ _columnsCG.requestNutrition.hidden }}">
                                        <template class="header">
                                            Requisição Nutrição
                                        </template>
                                        <template>
                                            <vaadin-checkbox checked="{{item.requestNutrition}}" disabled></vaadin-checkbox>
                                        </template>
                                    </vaadin-grid-column>

                                    <vaadin-grid-column width="160px" resizable hidden$="{{ _columnsCG.budget.hidden }}">
                                        <template class="header">
                                            <vaadin-grid-sorter path="budget">Orçamento</vaadin-grid-sorter>
                                            <vaadin-grid-filter path="budget" />
                                        </template>
                                        <template>
                                            {{item.budget}}
                                        </template>
                                    </vaadin-grid-column>

                                    <vaadin-grid-column width="160px" resizable hidden$="{{ _columnsCG.localMarket.hidden }}">
                                        <template class="header">
                                            Mercado Local
                                        </template>
                                        <template>
                                            <vaadin-checkbox checked="{{item.localMarket}}" disabled></vaadin-checkbox>
                                        </template>
                                    </vaadin-grid-column>

                                    <vaadin-grid-column width="160px" resizable hidden$="{{ _columnsCG.localMarketRegion.hidden }}">
                                        <template class="header">
                                            <vaadin-grid-sorter path="localMarketRegion">Região Mercado Local</vaadin-grid-sorter>
                                            <vaadin-grid-filter path="localMarketRegion" />
                                        </template>
                                        <template>
                                            [[ _getLocalMarketRegionDescription(item.localMarketRegion) ]]
                                        </template>
                                    </vaadin-grid-column>

                                    <vaadin-grid-column width="160px" resizable hidden$="{{ _columnsCG.localMarketDate.hidden }}">
                                        <template class="header">
                                            <vaadin-grid-sorter path="localMarketDate">Data Mercado Local</vaadin-grid-sorter>
                                            <vaadin-grid-filter path="localMarketDate" />
                                        </template>
                                        <template>
                                            [[ _parseDateFormat(item.localMarketDate)]]
                                        </template>
                                    </vaadin-grid-column>

                                    <vaadin-grid-column width="160px" resizable hidden$="{{ _columnsCG.regionCode.hidden }}">
                                        <template class="header">
                                            <vaadin-grid-sorter path="regionCode">Código Região</vaadin-grid-sorter>
                                            <vaadin-grid-filter path="regionCode" />
                                        </template>
                                        <template>
                                            {{item.regionCode}}
                                        </template>
                                    </vaadin-grid-column>

                                    <vaadin-grid-column width="160px" resizable hidden$="{{ _columnsCG.functionalAreaCode.hidden }}">
                                        <template class="header">
                                            <vaadin-grid-sorter path="functionalAreaCode">Código Área Funcional</vaadin-grid-sorter>
                                            <vaadin-grid-filter path="functionalAreaCode" />
                                        </template>
                                        <template>
                                            {{item.functionalAreaCode}}
                                        </template>
                                    </vaadin-grid-column>

                                    <vaadin-grid-column width="160px" resizable hidden$="{{ _columnsCG.centerResponsibilityCode.hidden }}">
                                        <template class="header">
                                            <vaadin-grid-sorter path="centerResponsibilityCode">Código Centro Responsabilidade</vaadin-grid-sorter>
                                            <vaadin-grid-filter path="centerResponsibilityCode" />
                                        </template>
                                        <template>
                                            {{item.centerResponsibilityCode}}
                                        </template>
                                    </vaadin-grid-column>

                                    <vaadin-grid-column width="160px" resizable hidden$="{{ _columnsCG.comments.hidden }}">
                                        <template class="header">
                                            <vaadin-grid-sorter path="comments">Observações</vaadin-grid-sorter>
                                            <vaadin-grid-filter path="comments" />
                                        </template>
                                        <template>
                                            {{item.comments}}
                                        </template>
                                    </vaadin-grid-column>

                                    <vaadin-grid-column width="160px" resizable hidden$="{{ _columnsCG.marketInquiryNo.hidden }}">
                                        <template class="header">
                                            <vaadin-grid-sorter path="marketInquiryNo">Nº Consulta Mercado</vaadin-grid-sorter>
                                            <vaadin-grid-filter path="marketInquiryNo" />
                                        </template>
                                        <template>
                                            {{item.marketInquiryNo}}
                                        </template>
                                    </vaadin-grid-column>

                                    <vaadin-grid-column width="160px" resizable hidden$="{{ _columnsCG.orderNo.hidden }}">
                                        <template class="header">
                                            <vaadin-grid-sorter path="orderNo">Nº Encomenda</vaadin-grid-sorter>
                                            <vaadin-grid-filter path="orderNo" />
                                        </template>
                                        <template>
                                            {{item.orderNo}}
                                        </template>
                                    </vaadin-grid-column>

                                    <vaadin-grid-column width="160px" resizable hidden$="{{ _columnsCG.stockReplacement.hidden }}">
                                        <template class="header">
                                            Reposição Stock
                                        </template>
                                        <template>
                                            <vaadin-checkbox checked="{{item.stockReplacement}}" disabled></vaadin-checkbox>
                                        </template>
                                    </vaadin-grid-column>

                                    <vaadin-grid-column width="160px" resizable hidden$="{{ _columnsCG.reclamation.hidden }}">
                                        <template class="header">
                                            Reclamação
                                        </template>
                                        <template>
                                            <vaadin-checkbox checked="{{item.reclamation}}" disabled></vaadin-checkbox>
                                        </template>
                                    </vaadin-grid-column>

                                    <vaadin-grid-column width="160px" resizable hidden$="{{ _columnsCG.requestReclaimNo.hidden }}">
                                        <template class="header">
                                            <vaadin-grid-sorter path="requestReclaimNo">Nº Requisição Reclamada</vaadin-grid-sorter>
                                            <vaadin-grid-filter path="requestReclaimNo" />
                                        </template>
                                        <template>
                                            {{item.requestReclaimNo}}
                                        </template>
                                    </vaadin-grid-column>

                                    <vaadin-grid-column width="160px" resizable hidden$="{{ _columnsCG.requisitionDate.hidden }}">
                                        <template class="header">
                                            <vaadin-grid-sorter path="requisitionDate">Data requisição</vaadin-grid-sorter>
                                            <vaadin-grid-filter path="requisitionDate" />
                                        </template>
                                        <template>
                                            [[ _parseDateFormat(item.requisitionDate)]]
                                        </template>
                                    </vaadin-grid-column>

                                    <vaadin-grid-column width="160px" resizable hidden$="{{ _columnsCG.createUser.hidden }}">
                                        <template class="header">
                                            <vaadin-grid-sorter path="createUser">Utilizador Criação</vaadin-grid-sorter>
                                            <vaadin-grid-filter path="createUser" />
                                        </template>
                                        <template>
                                            {{item.createUser}}
                                        </template>
                                    </vaadin-grid-column>

                                    <vaadin-grid-column width="160px" resizable hidden$="{{ _columnsCG.estimatedValue.hidden }}">
                                        <template class="header">
                                            <vaadin-grid-sorter path="estimatedValue">Valor Estimado</vaadin-grid-sorter>
                                            <vaadin-grid-filter path="estimatedValue" />
                                        </template>
                                        <template>
                                            {{item.estimatedValue}}
                                        </template>
                                    </vaadin-grid-column>
                                </vaadin-grid>
                            </div>
                        </iron-pages>
                    </div>
                </div>
            </div>
        </div>

        <paper-toast id="ToastMessageSuccess" duration="4000" horizontalAlign="right" class="toastSuccess">&nbsp;<i class="fa fa-check fa-lg" aria-hidden="true"></i></paper-toast>
        <paper-toast id="ToastMessageError" duration="4000" horizontalAlign="right" class="toastError">&nbsp;<i class="fa fa-exclamation-triangle" aria-hidden="true"></i></paper-toast>
    </template>
    <script>
        document.addEventListener('WebComponentsReady', function () {
            Polymer({
                is: 'x-request',
                properties: {
                    _filterActive: {
                        type: Boolean,
                        value: true
                    },
                    _filterActiveCG: {
                        type: Boolean,
                        value: true
                    },
                    selectedItems: {
                        type: Array
                    },
                    selectedItemsCG: {
                        type: Array
                    },
                    selectedItem: {
                        type: Array
                    },
                    selectedItemCG: {
                        type: Array
                    },
                    _SelectedLine: {
                        observer: '_rowSelected'
                    },
                    _SelectedLineCG: {
                        observer: '_rowSelectedCG'
                    },
                    selected: {
                        type: Number,
                        value: 0
                    },
                    selectedCG: {
                        type: Number,
                        value: 0
                    },
                    _showVerMessage: {
                        type: String,
                        value: "Ver Enviadas"
                    },
                    _columns: {
                        type: Object,
                        value: function () {
                            return {};
                        }
                    },
                    _columnsCG: {
                        type: Object,
                        value: function () {
                            return {};
                        }
                    },
                    _hasErrors: {
                        type: Boolean,
                        value: false
                    },
                    _hasErrorsCG: {
                        type: Boolean,
                        value: false
                    },
                    _opcaoCG: {
                        type: Number,
                        value: 1
                    },
                },
                observers: [
                    '_onCacheLoaded(resultstatus,RegionData,FunctionalAreaCodeData,ResponsabilityCenterData,LocalMarketRegions)'
                ],
                _onCacheLoaded: function (resultstatus, RegionData, FunctionalAreaCodeData, ResponsabilityCenterData, LocalMarketRegions) {
                    this.selectedItems = [];
                    this.selectedItemsCG = [];

                    if (!this.Flag) {
                        this.$.ajax_getgrid.generateRequest();

                        this.$.ajax_getgridCG.body = JSON.stringify({ "opcao": this._opcaoCG });
                        this.$.ajax_getgridCG.generateRequest();
                    }
                    this.Flag = true;

                    /*ColumnToggle*/
                    this._startColumnToggle();
                    this._startColumnToggleCG();

                    var _this = this;
                    $(window).resize(function () {
                        _this.fixGridToBottom();
                        _this.fixGridToBottomCG();
                    });
                    $(window).trigger('resize');
                },
                fixGridToBottom: function () {
                    var grid_el = $(this.$.gridrequest);
                    var parentHeight = $(this).offsetParent().height();
                    var offsetTop = $(this).offset().top + 120;
                    var height = (parentHeight - offsetTop);
                    grid_el.height(height);
                },
                fixGridToBottomCG: function () {
                    var grid_el = $(this.$.gridrequestCG);
                    var parentHeight = $(this).offsetParent().height();
                    var offsetTop = $(this).offset().top + 120;
                    var height = (parentHeight - offsetTop);
                    grid_el.height(height);
                },
                //Mostra Mensagens
                _showMessage: function (message) {
                    this.$.ToastMessageSuccess.text = message;
                    this.$.ToastMessageSuccess.open();
                },

                //Mostra Mensagens de Erro
                _showErrorMessage: function (message) {
                    this.$.ToastMessageError.text = message;
                    this.$.ToastMessageError.open();
                },
                _toggleToastMultiple: function () {
                    this._checkForErrors();
                    if (this._hasErrors)
                        this.$.ToastMessageMultiple.duration = 0;
                    else
                        this.$.ToastMessageMultiple.duration = 8000;
                    this.$.ToastMessageMultiple.toggle();
                    this.Requisition.eMessages = [];
                },
                _checkForErrors: function () {
                    var errors = this.Requisition.eMessages.find(x => x.type == 0);
                    this._hasErrors = !(errors == undefined);
                },

                _parsestate: function (param1) {
                    if (param1 != undefined) {
                        if (this.resultstatus != null) {
                            var array = this.resultstatus;
                            if (param1 != undefined) {
                                return array.find(x => x.id == param1).value;
                            }
                        }
                    }
                    return "";

                },
                _rowSelected: function (item) {
                    if (item != null) {
                        window.location.href = "/GestaoRequisicoes/LinhasRequisicao/" + item.requisitionNo;
                    }
                },
                _rowSelectedCG: function (item) {
                    if (item != null) {
                          window.location.href = "/GestaoRequisicoes/LinhasRequisicaoReadOnly/" + item.requisitionNo;

                    //    if (item.state == 7 || item.noEncomendaFornecedor != "") {
                    //        window.location.href = "/GestaoRequisicoes/LinhasRequisicaoReadOnly/" + item.requisitionNo;
                    //    }
                    //    else {
                    //        window.location.href = "/GestaoRequisicoes/LinhasRequisica/" + item.requisitionNo;
                    //    }
                    }
                },
                _parseregion: function (param) {
                    if (param != undefined && this.RegionData != undefined) {
                        var sel = this.RegionData.find(x => x.id == param);
                        if (sel != undefined) {
                            return sel.value;
                        }
                    }
                    return "";

                },
                _parseArea: function (param) {
                    if (param != undefined && this.FunctionalAreaCodeData != undefined) {
                        var sel = this.FunctionalAreaCodeData.find(x => x.id == param);
                        if (sel != undefined) {
                            return sel.value;
                        }
                    }
                    return "";

                },
                _parseDateFormat: function (date) {
                    if (date != null && date != "") {
                        var Date = date.split("T");
                        if (Date != "" && Date != undefined) {
                            var x = Date[0].split("-");
                            return x[2] + "-" + x[1] + "-" + x[0];
                        }
                    }
                },
                _parsecenterRespons: function (param) {
                    if (param != undefined && this.ResponsabilityCenterData != undefined) {
                        var sel = this.ResponsabilityCenterData.find(x => x.id == param);
                        if (sel != undefined) {
                            return sel.value;
                        }
                    }
                    return "";
                },
                _getLocalMarketRegionDescription: function (param) {
                    if (param != undefined && this.LocalMarketRegions != undefined) {
                        var sel = this.LocalMarketRegions.find(x => x.id == param);
                        if (sel != undefined) {
                            return sel.value;
                        }
                    }
                    return "";
                },

                _createPurchaseOrder: function (selectedItem, selectedItems) {
                    if (this.selectedItems != null && this.selectedItems != "") {

                        $(this.$.btnCreatePurchaseOrder).addClass('disabled');

                        var selItms = this.selectedItems;

                        this.$.createPurchOrder_ajax.body = JSON.stringify(selItms);
                        this.$.createPurchOrder_ajax.generateRequest();
                        this.$.gridrequest.clearCache();
                    } else {
                        this._showErrorMessage("Não foi selecionada nenhuma linha.");
                    }
                },

                _createPurchaseOrderResponse: function (e) {
                    this.selectedItems = [];
                    this.selectedItemsCG = [];

                    if (this.Requisition.eReasonCode == "1") {
                        this._showMessage(this.Requisition.eMessage);
                    }
                    else {
                        if (this.Requisition.eMessages.length > 0)
                            this._toggleToastMultiple();
                        else {
                            this._showErrorMessage(this.Requisition.eMessage);
                        }
                    }

                    $(this.$.btnCreatePurchaseOrder).removeClass('disabled');
                    location.reload(true);
                },

                _exportEXCEL: function () {
                    this.result[0].ColunasEXCEL = this._columns;

                    this.$.ajax_Export.body = JSON.stringify(this.result);
                    this.$.ajax_Export.generateRequest();
                },

                _exportEXCELResponse: function (e) {
                    var FileName = this.export;
                    location.href = '../GestaoRequisicoes/ExportToExcelDownload_GestaoRequisicoes?sFileName=' + FileName;
                },

                /*start - ColumnToggle*/
                _startColumnToggle: function () {
                    var columns = {
                        "requisitionNo": { hidden: false, label: "Nº Requisição" },
                        "state": { hidden: false, label: "Estado" },
                        "urgent": { hidden: false, label: "Urgente" },
                        "buyCash": { hidden: false, label: "Compra a Dinheiro" },
                        "alreadyPerformed": { hidden: false, label: "Trabalho já executado" },
                        "requestNutrition": { hidden: false, label: "Requisição Nutrição" },
                        "budget": { hidden: false, label: "Orçamento" },
                        "localMarket": { hidden: false, label: "Mercado Local" },
                        "localMarketRegion": { hidden: false, label: "Região Mercado Local" },
                        "localMarketDate": { hidden: false, label: "Data Mercado Local" },
                        "regionCode": { hidden: false, label: "Código Região" },
                        "functionalAreaCode": { hidden: false, label: "Código Área Funcional" },
                        "centerResponsibilityCode": { hidden: false, label: "Código Centro Responsabilidade" },
                        "comments": { hidden: false, label: "Observações" },
                        "marketInquiryNo": { hidden: false, label: "Nº Consulta Mercado" },
                        "orderNo": { hidden: false, label: "Nº Encomenda" },
                        "stockReplacement": { hidden: false, label: "Reposição Stock" },
                        "reclamation": { hidden: false, label: "Reclamação" },
                        "requestReclaimNo": { hidden: false, label: "Nº Requisição Reclamada" },
                        "requisitionDate": { hidden: false, label: "Data requisição" },
                        "createUser": { hidden: false, label: "Utilizador Criação" },
                        "estimatedValue": { hidden: false, label: "Valor Estimado" }

                    };

                    if (localStorage["request.ToggleColumn"]) {
                        var keys = Object.keys(columns);
                        var storedColumns = JSON.parse(localStorage["request.ToggleColumn"]);
                        for (var i = 0; i < keys.length; i++) {
                            columns[keys[i]] = storedColumns[keys[i]];
                        }
                    };
                    this._columns = columns;
                },
                _toggleColumn: function (event) {
                    var columnIndex = JSON.parse(event.target.dataset.item).key;
                    event.path[0].classList.toggle("selected");
                    this.set('_columns.' + columnIndex + '.hidden', (!this._columns[columnIndex].hidden));
                    if (typeof (Storage) !== "undefined") {
                        localStorage["request.ToggleColumn"] = JSON.stringify(this._columns);
                    }
                },
                _getColumnItemClass: function (columnIndex) {
                    return !this._columns[columnIndex].hidden ? "selected" : "";
                },
                _toArray: function (obj) {
                    return Object.keys(obj).map(function (key) {
                        return {
                            key: key,
                            value: obj[key]
                        };
                    });
                },

                _startColumnToggleCG: function () {
                    var columnsCG = {
                        "requisitionNo": { hidden: false, label: "Nº Requisição" },
                        "noSubFornecedor": { hidden: false, label: "Nº SubFornecedor" },
                        "nomeSubFornecedor": { hidden: false, label: "SubFornecedor" },
                        "noEncomendaFornecedor": { hidden: false, label: "Nº Encomenda do Fornecedor" },
                        "dataEncomendaSubfornecedorText": { hidden: false, label: "Data Encomenda do SubFornecedor" },
                        "urgent": { hidden: false, label: "Urgente" },
                        "buyCash": { hidden: false, label: "Compra a Dinheiro" },
                        "alreadyPerformed": { hidden: false, label: "Trabalho já executado" },
                        "requestNutrition": { hidden: false, label: "Requisição Nutrição" },
                        "budget": { hidden: false, label: "Orçamento" },
                        "localMarket": { hidden: false, label: "Mercado Local" },
                        "localMarketRegion": { hidden: false, label: "Região Mercado Local" },
                        "localMarketDate": { hidden: false, label: "Data Mercado Local" },
                        "regionCode": { hidden: false, label: "Código Região" },
                        "functionalAreaCode": { hidden: false, label: "Código Área Funcional" },
                        "centerResponsibilityCode": { hidden: false, label: "Código Centro Responsabilidade" },
                        "comments": { hidden: false, label: "Observações" },
                        "marketInquiryNo": { hidden: false, label: "Nº Consulta Mercado" },
                        "orderNo": { hidden: false, label: "Nº Encomenda" },
                        "stockReplacement": { hidden: false, label: "Reposição Stock" },
                        "reclamation": { hidden: false, label: "Reclamação" },
                        "requestReclaimNo": { hidden: false, label: "Nº Requisição Reclamada" },
                        "requisitionDate": { hidden: false, label: "Data requisição" },
                        "createUser": { hidden: false, label: "Utilizador Criação" },
                        "estimatedValue": { hidden: false, label: "Valor Estimado" }
                    };

                    if (localStorage["request.ToggleColumn"]) {
                        var keys = Object.keys(columnsCG);
                        var storedcolumnsCG = JSON.parse(localStorage["request.ToggleColumn"]);
                        for (var i = 0; i < keys.length; i++) {
                            columnsCG[keys[i]] = storedcolumnsCG[keys[i]];
                        }
                    };
                    this._columnsCG = columnsCG;
                },
                _toggleColumnCG: function (event) {
                    var columnIndex = JSON.parse(event.target.dataset.item).key;
                    event.path[0].classList.toggle("selected");
                    this.set('_columnsCG.' + columnIndex + '.hidden', (!this._columnsCG[columnIndex].hidden));
                    if (typeof (Storage) !== "undefined") {
                        localStorage["request.ToggleColumn"] = JSON.stringify(this._columnsCG);
                    }
                },
                _getColumnItemClassCG: function (columnIndex) {
                    return !this._columnsCG[columnIndex].hidden ? "selected" : "";
                },
                _toArrayCG: function (obj) {
                    return Object.keys(obj).map(function (key) {
                        return {
                            key: key,
                            value: obj[key]
                        };
                    });
                },
                /* end - ColumnToggle */

                _goBack: function (e) {
                    window.history.back();
                },

                _HistoricoCG: function () {
                    this.selectedItems = [];
                    this.selectedItemsCG = [];

                    this.$.ajax_getgridHistoricoCG.generateRequest();
                },

                _btnVerCG: function () {
                    this.selectedItems = [];
                    this.selectedItemsCG = [];

                    if (this._opcaoCG == 1) {
                        this._opcaoCG = 2;
                        this._showVerMessage = "Ver Por Enviar";
                        this.$.btnCGEnviar.hidden = true;
                        this.$.btnCGCreatePurchaseOrder.hidden = false;
                        //this.$.btnCGExportLinhasNutricao.hidden = true;
                    }
                    else {
                        this._opcaoCG = 1;
                        this._showVerMessage = "Ver Enviadas";
                        this.$.btnCGEnviar.hidden = false;
                        this.$.btnCGCreatePurchaseOrder.hidden = true;
                        //this.$.btnCGExportLinhasNutricao.hidden = false;
                    }


                    this.$.ajax_getgridCG.body = JSON.stringify({ "opcao": this._opcaoCG });
                    this.$.ajax_getgridCG.generateRequest();
                },

                _EnviarCG: function () {
                    if (this.selectedItemsCG != null && this.selectedItemsCG != "") {

                        $(this.$.btnCGExportLinhasNutricao).addClass('disabled');

                        var selItmsCG = this.selectedItemsCG;

                        this.$.ajax_ExportCG_LinhasNutricao.body = JSON.stringify(selItmsCG);
                        this.$.ajax_ExportCG_LinhasNutricao.params = { "update": true };
                        this.$.ajax_ExportCG_LinhasNutricao.generateRequest();
                        this.$.gridrequestCG.clearCache();
                    } else {
                        this._showErrorMessage("Não foi selecionada nenhuma Requisição.");
                    }
                },

                _createPurchaseOrderCG: function () {
                    if (this.selectedItemsCG != null && this.selectedItemsCG != "") {

                        $(this.$.btnCGCreatePurchaseOrder).addClass('disabled');

                        var selItms = this.selectedItemsCG;

                        this.$.createPurchOrderCG_ajax.body = JSON.stringify(selItms);
                        this.$.createPurchOrderCG_ajax.generateRequest();
                        this.$.gridrequestCG.clearCache();
                    } else {
                        this._showErrorMessage("Não foi selecionada nenhuma linha.");
                    }
                },
                _createPurchaseOrderCGResponse: function (e) {
                    this.selectedItems = [];
                    this.selectedItemsCG = [];

                    if (this.RequisitionCG.eReasonCode == "1") {
                        this._showMessage(this.RequisitionCG.eMessage);
                    }
                    else {
                        if (this.RequisitionCG.eMessages.length > 0)
                            this._toggleToastMultiple();
                        else {
                            this._showErrorMessage(this.RequisitionCG.eMessage);
                        }
                    }

                    $(this.$.btnCGCreatePurchaseOrder).removeClass('disabled');
                    location.reload(true);
                },


                _exportEXCELCG: function () {
                    this.resultCG[0].ColunasEXCEL = this._columnsCG;

                    this.$.ajax_ExportCG.body = JSON.stringify(this.resultCG);
                    this.$.ajax_ExportCG.generateRequest();
                },

                _exportEXCELResponseCG: function (e) {
                    var FileName = this.exportCG;
                    location.href = '../GestaoRequisicoes/ExportToExcelDownload_GestaoRequisicoesCG?sFileName=' + FileName;
                },

                _exportEXCELCG_LinhasNutricao: function () {
                    if (this.selectedItemsCG != null && this.selectedItemsCG != "") {
                        debugger;
                        if (this.selectedItemsCG.length == 1) {
                            var selItmsCG = this.selectedItemsCG;

                            this.$.ajax_ExportCG_LinhasNutricao.body = JSON.stringify(selItmsCG);
                            this.$.ajax_ExportCG_LinhasNutricao.params = { "update": false };
                            this.$.ajax_ExportCG_LinhasNutricao.generateRequest();
                        }
                        else {
                            this._showErrorMessage("Só pode escolher uma Requisição de cada vez para Exportar.");
                        }
                    } else {
                        this._showErrorMessage("Não foi selecionada nenhuma Requisição.");
                    }
                },

                _exportEXCELCG_LinhasNutricaoResponse: function (e) {
                    if (this.exportCG_LinhasNutricao.eReasonCode == 1) {
                        if (this.exportCG_LinhasNutricao.eMessage != null && this.exportCG_LinhasNutricao.eMessage != "") {
                            location.href = '../GestaoRequisicoes/ExportToExcelDownload_GestaoRequisicoesCG?sFileName=' + this.exportCG_LinhasNutricao.eMessage;
                        }
                        else {
                            this.$.ajax_getgridCG.body = JSON.stringify({ "opcao": this._opcaoCG });
                            this.$.ajax_getgridCG.generateRequest();

                            this._showMessage("As Ordens de Compra foram criadas e enviadas com sucesso.");
                        }
                    }
                    else {
                        this._showErrorMessage("Ocorreu um erro.");
                    }
                },

                _exportEXCELCG_LinhasNutricaoUpdateResponse: function (e) {
                    if (this.exportCG_LinhasNutricaoUpdate == true) {
                        this.$.ajax_getgridCG.body = JSON.stringify({ "opcao": this._opcaoCG });
                        this.$.ajax_getgridCG.generateRequest();

                        this._showMessage("Linhas exportadas e atualizadas com sucesso.");
                    }
                    else {
                        this._showErrorMessage("Ocorreu um erro ao atualizar as linhas.");
                    }

                    this.selectedItems = [];
                    this.selectedItemsCG = [];
                    $(this.$.btnCGExportLinhasNutricao).removeClass('disabled');
                },
            });
        });

    </script>
</dom-module>


