
@{
    ViewData["Title"] = "Detalhes Grupos Aprovacões";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



@*grid*@
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-sorter.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-sort-behavior.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-filter.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-filter-behavior.html" />
<link rel="import" href="~/lib/vaadin-valo-theme/vaadin-grid.html">
@*mixin*@
<link rel="import" href="~/lib/vaadin-themable-mixin/vaadin-themable-mixin.html" />
@*ironform*@
<link rel="import" href="~/lib/iron-form/iron-form.html" />
@*paperinput*@
<link rel="import" href="~/lib/paper-input/paper-input.html" />
@*button*@
<link rel="import" href="~/lib/paper-button/paper-button.html" />
@*toast*@
<link rel="import" href="/lib/paper-toast-master/paper-toast.html" />
@*textfield*@
<link rel="import" href="/lib/vaadin-valo-theme/vaadin-text-field.html">
<link rel="import" href="/lib/vaadin-text-field/vaadin-text-field.html">
<link rel="import" href="~/lib/vaadin-valo-theme/vaadin-date-picker.html">
<link rel="import" href="~/lib/vaadin-date-picker/vaadin-date-picker.html">

<link rel="import" href="~/lib/vaadin-combo-box/vaadin-combo-box.html">
<link rel="import" href="~/lib/vaadin-valo-theme/vaadin-combo-box.html">


<h1 class="title">@ViewData["Title"]</h1>

<x-detailsgroupapprovals></x-detailsgroupapprovals>

<dom-module id="x-detailsgroupapprovals">
    <template>
        <link rel="stylesheet" href="/lib/bootstrap/dist/css/bootstrap.css" />
        <link rel="stylesheet" href="~/lib/font-awesome-4.7.0/css/font-awesome.min.css" />
        <link rel="stylesheet" href="/css/main.css" />

        <custom-style>
            <style is="custom-style">
                input[readonly] {
                    border: 2px solid transparent;
                }

                input {
                    font: inherit;
                }

                paper-input {
                    max-width: 450px !important;
                }
            </style>
        </custom-style>

        @*POPULATE GRID*@
        <iron-ajax url="/Administracao/GetDetailsApprovalGroup"
                   last-response="{{result}}"
                   method="post"
                   auto
                   handle-as="json"
                   id="page_databound_ajax"
                   content-type="application/json">
        </iron-ajax>


        @*POPULATE Update*@
        <iron-ajax last-response="{{result}}"
                   method="post"
                   handle-as="json"
                   id="ajax_update"
                   on-response="_updateResponse"
                   content-type="application/json">
        </iron-ajax>


        <iron-ajax url="/PopulateDropdowns/GetUtilizadores"
                   last-response="{{UsersList}}"
                   auto
                   method="post"
                   handle-as="json"
                   content-type="application/json">
        </iron-ajax>
        <div class="row">
            <div class="col-lg-2">
                <h2 class="separator">Novo Registo :</h2>
            </div>
            <div class="col-lg-pull-1">
                <h2 class="separator"> @ViewBag.GroupApproval</h2>
            </div>
        </div>
      
        <div class="row">
            <div class="col-lg-4">
                <vaadin-combo-box items="[[UsersList]]" id="ddUser" item-value-path="id" item-label-path="value" value="{{ddUser}}" label="Utilizador Aprovação" disabled="{{ _permissionsCreate }}">
                    <template>
                        <table width="350px">
                            <tr>
                                <td width="30%"> <b>[[item.value]]</b></td>
                                <td width="70%">[[item.id]]</td>
                            </tr>
                        </table>
                    </template>
                </vaadin-combo-box>
            </div>
            <div class="col-lg-2 alignPoga">
                <paper-button id="btnAddNew" class="btnSave" on-tap="_createApprovalGroupDetails" disabled="{{ _permissionsCreate }}">Criar</paper-button>
            </div>
        </div>
        <br />

        <vaadin-grid id="gridDetailsGroupApprovals" aria-label="gridDetailsGroupApprovals" items="[[result]]" class="grid" multi-sort="true">
            <vaadin-grid-column resizable>
                <template class="header">
                    <vaadin-grid-sorter path="approvalUser">Utilizador</vaadin-grid-sorter>
                    <vaadin-grid-filter path="approvalUser" />
                </template>
                <template>
                    <vaadin-text-field value="{{item.approvalUser}}" disabled></vaadin-text-field>
                </template>
            </vaadin-grid-column>
            <vaadin-grid-column width="10%" resizable>
                <template class="header">
                </template>
                <template>
                    <center>
                        <paper-button class="btnRemove" raised on-tap="_deleteAccessProfile" disabled="{{_permissionsDelete}}">Eliminar</paper-button>
                    </center>
                </template>
            </vaadin-grid-column>
        </vaadin-grid>

        <paper-toast id="ToastMessageSuccess" duration="4000" horizontalAlign="right" class="toastSuccess">&nbsp;<i class="fa fa-check fa-lg" aria-hidden="true"></i></paper-toast>
        <paper-toast id="ToastMessageError" duration="4000" horizontalAlign="right" class="toastError">&nbsp;<i class="fa fa-exclamation-triangle" aria-hidden="true"></i></paper-toast>
    </template>

    <script>
        var CreateValue = true, UpdateValue = true, DeleteValue = true;
         if ('@Html.Raw(Json.Serialize(ViewBag.CreatePermissions))' =="false") {
            CreateValue = false;
        }
        if ('@Html.Raw(Json.Serialize(ViewBag.UpdatePermissions))' =="false") {
            UpdateValue = false;
        }
        if ('@Html.Raw(Json.Serialize(ViewBag.DeletePermissions))' =="false") {
            DeleteValue = false;
        }
        document.addEventListener('WebComponentsReady', function () {
            Polymer({
                is: 'x-detailsgroupapprovals',
                properties: {
                    _permissionsUpdate: {
                        type: Boolean,
                        value: UpdateValue
                    },
                    _permissionsCreate: {
                        type: Boolean,
                        value: CreateValue
                    },
                    _permissionsDelete: {
                        type: Boolean,
                        value: DeleteValue
                    },
                },
                ready: function () {
                    this.$.page_databound_ajax.body = JSON.stringify(@ViewBag.IDGroupApproval);
                    this.$.page_databound_ajax.generateRequest();
                },
                openToast: function (message) {
                    this.$.ToastMessageSuccess.text = message;
                    this.$.ToastMessageSuccess.open();
                },
                openToastError: function (message) {
                    this.$.ToastMessageError.text = message;
                    this.$.ToastMessageError.open();
                },              
                _createApprovalGroupDetails: function () {
                    if (this.$.ddUser.value != null && this.$.ddUser.value != "") {
                        var line = {
                            approvalGroup: @ViewBag.IDGroupApproval,
                            approvalUser: this.$.ddUser.value
                        }
                        if (this.result == null) {
                            this.result = line;
                        }
                        else {
                            this.result.push(line);
                        }
                        this.$.ajax_update.body = JSON.stringify(this.result);
                        this.$.ajax_update.url = "/Administracao/CreateDetailsApprovalGroup";
                        this.$.ajax_update.generateRequest();
                        this.$.gridDetailsGroupApprovals.clearCache();
                    }
                    else {
                        this.openToastError("A descrição não pode ser vazia");
                    }
                },
                _updateResponse: function (e) {
                    var self = this;
                    if (e.detail.status === 200) {
                        this.openToast('Atualizado com sucesso!');
                        this.$.page_databound_ajax.body = JSON.stringify(@ViewBag.IDGroupApproval);                        
                        this.$.page_databound_ajax.generateRequest();
                        this.$.ddUser.value = "";
                    }
                    else {
                        this.openToastError('Ocorreu um erro ao atualizar o perfil modelo.');
                    }
                },
                _cancel: function () {
                    this.$.page_databound_ajax.generateRequest();
                    this.$.gridDetailsGroupApprovals.clearCache();
                },



                _deleteAccessProfile: function (data) {
                    var index = this.result.indexOf(data.model.item);
                    this.result.splice(index, 1);
                    this.$.ajax_update.url = "/Administracao/UpdateDetailsApprovalGroup";
                    this.$.ajax_update.body = JSON.stringify(this.result);
                    this.$.ajax_update.generateRequest();
                }
            });
        });
    </script>
</dom-module>
