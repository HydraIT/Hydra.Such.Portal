
@{
    ViewData["Title"] = "Detalhes de Grupo de Aprovação";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*grid*@
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-sorter.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-sort-behavior.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-filter.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-filter-behavior.html" />
<link rel="import" href="~/lib/vaadin-valo-theme/vaadin-grid.html">
@*mixin*@
<link rel="import" href="~/lib/vaadin-themable-mixin/vaadin-themable-mixin.html" />
@*ironform*@
<link rel="import" href="~/lib/iron-form/iron-form.html" />
@*paperinput*@
<link rel="import" href="~/lib/paper-input/paper-input.html" />
@*button*@
<link rel="import" href="~/lib/paper-button/paper-button.html" />
@*toast*@
<link rel="import" href="/lib/paper-toast-master/paper-toast.html" />
@*textfield*@
<link rel="import" href="/lib/vaadin-valo-theme/vaadin-text-field.html">
<link rel="import" href="/lib/vaadin-text-field/vaadin-text-field.html">
<link rel="import" href="~/lib/vaadin-valo-theme/vaadin-date-picker.html">
<link rel="import" href="~/lib/vaadin-date-picker/vaadin-date-picker.html">

<link rel="import" href="/lib/vaadin-checkbox/vaadin-checkbox.html">
<link rel="import" href="/lib/vaadin-valo-theme/vaadin-checkbox.html" />

<link rel="import" href="~/lib/vaadin-combo-box/vaadin-combo-box.html">
<link rel="import" href="~/lib/vaadin-valo-theme/vaadin-combo-box.html">

<x-detailsgroupapprovals _requestno="@ViewBag.IDGroupApproval"></x-detailsgroupapprovals>

<dom-module id="x-detailsgroupapprovals">
    <template>
        <link rel="stylesheet" href="/lib/bootstrap/dist/css/bootstrap.css" />
        <link rel="stylesheet" href="~/lib/font-awesome-4.7.0/css/font-awesome.min.css" />
        <link rel="stylesheet" href="/css/main.css" />

        <custom-style>
            <style is="custom-style">
                input[readonly] {
                    border: 2px solid transparent;
                }

                input {
                    font: inherit;
                }

                paper-input {
                    max-width: 450px !important;
                }
            </style>
        </custom-style>

        @*POPULATE GRID*@
        <iron-ajax url="/Administracao/GetDetailsApprovalGroup"
                   last-response="{{result}}"
                   method="post"
                   auto
                   handle-as="json"
                   id="page_databound_ajax"
                   content-type="application/json">
        </iron-ajax>

        <iron-ajax url="/Administracao/GetApprovalGroupID"
                   last-response="{{groupresult}}"
                   method="post"
                   handle-as="json"
                   id="page_databound_ajax2"
                   content-type="application/json">
        </iron-ajax>

        <iron-ajax url="/Administracao/UpdateApprovalGroup"
                   last-response="{{groupresult}}"
                   method="post"
                   handle-as="json"
                   id="ajax_group"
                   on-response="_updateResponseGroup"
                   content-type="application/json">
        </iron-ajax>
        <iron-ajax last-response="{{deleteResult}}"
                   method="post"
                   handle-as="json"
                   id="ajax_delete_group"
                   on-response="_deleteResponseGroup"
                   content-type="application/json">
        </iron-ajax>
        @*POPULATE Update*@
        <iron-ajax last-response="{{createResult}}"
                   method="post"
                   handle-as="json"
                   id="ajax_update"
                   on-response="_updateResponse"
                   content-type="application/json">
        </iron-ajax>

        <iron-ajax last-response="{{deleteResult}}"
                   method="post"
                   handle-as="json"
                   id="ajax_delete"
                   on-response="_deleteResponse"
                   content-type="application/json">
        </iron-ajax>

        <iron-ajax url="/PopulateDropdowns/GetUtilizadores"
                   last-response="{{UsersList}}"
                   auto
                   method="post"
                   handle-as="json"
                   content-type="application/json">
        </iron-ajax>

        <iron-ajax url="/Administracao/UpdateLinhaGrupoAprovacao"
                   last-response="{{linhaGrupoAprovacaoUpdated}}"
                   method="post"
                   handle-as="json"
                   id="page_updateLinhaGrupoAprovacao_ajax"
                   on-response="_updateLinhaGrupoAprovacaoResponse"
                   content-type="application/json">
        </iron-ajax>

        <div class="row break_frm">
            <div class="col-md-12 col-lg-12">
                <iron-form id="formContract">

                    <div class="panel panel-default">
                        <div class="panel-heading">Grupo</div>
                        <div class="panel-body">
                            <div class="row">
                                <div class="col-lg-3" style="display: {{ _showLines }};">
                                    <vaadin-text-field value="{{groupresult.code}}" id="lRequestNo" name="lRequestNo" label="ID Grupo" disabled> </vaadin-text-field>
                                </div>
                                <div class="col-lg-3">
                                    <vaadin-text-field value="{{groupresult.description}}" id="lgroupName" name="groupName" label="Nome Grupo" required error-message="Este campo é obrigatório"> </vaadin-text-field>
                                </div>
                            </div>

                            <div class="row">
                                <div class="marginSpace" id="ddmarginSpaceCabe">
                                    <template is="dom-if" if="{{ _isCreate }}">
                                        <template is="dom-if" if="{{ !_permissionsCreate }}">
                                            <paper-button raised id="btnCreate" class="btnSave" on-tap="_createGroup"><i class="fa fa-plus" aria-hidden="true"></i>&nbsp; Criar</paper-button>
                                        </template>
                                    </template>
                                    <template is="dom-if" if="{{ !_isCreate }}">
                                        <template is="dom-if" if="{{ !_permissionsUpdate }}">
                                            <paper-button raised id="btnUpdate" class="btnSave" on-tap="_updateGroup"><i class="fa fa-floppy-o" aria-hidden="true"></i>&nbsp; Guardar</paper-button>
                                        </template>
                                        <template is="dom-if" if="{{ !_permissionsDelete }}">
                                            <center>
                                                @*<paper-button raised id="btnCancel" class="btnRemove" on-tap="_deleteGroup"><i class="fa fa-trash-o" aria-hidden="true"></i>&nbsp; Eliminar</paper-button>*@
                                                <paper-button raised id="btnCancel" class="btnRemove tableBtn" on-tap="_deleteGroup" title="Eliminar"><i class="fa fa-trash" aria-hidden="true"></i></paper-button>
                                            </center>
                                        </template>
                                        <template is="dom-if" if="{{ !_permissionsCreate }}">
                                            <paper-button class="btnSave" raised on-tap="_create"><i class="fa fa-plus" aria-hidden="true"></i>&nbsp; Novo</paper-button>
                                        </template>
                                    </template>
                                </div>
                            </div>
                        </div>
                    </div>
                </iron-form>
            </div>
        </div>

        <div class="row break_frm" style="display: {{ _showLines }};">
            <div class="col-md-12 col-lg-12">
                <iron-form id="formContract">
                    <div class="panel panel-default">
                        <div class="panel-heading">Utilizadores</div>
                        <div class="panel-body">
                            <template is="dom-if" if="{{ !_permissionsUpdate }}">
                                <div class="row">
                                    <div class="col-lg-4">
                                        <vaadin-combo-box items="[[UsersList]]" id="ddUser" item-value-path="id" item-label-path="value" value="{{ddUser}}" label="Utilizador Aprovação" disabled="{{ _permissionsCreate }}">
                                            <template>
                                                <table width="350px">
                                                    <tr>
                                                        <td width="30%"> <b>[[item.value]]</b></td>
                                                        <td width="70%">[[item.id]]</td>
                                                    </tr>
                                                </table>
                                            </template>
                                        </vaadin-combo-box>
                                    </div>

                                    <div class="col-lg-2 alignPoga">
                                        <vaadin-checkbox id="enviarEmailAlerta" checked="{{chkEnviarEmailAlerta}}">Enviar Email de Alerta</vaadin-checkbox>
                                    </div>

                                    <div class="col-lg-2 alignPoga">
                                        <paper-button id="btnAddNew" class="btnSave" on-tap="_createApprovalGroupDetails" disabled="{{ _permissionsCreate }}">Criar</paper-button>
                                    </div>
                                </div>
                            </template>
                            <br />

                            <vaadin-grid id="gridDetailsGroupApprovals" aria-label="gridDetailsGroupApprovals" items="[[result]]" class="grid" multi-sort="true">
                                <vaadin-grid-column resizable>
                                    <template class="header">
                                        <vaadin-grid-sorter path="approvalUser">Utilizadores</vaadin-grid-sorter>
                                        <vaadin-grid-filter path="approvalUser" />
                                    </template>
                                    <template>
                                        <vaadin-text-field id="linhaApprovalUser" value="{{item.approvalUser}}" disabled></vaadin-text-field>
                                    </template>
                                </vaadin-grid-column>

                                <vaadin-grid-column resizable>
                                    <template class="header">
                                        <vaadin-grid-sorter path="enviarEmailAlerta">Enviar Email de Alerta</vaadin-grid-sorter>
                                        <vaadin-grid-filter path="enviarEmailAlerta" />
                                    </template>
                                    <template>
                                        <vaadin-checkbox id="linhaEnviarEmailAlerta" checked="{{item.enviarEmailAlerta}}" on-blur="_updateLinhaGrupoAprovacao"></vaadin-checkbox>
                                    </template>
                                </vaadin-grid-column>

                                <template is="dom-if" if="{{ !_permissionsUpdate }}">
                                    <vaadin-grid-column width="10%" resizable>
                                        <template class="header">
                                        </template>
                                        <template>
                                            <center>
                                                @*<paper-button class="btnRemove" raised on-tap="_deleteAccessProfile" disabled="{{_permissionsUpdate}}">Eliminar</paper-button>*@
                                                <paper-button class="btnRemove tableBtn" raised on-tap="_deleteAccessProfile" disabled="{{_permissionsUpdate}}" title="Eliminar"><i class="fa fa-trash" aria-hidden="true"></i></paper-button>
                                            </center>
                                        </template>
                                    </vaadin-grid-column>
                                </template>
                            </vaadin-grid>
                        </div>
                    </div>
                </iron-form>
            </div>
        </div>

        <paper-toast id="ToastMessageSuccess" duration="4000" horizontalAlign="right" class="toastSuccess">&nbsp;<i class="fa fa-check fa-lg" aria-hidden="true"></i></paper-toast>
        <paper-toast id="ToastMessageError" duration="4000" horizontalAlign="right" class="toastError">&nbsp;<i class="fa fa-exclamation-triangle" aria-hidden="true"></i></paper-toast>
    </template>

    <script>
        var CreateValue = true, UpdateValue = true, DeleteValue = true;
         if ('@Html.Raw(Json.Serialize(ViewBag.CreatePermissions))' =="false") {
            CreateValue = false;
        }
        if ('@Html.Raw(Json.Serialize(ViewBag.UpdatePermissions))' =="false") {
            UpdateValue = false;
        }
        if ('@Html.Raw(Json.Serialize(ViewBag.DeletePermissions))' =="false") {
            DeleteValue = false;
        }
        document.addEventListener('WebComponentsReady', function () {
            Polymer({
                is: 'x-detailsgroupapprovals',
                properties: {
                    _permissionsUpdate: {
                        type: Boolean,
                        value: UpdateValue
                    },
                    _permissionsCreate: {
                        type: Boolean,
                        value: CreateValue
                    },
                    _permissionsDelete: {
                        type: Boolean,
                        value: DeleteValue
                    },
                    _requestno: {
                        type: String,
                        notify: true,
                        value: ""
                    },
                    chkEnviarEmailAlerta: {
                        type: Boolean,
                        notify: true,
                        value: true
                    },
                    _isCreate: {
                        type: Boolean,
                        value: true
                    },
                    _showLines: {
                        type: String,
                        value: "none"
                    },
                },
                ready: function () {
                    if (this._requestno != "") {
                        this._isCreate = false;
                        this._showLines = "";
                        this.$.page_databound_ajax.body = JSON.stringify(this._requestno);
                        this.$.page_databound_ajax2.body = JSON.stringify(this._requestno);
                    }

                    this.$.page_databound_ajax2.generateRequest();
                    this.$.page_databound_ajax.generateRequest();
                },
                openToast: function (message) {
                    this.$.ToastMessageSuccess.text = message;
                    this.$.ToastMessageSuccess.open();
                },
                openToastError: function (message) {
                    this.$.ToastMessageError.text = message;
                    this.$.ToastMessageError.open();
                },
                _create: function (item) {
                    if (item != null) {
                        window.location.href = "/Administracao/DetalhesGruposAprovacoes";
                    }
                },
                _createGroup: function (e) {
                    var line = {
                        description: this.$.lgroupName.value
                    }
                    this.$.ajax_group.url = "/Administracao/CreateApprovalGroup";
                    this.$.ajax_group.body = JSON.stringify(line);
                    this.$.ajax_group.generateRequest();
                },
                _updateGroup: function (e) {
                      var line = {
                           code: this.$.lRequestNo.value,
                           description: this.$.lgroupName.value
                      }
                      this.$.ajax_group.url = "/Administracao/UpdateApprovalGroup";
                      this.$.ajax_group.body = JSON.stringify(line);
                      this.$.ajax_group.generateRequest();
                },
                _deleteGroup: function (e) {
                    var line = {
                        code: this.$.lRequestNo.value,
                        description: this.$.lgroupName.value
                    }
                    this.$.ajax_delete_group.url = "/Administracao/DeleteApprovalGroup";
                    this.$.ajax_delete_group.body = JSON.stringify(line);
                    this.$.ajax_delete_group.generateRequest();
                },

                _createApprovalGroupDetails: function () {
                    //debugger;
                    if (this.ddUser != null && this.ddUser != "") {
                        var line = {
                            approvalGroup: this.$.lRequestNo.value,
                            approvalUser: this.ddUser,
                            enviarEmailAlerta: this.chkEnviarEmailAlerta
                        }
                        if (this.result == null) {
                            this.result = line;
                        }
                        else {
                            this.result.push(line);
                        }

                        this.$.ajax_update.body = JSON.stringify(line);
                        this.$.ajax_update.url = "/Administracao/CreateDetailsApprovalGroup";
                        this.$.ajax_update.generateRequest();
                    }
                    else {
                        this.openToastError("A descrição não pode ser vazia");
                    }
                },
                _updateResponseGroup: function (e) {
                    var self = this;
                    if (e.detail.status === 200) {
                        if (this.groupresult.eReasonCode == 101) {
                            this.openToastError('Erro ao Actualizar grupo');
                        } else {
                            this._isCreate = false;
                            this._showLines = "";
                            this._requestno = this.groupresult.code;
                            this.openToast('Actualizado com sucesso!');
                        }
                    }
                    else {
                        this.openToastError('Ocorreu um erro ao atualizar o grupo.');
                    }
                },
                _updateResponse: function (e) {
                    var self = this;
                    if (e.detail.status === 200) {
                        if (this.createResult == "101") {
                            this.openToastError('Registo duplicado!');
                            this.$.page_databound_ajax.generateRequest();

                        } else {
                            this.ddUser = "";
                            this.openToast('Atualizado com sucesso!');
                            this.$.page_databound_ajax.body = JSON.stringify(this._requestno);
                            this.$.page_databound_ajax.generateRequest();
                            this.$.gridDetailsGroupApprovals.clearCache();
                        }
                    }
                    else {
                        this.openToastError('Ocorreu um erro ao atualizar o perfil modelo.');
                    }
                },
                  _deleteResponse: function (e) {
                    var self = this;
                    if (e.detail.status === 200) {
                        this.openToast('Eliminado com sucesso!');
                        this.$.page_databound_ajax.body = JSON.stringify(this._requestno);
                        this.$.page_databound_ajax.generateRequest();

                    }
                    else {
                        this.openToastError('Ocorreu um erro ao atualizar o perfil modelo.');
                    }
                },
                  _deleteResponseGroup: function (e) {
                    var self = this;
                    if (e.detail.status === 200) {
                        this.openToast('Eliminado com sucesso!');
                        setTimeout(
                            function () {
                                window.location.href = "/Administracao/GruposAprovacoes/Administracao";
                            }, 2500);

                    }
                    else {
                        this.openToastError('Ocorreu um erro ao atualizar o perfil modelo.');
                    }
                  },

                _cancel: function () {
                    this.$.page_databound_ajax.generateRequest();
                    this.$.gridDetailsGroupApprovals.clearCache();
                },

                _deleteAccessProfile: function (data) {
                    var index = this.result.indexOf(data.model.item);
                    this.result.splice(index, 1);
                    this.$.ajax_delete.url = "/Administracao/DeteleDetailsApprovalGroup";
                    this.$.ajax_delete.body = JSON.stringify(data.model.item);
                    this.$.ajax_delete.generateRequest();
                },

                _updateLinhaGrupoAprovacao: function (e) {
                    debugger;
                    var index = this.result.indexOf(e.model.item);

                    this.$.page_updateLinhaGrupoAprovacao_ajax.body = JSON.stringify({
                        approvalGroup: this.$.lRequestNo.value,
                        approvalUser: e.model.item.approvalUser,
                        enviarEmailAlerta: e.model.item.enviarEmailAlerta,
                        createDate: e.model.item.createDate,
                        createUser: e.model.item.createUser
                    });
                    this.$.page_updateLinhaGrupoAprovacao_ajax.generateRequest();
                    this.$.gridDetailsGroupApprovals.clearCache();
                },
                _updateLinhaGrupoAprovacaoResponse: function (e) {
                    var self = this;
                    if (e.detail.status === 200) {
                        if (this.linhaGrupoAprovacaoUpdated == "101") {
                            this.openToastError('Erro ao atualizar!');
                            this.$.page_databound_ajax.generateRequest();

                        } else {
                            this.ddUser = "";
                            this.openToast('Atualizado com sucesso!');
                            this.$.page_databound_ajax.body = JSON.stringify(this._requestno);
                            this.$.page_databound_ajax.generateRequest();
                            this.$.gridDetailsGroupApprovals.clearCache();
                        }
                    }
                    else {
                        this.openToastError('Ocorreu um erro ao atualizar o utilizador do grupo.');
                    }
                },

            });
        });
    </script>
</dom-module>
