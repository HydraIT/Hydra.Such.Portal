@{
    ViewData["Title"] = "Acções de Confeção";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-sorter.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-sort-behavior.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-filter.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-filter-behavior.html" />
<link rel="import" href="~/lib/vaadin-valo-theme/vaadin-grid.html">
<link rel="import" href="~/lib/vaadin-themable-mixin/vaadin-themable-mixin.html" />
<link rel="import" href="~/lib/iron-form/iron-form.html" />
<link rel="import" href="~/lib/paper-input/paper-input.html" />
<link rel="import" href="~/lib/paper-button/paper-button.html" />
<link rel="import" href="~/lib/paper-toast-master/paper-toast.html" />
<link rel="import" href="~/lib/vaadin-valo-theme/vaadin-text-field.html">
<link rel="import" href="~/lib/vaadin-text-field/vaadin-text-field.html">
<link rel="import" href="~/lib/paper-tabs-master/paper-tabs.html" />
<link rel="import" href="~/lib/paper-collapse-item/paper-collapse-group.html">
<link rel="import" href="~/lib/paper-collapse-item/paper-collapse-item.html">

<x-actionsconfection></x-actionsconfection>

<dom-module id="x-actionsconfection">
    <template>
        <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
        <link rel="stylesheet" href="~/lib/font-awesome-4.7.0/css/font-awesome.min.css" />
        <link rel="stylesheet" href="~/css/main.css" />
        <style>
            input[readonly] {
                border: 2px solid transparent;
            }

            input {
                font: inherit;
            }

            paper-input {
                max-width: 450px !important;
            }
            /*ACORDEÃO*/
            paper-collapse-item {
                --paper-item: {
                    padding: 0 0;
                };
                --paper-collapse-item-header: {
                    padding: 0 15px;
                    color: #333;
                    background-color: #f5f5f5;
                    border-bottom: solid #ddd 1px;
                    border-top-left-radius: 3px;
                    border-top-right-radius: 3px;
                };
            }
        </style>

        @*POPULATE GRID*@
        <iron-ajax url="/Administracao/GetActionsConfection"
                   last-response="{{result}}"
                   method="post"
                   auto
                   handle-as="json"
                   id="page_databound_ajax"
                   content-type="application/json">
        </iron-ajax>

        <iron-ajax url="/Administracao/UpdateActionsConfection"
                   last-response="{{result}}"
                   method="post"
                   on-response="_updateResponse"
                   handle-as="json"
                   id="ajax_update"
                   content-type="application/json"></iron-ajax>

        <iron-ajax url="/Administracao/CreateActionsConfection"
                   last-response="{{createResult}}"
                   method="post"
                   on-response="_createResponse"
                   handle-as="json"
                   id="ajax_create"
                   content-type="application/json"></iron-ajax>

        <iron-ajax url="/Administracao/DeleteActionsConfection"
                   last-response="{{deleteResult}}"
                   method="post"
                   on-response="_deleteResponse"
                   handle-as="json"
                   id="ajax_delete"
                   content-type="application/json"></iron-ajax>

        <template is="dom-if" if="{{ !_permissionsUpdate }}">
            <div class="subMenu">
                <paper-button id="btnGoBack" class="tablinks" on-tap="_goBack"><i class="fa fa-arrow-left" aria-hidden="true"></i> Voltar</paper-button>
                <paper-button id="btnAddNew" class="tablinks" on-tap="_update" disabled="{{ _permissionsUpdate }}"><i class="fa fa-floppy-o" aria-hidden="true"></i>&nbsp; Guardar</paper-button>
                <paper-button id="btnCancel" class="tablinks" on-tap="_cancel" disabled="{{ _permissionsUpdate }}"><i class="fa fa-undo" aria-hidden="true"></i>&nbsp; Cancelar</paper-button>
            </div>
        </template>

        <paper-collapse-group>
            <paper-collapse-item class="panel-heading" header="Novo Registo" closed>
                <div class="panel-body">
                    <div class="row break_clear">
                        <div class="row">
                            <div class="col-lg-2">
                                <vaadin-text-field id="ddDescription" label="Descrição" disabled="{{ _permissionsCreate }}"></vaadin-text-field>
                            </div>
                            <div class="col-lg-2 alignPoga">
                                <paper-button id="btnAddNew" class="btnSave" on-tap="_create" disabled="{{ _permissionsCreate }}">Criar</paper-button>
                            </div>
                        </div>
                    </div>
                </div>
            </paper-collapse-item>
        </paper-collapse-group>

        <div class="row break_clear">
            <vaadin-grid id="gridActionsConfection" aria-label="gridActionsConfection" items="[[result]]" class="grid" multi-sort="true">
                <vaadin-grid-column resizable width="150px">
                    <template class="header">
                        <vaadin-grid-sorter path="code">Código</vaadin-grid-sorter>
                        <vaadin-grid-filter path="code" />
                    </template>
                    <template>
                        <vaadin-text-field value="{{item.code}}" disabled="{{ _permissionsUpdate }}"></vaadin-text-field>
                    </template>
                </vaadin-grid-column>

                <vaadin-grid-column resizable width="150px">
                    <template class="header">
                        <vaadin-grid-sorter path="description">Descrição</vaadin-grid-sorter>
                        <vaadin-grid-filter path="description" />
                    </template>
                    <template>
                        <vaadin-text-field value="{{item.description}}" disabled="{{ _permissionsUpdate }}"></vaadin-text-field>
                    </template>
                </vaadin-grid-column>

                <template is="dom-if" if="{{ !_permissionsDelete }}">
                    <vaadin-grid-column resizable width="150px">
                        <template class="header">
                        </template>
                        <template>
                            <center>
                                <paper-button class="btnRemove" raised on-tap="_delete" disabled="{{ _permissionsDelete }}">Eliminar</paper-button>
                            </center>
                        </template>
                    </vaadin-grid-column>
                </template>
            </vaadin-grid>
        </div>

        <paper-toast id="ToastMessageSuccess" duration="4000" horizontalAlign="right" class="toastSuccess">&nbsp;<i class="fa fa-check fa-lg" aria-hidden="true"></i></paper-toast>
        <paper-toast id="ToastMessageError" duration="4000" horizontalAlign="right" class="toastError">&nbsp;<i class="fa fa-exclamation-triangle" aria-hidden="true"></i></paper-toast>
    </template>

    <script>
        var CreateValue = true, UpdateValue = true, DeleteValue = true;
         if ('@Html.Raw(Json.Serialize(ViewBag.CreatePermissions))' =="false") {
            CreateValue = false;
        }
        if ('@Html.Raw(Json.Serialize(ViewBag.UpdatePermissions))' =="false") {
            UpdateValue = false;
        }
        if ('@Html.Raw(Json.Serialize(ViewBag.DeletePermissions))' =="false") {
            DeleteValue = false;
        }
        document.addEventListener('WebComponentsReady', function () {
            Polymer({
                is: 'x-actionsconfection',
                properties: {
                    _permissionsUpdate: {
                        type: Boolean,
                        value: UpdateValue
                    },
                    _permissionsCreate: {
                        type: Boolean,
                        value: CreateValue
                    },
                    _permissionsDelete: {
                        type: Boolean,
                        value: DeleteValue
                    },
                },
                ready: function () {
                    this.$.page_databound_ajax.generateRequest();

                    var _this = this;
                    $(window).resize(function () {
                        _this.fixGridToBottom();
                    });
                    $(window).trigger('resize');
                },

                fixGridToBottom: function () {
                    var grid_el = $(this.$.gridActionsConfection);
                    var parentHeight = $(this).offsetParent().height();
                    var offsetTop = $(this).offset().top;
                    var height = parentHeight - offsetTop;
                    $(this.$.gridActionsConfection).height(height);
                },

                _create: function () {
                    this.$.ajax_create.body = JSON.stringify({ description: this.$.ddDescription.value });
                    this.$.ajax_create.generateRequest();
                    this.$.gridActionsConfection.clearCache();
                },
                _update: function () {
                    this.$.ajax_update.body = JSON.stringify(this.result);
                    this.$.ajax_update.generateRequest();
                    this.$.gridActionsConfection.clearCache();
                },
                _delete: function (e) {
                    this.$.ajax_delete.body = JSON.stringify(e.model.item);
                    this.$.ajax_delete.generateRequest();
                    this.result = this.result.filter(function (item) {
                        return item != e.model.item;
                    });
                    this.$.gridActionsConfection.clearCache();
                },
                _cancel: function () {
                    this.$.page_databound_ajax.generateRequest();
                    this.$.gridActionsConfection.clearCache();
                },
                _updateResponse: function (e) {
                    var self = this;
                    if (e.detail.status === 200) {
                        this.$.page_databound_ajax.generateRequest();
                        this.openToast("Tabela atualizada.");
                    }
                    else {
                        this.openToastError("Occorreu um erro ao atualizar a Tabela.");
                    }
                },
                _createResponse: function (e) {
                    var self = this;
                    if (e.detail.status === 200) {
                        this.$.ddDescription = "";
                        this.$.page_databound_ajax.generateRequest();
                        this.openToast("Tabela atualizada.");
                    }
                    else {
                        this.openToastError("Occorreu um erro ao atualizar a Tabela.");
                    }
                },
                _deleteResponse: function (e) {
                    var self = this;
                    if (e.detail.status === 200) {
                        if (this.deleteResult != null) {
                            this.$.page_databound_ajax.generateRequest();
                            this.openToast("Registo eliminado.");
                        }
                        else {
                            this.$.page_databound_ajax.generateRequest();
                            this.openToastError("Impossivel elimiar registo");
                        }
                    }
                    else {
                        this.openToastError("Occorreu um erro ao atualizar a Tabela.");
                    }
                },
                openToast: function (message) {
                    this.$.ToastMessageSuccess.text = message;
                    this.$.ToastMessageSuccess.open();
                },
                openToastError: function (message) {
                    this.$.ToastMessageError.text = message;
                    this.$.ToastMessageError.open();
                },

                _goBack: function (e) {
                    //debugger;
                    window.history.back();
                },
            });
        });
    </script>
</dom-module>
