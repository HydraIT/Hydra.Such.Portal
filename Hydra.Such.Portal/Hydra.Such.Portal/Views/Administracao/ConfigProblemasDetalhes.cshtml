
@{
    ViewData["Title"] = "Detalhes Configuração Problema";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="import" href="~/lib/vaadin-themable-mixin/vaadin-themable-mixin.html" />
<link rel="import" href="~/lib/vaadin-valo-theme/vaadin-grid.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-sorter.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-sort-behavior.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-filter.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-filter-behavior.html" />

<link rel="import" href="~/lib/vaadin-valo-theme/vaadin-text-field.html" />
<link rel="import" href="~/lib/vaadin-text-field/vaadin-text-field.html" />

<link rel="import" href="~/lib/vaadin-valo-theme/vaadin-checkbox.html" />
<link rel="import" href="~/lib/vaadin-checkbox/vaadin-checkbox.html" />

<link rel="import" href="~/lib/vaadin-valo-theme/vaadin-date-picker.html" />
<link rel="import" href="~/lib/vaadin-date-picker/vaadin-date-picker.html" />

<link rel="import" href="~/lib/vaadin-valo-theme/vaadin-combo-box.html" />
<link rel="import" href="/lib/vaadin-combo-box/vaadin-combo-box.html" />

<link rel="import" href="~/lib/paper-button/paper-button.html" />
<link rel="import" href="~/lib/iron-form/iron-form.html" />
<link rel="import" href="/lib/paper-toast-master/paper-toast.html" />

<x-problemdetails-config></x-problemdetails-config>
<dom-module id="x-problemdetails-config">
    <template>
        <link rel="stylesheet" href="/lib/bootstrap/dist/css/bootstrap.css" />
        <link rel="stylesheet" href="~/lib/font-awesome-4.7.0/css/font-awesome.min.css" />
        <link rel="stylesheet" href="/css/main.css" />


        @*POPULATE GRID*@
        <iron-ajax url="/Administracao/GetProblemConfigDetails"
                   last-response="{{data}}"
                   method="post"
                   handle-as="json"
                   id="page_databound_ajax"
                   content-type="application/json"></iron-ajax>

        <template is="dom-if" if="{{ _permissions.create }}">
            <div class="subMenu">
                <paper-button class="tablinks" on-tap="_createNew"><i class="fa fa-plus" aria-hidden="true"></i>&nbsp; Criar Novo</paper-button>
            </div>
        </template>

        <div class="panel panel-default">
            <div class="panel-body">
                <div class="row break_clear">
                    <div class="col-sm-3">
                        <vaadin-text-field type="text" value="{{ data.codigo }}" id="txtCodigo" name="txtCodigo" label="Código"></vaadin-text-field>
                    </div>
                    <div class="col-sm-3">
                        <vaadin-text-field type="text" value="{{ data.tipo }}" id="txtTipo" name="txtTipo" label="Tipo"></vaadin-text-field>
                    </div>
                    <div class="col-sm-3">
                        <vaadin-text-field type="text" value="{{ data.envioAreas }}" id="txtEnvioAreas" name="txtEnvioAreas" label="Envio Áreas"></vaadin-text-field>
                    </div>

                    <div class="col-sm-3">
                        <vaadin-checkbox id="chkDevolvido" value="{{ data.devolvido }}">Devolvido</vaadin-checkbox>
                        <vaadin-checkbox id="chkBloqueado" value="{{ data.bloqueado }}">Bloqueado</vaadin-checkbox>
                    </div>
                </div>
                <div class="row break_clear">
                    <div class="col-sm-12">
                        <vaadin-text-field rows="1" id="txtDescricao" maxlength="100" name="txtDescricao" label="Descrição" value="{{data.descricao}}"></vaadin-text-field>
                    </div>
                </div>
            </div>
        </div>

        @*CRUD NEW PROFILEMODEL*@
        <iron-ajax url="/Administracao/CreateProfileModel"
                   id="ajax_create"
                   last-response="{{data}}"
                   method="post"
                   handle-as="json"
                   on-response="_responseProcessor"
                   content-type="application/json; charset=utf-8"></iron-ajax>

        <iron-ajax url="/PopulateDropdowns/GetAreas"
                   last-response="{{AreasData}}"
                   auto
                   method="post"
                   handle-as="json"
                   content-type="application/json"></iron-ajax>

        <iron-ajax url="/PopulateDropdowns/GetFeatures"
                   last-response="{{FeaturesData}}"
                   auto
                   method="post"
                   handle-as="json"
                   content-type="application/json"></iron-ajax>

        <iron-ajax url="/Administracao/DeleteAccess"
                   id="ajax_delete"
                   last-response="{{DeleteResponse}}"
                   method="post"
                   handle-as="json"
                   on-response="_deleteResponse"
                   content-type="application/json"></iron-ajax>



        <div class="marginSpace">
            @if (ViewBag.ProfileModelId == 0)
        {
            <template is="dom-if" if="{{ _permissions.create }}">
                <paper-button class="btnSave" raised on-tap="_create"><i class="fa fa-floppy-o" aria-hidden="true"></i>&nbsp; Gravar</paper-button>
            </template>
        }
        else
        {
            <template is="dom-if" if="{{ _permissions.update }}">
                <paper-button class="btnEdit" raised on-tap="_update"><i class="fa fa-floppy-o" aria-hidden="true"></i>&nbsp; Atualizar</paper-button>
            </template>
            <template is="dom-if" if="{{ _permissions.delete }}">
                <paper-button class="btnRemove" raised on-tap="_delete"><i class="fa fa-trash" aria-hidden="true"></i>&nbsp; Eliminar</paper-button>
            </template>
        }
        </div>


        <paper-toast id="ToastMessageSuccess" duration="4000" horizontalAlign="right" class="toastSuccess">&nbsp;<i class="fa fa-check fa-lg" aria-hidden="true"></i></paper-toast>
        <paper-toast id="ToastMessageError" duration="4000" horizontalAlign="right" class="toastError">&nbsp;<i class="fa fa-exclamation-triangle" aria-hidden="true"></i></paper-toast>


    </template>
    <script>
        document.addEventListener('WebComponentsReady', function () {
            Polymer({
                is: 'x-problemdetails-config',
                properties: {
                    _permissions: {
	                    type: Array,
	                    value: @Html.Raw(Json.Serialize(ViewBag.UPermissions))
                    },
                },
                ready: function () {
                    this.$.page_databound_ajax.body = JSON.stringify({ "id": "@ViewBag.ProblemId", "type": "@ViewBag.ProblemType" });
                    this.$.page_databound_ajax.generateRequest();

                },
                openToast: function (message) {
                    this.$.ToastMessageSuccess.text = message;
                    this.$.ToastMessageSuccess.open();
                },
                openToastError: function (message) {
                    this.$.ToastMessageError.text = message;
                    this.$.ToastMessageError.open();
                },
                _create: function () {
                    if (this.data.description !== '' && this.data.description != null) {
                        this.$.ajax_create.url = "/Administracao/CreateProfileModel";
                        this.$.ajax_create.body = JSON.stringify(this.data);
                        this.$.ajax_create.generateRequest();
                        this.openToast("Perfil modelo criado com sucesso!");
                    } else {
                        this.openToastError('É obrigatório preencher o campo Descrição.');
                    }
                },
                _update: function () {

                    if (this.data.description !== '' && this.data.description != null) {
                        this.$.ajax_create.url = "/Administracao/UpdateProfileModel";
                        this.$.ajax_create.body = JSON.stringify(this.data);
                        this.$.ajax_create.generateRequest();
                        this.openToast("Perfil modelo atualizado com sucesso!");
                    } else {
                        this.openToastError('É obrigatório preencher o campo Descrição.');
                    }
                },
                _delete: function () {
                    this.$.ajax_create.url = "/Administracao/DeleteProfileModel";
                    this.$.ajax_create.body = JSON.stringify(this.data);
                    this.$.ajax_create.generateRequest();
                },
                _ResponseProcessor: function (e) {
                    var self = this;
                    if (e.detail.status === 200) {
                        if (e.detail.url.indexOf("Create") !== -1) {
                            window.location.href = "/Administracao/PerfisModeloDetalhes/" + this.data.id;
                        }
                        else if (e.detail.url.indexOf("Delete") !== -1) {
                            if (this.data.id == 0) {
                                window.location.href = "/Administracao/PerfisModelo";
                            } else {
                                this.openToastError('Ocorreu um erro ao remover o Perfil Modelo');
                            }
                        }
                        else
                        {
                            this.openToast('O perfil foi atualizado com sucesso!');
                        }
                    } else {
                        if (e.detail.url.indexOf("Create") !== -1) {
                            this.openToastError('Ocorreu um erro ao criar o perfil modelo.');
                        }
                        else if (e.detail.url.indexOf("Delete") !== -1) {
                            this.openToastError('Ocorreu um erro ao remover o Perfil Modelo');
                        }
                        else {
                            this.$.grid_databound.generateRequest();
                            this.openToastError('Ocorreu um erro ao atualizar o perfil modelo.');
                        }
                    }
                },
                _deleteResponse: function (data) {
                    if (data.detail.status === 200) {
                        if (this.DeleteResponse.eReasonCode == 1) {
                            this.openToast(this.DeleteResponse.eMessage);

                            const index = this.data.profileModelAccesses
                                .findIndex(x => x.idProfile == this.DeleteResponse.idProfile &&
                                    x.area == this.DeleteResponse.area &&
                                    x.feature == this.DeleteResponse.feature);

                            //const index = this.data.profileModelAccesses.indexOf(this.DeleteResponse);
                            if (index !== -1) {
                                this.data.profileModelAccesses.splice(index, 1);
                                this.$.gridAccesses.clearCache();
                            }
                        } else {
                            this.openToastError(this.DeleteResponse.eMessage);
                        }
                    }
                    else {
                        this.openToastError("Ocorreu um erro ao processar o pedido.");
                    }
                },
                _createNew: function (item) {
                    if (item != null) {
                        window.location.href = "/Administracao/ConfigProblemasDetalhes/";
                    }
                }

            });
        });
    </script>

</dom-module>



