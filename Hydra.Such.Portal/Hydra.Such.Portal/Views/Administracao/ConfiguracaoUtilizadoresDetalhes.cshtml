
@{
    ViewData["Title"] = "Detalhes Configuração Utilizadores - Administração - Such";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="import" href="~/lib/vaadin-themable-mixin/vaadin-themable-mixin.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-sorter.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-sort-behavior.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-filter.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-filter-behavior.html" />
<link rel="import" href="~/lib/vaadin-date-picker/vaadin-date-picker.html" />
<link rel="import" href="~/lib/iron-form/iron-form.html" />
<link rel="import" href="~/lib/paper-input/paper-input.html" />
<link rel="import" href="~/lib/paper-checkbox-master/paper-checkbox.html" />
<link rel="import" href="/lib/vaadin-combo-box/vaadin-combo-box.html" />
<link rel="import" href="~/lib/paper-button/paper-button.html" />
<link rel="import" href="/lib/paper-toast-master/paper-toast.html" />
<link rel="import" href="/lib/vaadin-text-field/vaadin-text-field.html" />

<h1 class="title">Detalhes Configuração Utilizadores</h1>

<x-details-config-users></x-details-config-users>
<dom-module id="x-details-config-users">
    <template>
        <link rel="stylesheet" href="/lib/bootstrap/dist/css/bootstrap.css" />
        <link rel="stylesheet" href="~/lib/font-awesome-4.7.0/css/font-awesome.min.css" />
        <link rel="stylesheet" href="/css/main.css" />

        @*POPULATE GRID*@
        <iron-ajax url="/Administracao/GetUserConfigData"
                   last-response="{{data}}"
                   method="post"
                   handle-as="json"
                   id="page_databound_ajax"
                   content-type="application/json"></iron-ajax>


        <div class="row">
            <div class="col-lg-12">
                <h1>Geral</h1>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-2">
                    <vaadin-text-field value="{{data.idUser}}" id="idUser" name="idUser" required label="Id Utilizador" char-counter maxlength="50"> </vaadin-text-field>
            </div>
            <div class="col-lg-2">
                <paper-input type="text" value="{{data.name}}" id="UserName" name="UserName" required label="Nome" char-counter maxlength="50"> </paper-input>
            </div>
            <div class="col-lg-2">
                <br />
                <center><paper-checkbox checked="{{data.administrator}}">Administrador</paper-checkbox></center>
            </div>
            <div class="col-lg-2">
                <br />
                <center><paper-checkbox checked="{{data.active}}">Ativo</paper-checkbox></center>
            </div>
        </div>

        @*CREATE NEW PROFILEMODEL*@
        <iron-ajax url="/Administracao/CreateUserConfig"
                   id="ajax_create"
                   last-response="{{data}}"
                   method="post"
                   handle-as="json"
                   on-response="_responseProcessor"
                   content-type="application/json; charset=utf-8"></iron-ajax>


        <iron-ajax url="/PopulateDropdowns/GetAreas"
                   last-response="{{AreasData}}"
                   auto
                   method="post"
                   handle-as="json"
                   content-type="application/json"></iron-ajax>

        <iron-ajax url="/PopulateDropdowns/GetFeatures"
                   last-response="{{FeaturesData}}"
                   auto
                   method="post"
                   handle-as="json"
                   content-type="application/json"></iron-ajax>

        <iron-ajax url="/PopulateDropdowns/GetUserProfileModels"
                   last-response="{{UserProfileModelsData}}"
                   auto
                   method="post"
                   handle-as="json"
                   content-type="application/json"></iron-ajax>
        <br />
        <br />
        <div class="row">
            <div class="col-lg-12">
                <h1>Perfis Utilizadores</h1>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-2">
                <vaadin-combo-box items="[[UserProfileModelsData]]" item-value-path="id" item-label-path="value" value="{{ddUserProfile}}" label="Àrea">
                    <template>
                        <paper-icon-item>
                            <paper-item-body two-line>
                                <div>[[item.value]]</div>
                            </paper-item-body>
                        </paper-icon-item>
                    </template>
                </vaadin-combo-box>
            </div>
            
            <div class="col-lg-1">
                <paper-button class="btnEdit" raised on-tap="_addUserProfile">Associar</paper-button>
            </div>
        </div>

        <vaadin-grid id="gridUserProfiles" aria-label="gridUserProfiles" items="{{ data.userProfiles }}" class="grid">
            <vaadin-grid-column width="20%">
                <template class="header">
                    Perfil
                </template>
                <template>
                    <vaadin-combo-box items="[[UserProfileModelsData]]" disabled item-value-path="id" item-label-path="value" value="{{item.id}}">
                        <template>
                            <paper-icon-item>
                                <paper-item-body two-line>
                                    <div>[[item.value]]</div>
                                </paper-item-body>
                            </paper-icon-item>
                        </template>
                    </vaadin-combo-box>

                </template>
            </vaadin-grid-column>
            <vaadin-grid-column width="80%">
                <template class="header">
                </template>
                <template>
                        <paper-button class="btnRemove"  raised on-tap="_deleteUserProfile">Eliminar</paper-button>
                </template>
            </vaadin-grid-column>
        </vaadin-grid>


        <br /><br />
        <div class="row">
            <div class="col-lg-12">
                <h1>Acessos Utilizador</h1>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-2">
                <vaadin-combo-box items="[[AreasData]]" item-value-path="id" item-label-path="value" value="{{ddArea}}" label="Àrea">
                    <template>
                        <paper-icon-item>
                            <paper-item-body two-line>
                                <div>[[item.value]]</div>
                            </paper-item-body>
                        </paper-icon-item>
                    </template>
                </vaadin-combo-box>
            </div>
            <div class="col-lg-2">
                <vaadin-combo-box items="[[FeaturesData]]" item-value-path="id" item-label-path="value" value="{{ddFeature}}" label="Funcionalidade">
                    <template>
                        <paper-icon-item>
                            <paper-item-body two-line>
                                <div>[[item.value]]</div>
                            </paper-item-body>
                        </paper-icon-item>
                    </template>
                </vaadin-combo-box>
            </div>
            <div class="col-lg-2">
                <br /><br />
                <center><paper-checkbox checked="{{chkCreate}}">Inserção</paper-checkbox></center>
            </div>
            <div class="col-lg-2">
                <br /><br />
                <center><paper-checkbox checked="{{chkRead}}">Leitura</paper-checkbox></center>
            </div>
            <div class="col-lg-2">
                <br /><br />
                <center><paper-checkbox checked="{{chkUpdate}}">Modificação</paper-checkbox></center>
            </div>
            <div class="col-lg-1">
                <br /><br />
                <center><paper-checkbox checked="{{chkDelete}}">Eliminação</paper-checkbox></center>
            </div>
            <div class="col-lg-1">
                <br />
                <paper-button class="btnSave" raised on-tap="_createUserAccess">Criar</paper-button>
            </div>
        </div>

        <vaadin-grid id="gridUserAccesses" aria-label="gridUserAccesses" items="{{ data.userAccesses }}" class="grid">
            <vaadin-grid-column width="15%">
                <template class="header">
                    Área
                </template>
                <template>
                    <vaadin-combo-box items="[[AreasData]]" item-value-path="id" item-label-path="value" value="{{item.area}}">
                        <template>
                            <paper-icon-item>
                                <paper-item-body two-line>
                                    <div>[[item.value]]</div>
                                </paper-item-body>
                            </paper-icon-item>
                        </template>
                    </vaadin-combo-box>

                </template>
            </vaadin-grid-column>
            <vaadin-grid-column width="15%">
                <template class="header">
                    Funcionalidade
                </template>
                <template>
                    <vaadin-combo-box items="[[FeaturesData]]" item-value-path="id" item-label-path="value" value="{{item.feature}}">
                        <template>
                            <paper-icon-item>
                                <paper-item-body two-line>
                                    <div>[[item.value]]</div>
                                </paper-item-body>
                            </paper-icon-item>
                        </template>
                    </vaadin-combo-box>
                </template>
            </vaadin-grid-column>
            <vaadin-grid-column width="15%">
                <template class="header">
                    <center>
                        Inserção
                    </center>
                </template>
                <template>
                    <center>
                        <paper-checkbox checked="{{item.create}}"></paper-checkbox>
                    </center>
                </template>
            </vaadin-grid-column>
            <vaadin-grid-column width="15%">
                <template class="header">
                    <center>
                        Leitura
                    </center>
                </template>
                <template>
                    <center>
                        <paper-checkbox checked="{{item.read}}"></paper-checkbox>
                    </center>
                </template>
            </vaadin-grid-column>
            <vaadin-grid-column width="10%">
                <template class="header">
                    <center>
                        Modificação
                    </center>
                </template>
                <template>
                    <center>
                        <paper-checkbox checked="{{item.update}}"></paper-checkbox>
                    </center>
                </template>
            </vaadin-grid-column>
            <vaadin-grid-column width="10%">
                <template class="header">
                    <center>
                        Eliminação
                    </center>
                </template>
                <template>
                    <center>
                        <paper-checkbox checked="{{item.delete}}"></paper-checkbox>
                    </center>
                </template>
            </vaadin-grid-column>
            <vaadin-grid-column width="10%">
                <template class="header">
                </template>
                <template>
                    <center>
                        <paper-button class="btnRemove" raised on-tap="_deleteUserAccess">Eliminar</paper-button>
                    </center>
                </template>
            </vaadin-grid-column>
        </vaadin-grid>

        <div class="marginSpace">
            @if (ViewBag.UserId == "0")
            {
                <paper-button class="btnSave" raised on-tap="_create">Gravar</paper-button>
            }
            else
            {
                <paper-button class="btnEdit" raised on-tap="_update"><i class="fa fa-floppy-o" aria-hidden="true"></i>&nbsp; Atualizar</paper-button>
                <paper-button class="btnRemove" raised on-tap="_delete"><i class="fa fa-trash" aria-hidden="true"></i>&nbsp; Eliminar</paper-button>
            }
        </div>


        <paper-toast id="ToastMessage" duration="4000" horizontalAlign="right"></paper-toast>

    </template>
    <script>
        document.addEventListener('WebComponentsReady', function () {
            Polymer({
                is: 'x-details-config-users',
                properties: {
                    ddUserProfile: {
                        type: Number,
                        notify: true,
                        value: ""
                    },
                    ddArea: {
                        type: Number,
                        notify: true,
                        value: ""
                    },
                    ddFeature: {
                        type: Number,
                        notify: true,
                        value: ""
                    },
                    chkCreate: {
                        type: Boolean,
                        notify: true,
                        value: true
                    },
                    chkRead: {
                        type: Boolean,
                        notify: true,
                        value: true
                    },
                    chkUpdate: {
                        type: Boolean,
                        notify: true,
                        value: true
                    },
                    chkDelete: {
                        type: Boolean,
                        notify: true,
                        value: true
                    }
                },
                ready: function () {
                    this.$.page_databound_ajax.body = JSON.stringify({ "IdUser": "@ViewBag.UserId" });
                    this.$.page_databound_ajax.generateRequest();
                },
                openToast: function (message) {
                    this.$.ToastMessage.text = message;
                    this.$.ToastMessage.open();
                },

                //CRUDS Functions
                _validateData() {
                    if (this.data.idUser == '' || this.data.idUser == null) { 
                        return "É obrigatório preencher o Id Utilizador";
                    } else if (this.data.name == '' || this.data.name == null) {
                        return "É obrigatório preencher o Nome";
                    }
                    return "";
                },
                _create: function () {
                    var validate = this._validateData();
                    if (validate == "") {
                        this.$.ajax_create.url = "/Administracao/CreateUserConfig";
                        this.$.ajax_create.body = JSON.stringify(this.data);
                        this.$.ajax_create.generateRequest();
                        //this.openToast("Utilizador criado com sucesso!");
                    } else {
                        this.openToast(validate);
                    }
                },
                _update: function () {
                    var validate = this._validateData();
                    if (validate == "") {
                        this.$.ajax_create.url = "/Administracao/UpdateUserConfig";
                        this.$.ajax_create.body = JSON.stringify(this.data);
                        this.$.ajax_create.generateRequest();
                        //this.openToast("Perfil modelo atualizado com sucesso!");
                    } else {
                        this.openToast(validate);
                    }
                },
                _delete: function () {
                    this.$.ajax_create.url = "/Administracao/DeleteUserConfig";
                    this.$.ajax_create.body = JSON.stringify(this.data);
                    this.$.ajax_create.generateRequest();
                },
                _responseProcessor: function (e) {
                    var self = this;
                    if (e.detail.status === 200) {
                        if (e.detail.url.indexOf("Create") !== -1) {
                            window.location.href = "/Administracao/ConfiguracaoUtilizadoresDetalhes/" + this.data.IdUser;
                        }
                        else if (e.detail.url.indexOf("Delete") !== -1) {
                            if (this.data.id == 0) {
                                window.location.href = "/Administracao/PerfisModelo";
                            } else {
                                this.openToast("Ocorreu um erro ao remover o Perfil Modelo.");
                            }
                        }
                        else
                        {
                            this.$.page_databound_ajax.generateRequest();
                            this.openToast("O perfil foi atualizado com sucesso!");
                        }
                    } else {
                        if (e.detail.url.indexOf("Create") !== -1) {
                            this.openToast("Ocorreu um erro ao criar o perfil modelo.");
                        }
                        else if (e.detail.url.indexOf("Delete") !== -1) {
                            this.openToast("Ocorreu um erro ao remover o Perfil Modelo!");
                        }
                        else {
                            this.$.grid_databound.generateRequest();
                            this.openToast("Ocorreu um erro ao atualizar o perfil modelo.");
                        }
                    }
                },

                //User Profiles Functions
                _addUserProfile: function () {
                    if (this.ddUserProfile == "") {
                        this.openToast("É obrigatório escolher o perfil.");
                    } else {
                        this.data.userProfiles.unshift({
                            id: this.ddUserProfile
                        });
                        this.$.gridUserProfiles.clearCache();
                    }

                },
                _deleteUserProfile: function (e) {
                    var index = this.data.userProfiles.indexOf(e.model.item);
                    this.data.userProfiles.splice(index, 1);

                    this.$.gridUserProfiles.clearCache();
                },

                //User Accesses Functions
                _createUserAccess: function () {
                    if (this.ddArea == "") {
                        this.openToast("É obrigatório preencher a àrea.");
                    } else if (this.ddFeature == null) {
                        this.openToast("É obrigatório preencher a Funcionalidade.");
                    } else {
                        this.data.userAccesses.unshift({
                            area: this.ddArea,
                            feature: this.ddFeature,
                            read: this.chkRead,
                            create: this.chkCreate,
                            update: this.chkUpdate,
                            delete: this.chkDelete
                        });
                        this.$.gridUserAccesses.clearCache();
                    }

                },
                _deleteUserAccess: function (e) {
                    var index = this.data.userAccesses.indexOf(e.model.item);
                    this.data.userAccesses.splice(index, 1);

                    this.$.gridUserAccesses.clearCache();
                },
                

            });
        });
    </script>

</dom-module>


