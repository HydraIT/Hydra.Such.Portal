
@{
    ViewData["Title"] = "Unidades Produtivas";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<link rel="import" href="~/lib/vaadin-themable-mixin/vaadin-themable-mixin.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-sorter.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-sort-behavior.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-filter.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-filter-behavior.html" />
<link rel="import" href="~/lib/vaadin-valo-theme/vaadin-checkbox.html">
<link rel="import" href="~/lib/vaadin-checkbox/vaadin-checkbox.html">
<link rel="import" href="~/lib/iron-form/iron-form.html" />
<link rel="import" href="~/lib/paper-button/paper-button.html" />

<!--start ColumnToggle-->
<link rel="import" href="/lib/iron-menu-behavior/iron-menubar-behavior.html" />
<link rel="import" href="/lib/paper-tabs-master/paper-tabs.html" />
<link rel="import" href="/lib/iron-icons/iron-icons.html" />
<link rel="import" href="/lib/iron-behaviors/iron-button-state.html" />
<link rel="import" href="/lib/paper-menu-button/paper-menu-button.html" />
<!--end ColumnToggle-->

<x-productivityunits _permissions='@Html.Raw(Json.Serialize(ViewBag.UserPermissions))'></x-productivityunits>
<dom-module id="x-productivityunits">
    <template>
        <link rel="stylesheet" href="/lib/bootstrap/dist/css/bootstrap.css" />
        <link rel="stylesheet" href="~/lib/font-awesome-4.7.0/css/font-awesome.min.css" />
        <link rel="stylesheet" href="/css/main.css" />

        @*POPULATE GRID*@
        <iron-ajax url="/UnidadesProdutivas/GetProductivityUnits"
                   last-response="{{result}}"
                   auto
                   method="post"
                   handle-as="json"
                   id="grid_databound"
                   content-type="application/json"></iron-ajax>

        <iron-ajax url="/UnidadesProdutivas/ExportToExcel_UnidadesProdutivas"
                   last-response="{{export}}"
                   id="ajax_Export"
                   method="post"
                   handle-as="json"
                   on-response="_exportEXCELResponse"
                   content-type="application/json">
        </iron-ajax>

        <div class="subMenu">
            <template is="dom-if" if="{{ _permissions.create }}">
                <paper-button class="tablinks" on-tap="_create"><i class="fa fa-plus" aria-hidden="true"></i>&nbsp; Criar Novo</paper-button>
            </template>
            <paper-button id="btnExport" class="tablinks" on-tap="_exportEXCEL" title="Exportar para Excel"><i class="fa fa-file-excel-o" aria-hidden="true"></i>&nbsp; Exportar</paper-button>

            <!--start ColumnToggle-->
            <paper-menu-button class="column-toggle" no-animations id="gridOpcaoGeral">
                <paper-icon-button icon="view-column" slot="dropdown-trigger" alt="Colunas"></paper-icon-button>
                <div class="list-group" slot="dropdown-content">
                    <template is="dom-repeat" items="[[ _toArray(_columns)]]" id="columnsList">
                        <a href="javascript:void(0);" on-tap="_toggleColumn" data-item$="[[item]]" class$="list-group-item [[ _getColumnItemClass( item.key ) ]]">
                            {{ item.value.label }}
                        </a>
                        <hr />
                    </template>
                </div>
            </paper-menu-button>
            <!--end ColumnToggle-->
        </div>

        <vaadin-grid id="grdProductivityUnitsTable" aria-label="ProductivityUnitsTable" items="[[result]]" class="grid" active-item="{{activeItem}}" multi-sort="true">
            <vaadin-grid-column width="10%" resizable hidden$="{{ _columns.productivityUnitNo.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="productivityUnitNo">Nº Unidade Produtiva</vaadin-grid-sorter>
                    <vaadin-grid-filter path="productivityUnitNo" />
                </template>
                <template>
                    {{item.productivityUnitNo}}
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="30%" resizable hidden$="{{ _columns.description.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="description">Descrição</vaadin-grid-sorter>
                    <vaadin-grid-filter path="description" />
                </template>
                <template>
                    {{item.description}}
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="30%" resizable hidden$="{{ _columns.startDateExploration.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="startDateExploration">Data Inicio Exploração</vaadin-grid-sorter>
                    <vaadin-grid-filter path="startDateExploration" />
                </template>
                <template>
                    {{item.startDateExploration}}
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="30%" resizable hidden$="{{ _columns.endDateExploration.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="endDateExploration">Data Fim Exploração</vaadin-grid-sorter>
                    <vaadin-grid-filter path="endDateExploration" />
                </template>
                <template>
                    {{item.endDateExploration}}
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="30%" resizable hidden$="{{ _columns.codeRegion.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="codeRegion">Cód. Região</vaadin-grid-sorter>
                    <vaadin-grid-filter path="codeRegion" />
                </template>
                <template>
                    {{item.codeRegion}}
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="30%" resizable hidden$="{{ _columns.codeFunctionalArea.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="codeFunctionalArea">Cód. Centro Responsabilidade</vaadin-grid-sorter>
                    <vaadin-grid-filter path="codeFunctionalArea" />
                </template>
                <template>
                    {{item.codeFunctionalArea}}
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="30%" resizable hidden$="{{ _columns.codeResponsabilityCenter.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="codeResponsabilityCenter">Cód. Area Funcional</vaadin-grid-sorter>
                    <vaadin-grid-filter path="codeResponsabilityCenter" />
                </template>
                <template>
                    {{item.codeResponsabilityCenter}}
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="30%" resizable hidden$="{{ _columns.projectKitchen.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="projectKitchen">Proj. Cozinha</vaadin-grid-sorter>
                    <vaadin-grid-filter path="projectKitchen" />
                </template>
                <template>
                    {{item.projectKitchen}}
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="30%" resizable hidden$="{{ _columns.projectSubsidiaries.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="projectSubsidiaries">Proj. Mat. Subsidiárias</vaadin-grid-sorter>
                    <vaadin-grid-filter path="projectSubsidiaries" />
                </template>
                <template>
                    {{item.projectSubsidiaries}}
                </template>
            </vaadin-grid-column>
        </vaadin-grid>


    </template>
    <script>
        document.addEventListener('WebComponentsReady', function () {
            Polymer({
                is: 'x-productivityunits',
                properties: {
                    activeItem: {
                        observer: '_rowSelected'
                    },
                    _filterActive: {
                        type: Boolean,
                        value: true
                    },
                    _permissions: {
                        type: Array
                    },
                    _columns: {
                        type: Object,
                        value: function () {
                            return {};
                        }
                    },
                },
                ready: function () {
                    this.$.grid_databound.generateRequest();

                    /*ColumnToggle*/
                    this._startColumnToggle();

                    var _this = this;
                    $(window).resize(function () {
                        _this.fixGridToBottom();
                    });
                    $(window).trigger('resize');
                },
                fixGridToBottom: function () {
                    var grid_el = $(this.$.grdProductivityUnitsTable);
                    var parentHeight = $(this).offsetParent().height();
                    var offsetTop = $(this).offset().top;
                    var height = parentHeight - offsetTop;
                    grid_el.height(height);
                },
                _rowSelected: function (item) {
                    if (item != null) {
                        window.location.href = "/UnidadesProdutivas/Detalhes/" + item.productivityUnitNo;
                    }
                },
                _create: function (item) {
                    if (item != null) {
                        window.location.href = "/UnidadesProdutivas/Detalhes/";
                    }
                },

                _exportEXCEL: function () {
                    //debugger;
                    this.result[0].ColunasEXCEL = this._columns;

                    this.$.ajax_Export.body = JSON.stringify(this.result);
                    this.$.ajax_Export.generateRequest();
                },

                _exportEXCELResponse: function (e) {
                    //debugger
                    var FileName = this.export;
                    location.href = '../UnidadesProdutivas/ExportToExcelDownload_UnidadesProdutivas?sFileName=' + FileName;
                },

                /*start - ColumnToggle*/
                _startColumnToggle: function () {
                    var columns = {
                        "productivityUnitNo": { hidden: false, label: "Nº Unidade Produtiva" },
                        "description": { hidden: false, label: "Descrição" },
                        "startDateExploration": { hidden: false, label: "Data Inicio Exploração" },
                        "endDateExploration": { hidden: false, label: "Data Fim Exploração" },
                        "codeRegion": { hidden: false, label: "Cód. Região" },
                        "codeFunctionalArea": { hidden: false, label: "Cód. Centro Responsabilidade" },
                        "codeResponsabilityCenter": { hidden: false, label: "Cód. Area Funcional" },
                        "projectKitchen": { hidden: false, label: "Proj. Cozinha" },
                        "projectSubsidiaries": { hidden: false, label: "Proj. Mat. Subsidiárias" }
                    };

                    if (localStorage["productivityunits.ToggleColumn"]) {
                        var keys = Object.keys(columns);
                        var storedColumns = JSON.parse(localStorage["productivityunits.ToggleColumn"]);
                        for (var i = 0; i < keys.length; i++) {
                            columns[keys[i]] = storedColumns[keys[i]];
                        }
                    };
                    this._columns = columns;
                },
                _toggleColumn: function (event) {
                    var columnIndex = JSON.parse(event.target.dataset.item).key;
                    event.path[0].classList.toggle("selected");
                    this.set('_columns.' + columnIndex + '.hidden', (!this._columns[columnIndex].hidden));
                    if (typeof (Storage) !== "undefined") {
                        localStorage["productivityunits.ToggleColumn"] = JSON.stringify(this._columns);
                    }
                },
                _getColumnItemClass: function (columnIndex) {
                    return !this._columns[columnIndex].hidden ? "selected" : "";
                },
                _toArray: function (obj) {
                    return Object.keys(obj).map(function (key) {
                        return {
                            key: key,
                            value: obj[key]
                        };
                    });
                },
            /* end - ColumnToggle */

            });
        });
    </script>

</dom-module>
