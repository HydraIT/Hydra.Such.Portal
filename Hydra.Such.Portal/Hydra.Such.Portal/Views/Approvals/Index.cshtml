
@{
    ViewData["Title"] = "Pedidos de Aprovação";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="import" href="~/lib/vaadin-themable-mixin/vaadin-themable-mixin.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-sorter.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-sort-behavior.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-filter.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-filter-behavior.html" />
<link rel="import" href="~/lib/vaadin-valo-theme/vaadin-checkbox.html">
<link rel="import" href="~/lib/vaadin-checkbox/vaadin-checkbox.html">
<link rel="import" href="~/lib/iron-form/iron-form.html" />
<link rel="import" href="~/lib/paper-button/paper-button.html" />
<link rel="import" href="/lib/paper-toast-master/paper-toast.html" />

<x-approvals></x-approvals>
<dom-module id="x-approvals">
    <template>
        <link rel="stylesheet" href="/lib/bootstrap/dist/css/bootstrap.css" />
        <link rel="stylesheet" href="~/lib/font-awesome-4.7.0/css/font-awesome.min.css" />
        <link rel="stylesheet" href="/css/main.css" />

        @*POPULATE GRID*@
        <iron-ajax url="/Approvals/GetListApprovals"
                   last-response="{{result}}"
                   auto
                   method="post"
                   handle-as="json"
                   id="grid_databound"
                   content-type="application/json"></iron-ajax>

        @*Actions*@
        <iron-ajax url="/Approvals/UpdateMovementStatus"
                   last-response="{{actionResult}}"
                   method="post"
                   handle-as="json"
                   id="action_databound"
                   on-response="_actionResponseProcessor"
                   content-type="application/json"></iron-ajax>


        <vaadin-grid aria-label="ApprovalsTable" items="[[result]]" class="grid" multi-sort="true">
            <vaadin-grid-column width="60px">
                <template class="header">
                    <vaadin-grid-sorter path="id">Nº</vaadin-grid-sorter>
                    <vaadin-grid-filter path="id" />
                </template>
                <template>
                    {{item.movementNo}}
                </template>
            </vaadin-grid-column>
            <vaadin-grid-column width="250px">
                <template class="header">
                    <vaadin-grid-sorter path="typeText">Tipo</vaadin-grid-sorter>
                    <vaadin-grid-filter path="typeText" />
                </template>
                <template>
                    {{item.typeText}}
                </template>
            </vaadin-grid-column>
            <vaadin-grid-column width="150px">
                <template class="header">
                    <vaadin-grid-sorter path="number">Associado</vaadin-grid-sorter>
                    <vaadin-grid-filter path="number" />
                </template>
                <template>
                    {{item.number}}
                </template>
            </vaadin-grid-column>
            <vaadin-grid-column width="200px">
                <template class="header">
                    <vaadin-grid-sorter path="requestUser">Solicitado Por</vaadin-grid-sorter>
                    <vaadin-grid-filter path="requestUser" />
                </template>
                <template>
                    {{item.requestUser}}
                </template>
            </vaadin-grid-column>
            <vaadin-grid-column width="150px">
                <template class="header">
                    <vaadin-grid-sorter path="value">Valor</vaadin-grid-sorter>
                    <vaadin-grid-filter path="value" />
                </template>
                <template>
                    {{item.value}}
                </template>
            </vaadin-grid-column>
            <vaadin-grid-column width="150px">
                <template class="header">
                    <vaadin-grid-sorter path="statusText">Estado</vaadin-grid-sorter>
                    <vaadin-grid-filter path="statusText" />
                </template>
                <template>
                    {{item.statusText}}
                </template>
            </vaadin-grid-column>
            <vaadin-grid-column width="100px">
                <template class="header">
                    <vaadin-grid-sorter path="level">Nivel</vaadin-grid-sorter>
                    <vaadin-grid-filter path="level" />
                </template>
                <template>
                    {{item.level}}
                </template>
            </vaadin-grid-column>
            <vaadin-grid-column>
                <template class="header">
                </template>
                <template>
                    <center>
                        <paper-button class="btnSave" on-tap="_showDetails">Detalhes</paper-button>
                    </center>
                </template>
            </vaadin-grid-column>
            <vaadin-grid-column>
                <template class="header">
                </template>
                <template>
                    <center>
                        <paper-button class="btnEdit" on-tap="_Approve">Aprovar</paper-button>
                    </center>
                </template>
            </vaadin-grid-column>
            <vaadin-grid-column>
                <template class="header">
                </template>
                <template>
                    <center>
                        <paper-button class="btnRemove" on-tap="_Reject">Rejeitar</paper-button>
                    </center>
                </template>
            </vaadin-grid-column>
        </vaadin-grid>

        <paper-toast id="ToastMessage" duration="4000" horizontalAlign="right" class="toastSuccess">&nbsp;<i class="fa fa-check fa-lg" aria-hidden="true"></i></paper-toast>
        <paper-toast id="ToastError" duration="4000" horizontalAlign="right" class="toastError">&nbsp;<i class="fa fa-exclamation-triangle" aria-hidden="true"></i></paper-toast>

    </template>

    <script>
        document.addEventListener('WebComponentsReady', function () {
            Polymer({
                is: 'x-approvals',
                _openToast: function (message) {
                    this.$.ToastMessage.text = message;
                    this.$.ToastMessage.open();
                },
                _showDetails: function (e) {
                    if (e != null) {
                        window.location.href = e.model.item.numberLink;
                    }
                },
                _Approve: function (e) {
                    if (e != null) {
                        this.$.action_databound.body = JSON.stringify({ movementNo: e.model.item.movementNo, status: 1, rejectReason: "" });
                        this.$.action_databound.generateRequest();
                    }
                },
                _Reject: function (e) {
                    if (e != null) {
                        var TMessage = this.$.ToastMessage;
                        var TMessageError = this.$.ToastError;
                        var ARequest = this.$.action_databound;
                        bootbox.prompt({
                            title: "Introduza o motivo de rejeição!",
                            inputType: 'textarea',
                            buttons: {
                                confirm: {
                                    label: 'Rejeitar',
                                    className: 'btn-success'
                                },
                                cancel: {
                                    label: 'Cancelar',
                                    className: 'btn-danger'
                                }
                            },
                            callback: function (result) {
                                if (result == "") {
                                    TMessageError.text = "É necessário preencher o motivo de rejeição.";
                                    TMessageError.open();
                                    return false;
                                } else {
                                    ARequest.body = JSON.stringify({ movementNo: e.model.item.movementNo, status : 2, rejectReason: result });
                                    ARequest.generateRequest();
                                }
                            }
                        });
                    }
                },
                _actionResponseProcessor: function (e) {
                    var self = this;
                    if (this.actionResult.eReasonCode == 100) {
                        this.$.ToastMessage.text = this.actionResult.eMessage;
                        this.$.ToastMessage.open();

                        this.$.grid_databound.generateRequest();
                    } else {
                        this.$.ToastError.text = this.actionResult.eMessage;
                        this.$.ToastError.open();
                    }
                }
            });
        });
    </script>

</dom-module>


