
@{
    ViewData["Title"] = "Contactos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="import" href="~/lib/vaadin-themable-mixin/vaadin-themable-mixin.html" />
    <link rel="import" href="~/lib/vaadin-grid/vaadin-grid.html" />
    <link rel="import" href="~/lib/vaadin-grid/vaadin-grid-sorter.html" />
    <link rel="import" href="~/lib/vaadin-grid/vaadin-grid-sort-behavior.html" />
    <link rel="import" href="~/lib/vaadin-grid/vaadin-grid-filter.html" />
    <link rel="import" href="~/lib/vaadin-grid/vaadin-grid-filter-behavior.html" />
    <link rel="import" href="/lib/paper-toast-master/paper-toast.html" />
    @*<link rel="import" href="~/lib/vaadin-valo-theme/vaadin-checkbox.html">
    <link rel="import" href="~/lib/vaadin-checkbox/vaadin-checkbox.html">*@
<link rel="import" href="~/lib/iron-form/iron-form.html" />
<link rel="import" href="~/lib/paper-button/paper-button.html" />

<x-contacts></x-contacts>
<dom-module id="x-contacts">
    <template>
        <link rel="stylesheet" href="/lib/bootstrap/dist/css/bootstrap.css" />
        <link rel="stylesheet" href="~/lib/font-awesome-4.7.0/css/font-awesome.min.css" />
        <link rel="stylesheet" href="/css/main.css" />

        <iron-ajax id="contacts_grid_datasource" url="/Contactos/GetContacts" last-response="{{Contacts}}" auto method="post" handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax id="deleteContact_ajax" url="/Contactos/DeleteContact" last-response="{{DeleteContactResponse}}" on-response="_deleteContactResponse" method="post" handle-as="json" content-type="application/json"></iron-ajax>
        <template is="dom-if" if="{{ _permissions.create }}">
        <div class="marginSpace">
            <paper-button class="btnSave" raised on-tap="_redirectToNewContactForm"><i class="fa fa-plus" aria-hidden="true"></i>&nbsp; Criar</paper-button>
        </div>
        </template>

        <vaadin-grid id="grdContacts" aria-label="Contacts Table" items="[[Contacts]]" class="grid" active-item="{{activeItem}}" multi-sort="true">
            <vaadin-grid-column width="10%">
                <template class="header">
                    <vaadin-grid-sorter path="id">ID</vaadin-grid-sorter>
                    <vaadin-grid-filter path="id" />
                </template>
                <template>
                    {{item.id}}
                </template>
            </vaadin-grid-column>
            <vaadin-grid-column width="80%">
                <template class="header">
                    <vaadin-grid-sorter path="nome">Nome</vaadin-grid-sorter>
                    <vaadin-grid-filter path="name" />
                </template>
                <template>
                    {{item.name}}
                </template>
            </vaadin-grid-column>
            <template is="dom-if" if="{{ _permissions.delete }}">
                <vaadin-grid-column width="10%">
                    <template class="header">
                    </template>
                    <template>
                        <paper-button raised id="btnCancel" class="btnRemove" on-tap="_deleteContact"><i class="fa fa-trash-o" aria-hidden="true"></i>&nbsp; Eliminar</paper-button>
                    </template>
                </vaadin-grid-column>
            </template>
        </vaadin-grid>
        <paper-toast id="ToastMessageSuccess" duration="4000" horizontalAlign="right" class="toastSuccess">&nbsp;<i class="fa fa-check fa-lg" aria-hidden="true"></i></paper-toast>
        <paper-toast id="ToastMessageError" duration="4000" horizontalAlign="right" class="toastError">&nbsp;<i class="fa fa-exclamation-triangle" aria-hidden="true"></i></paper-toast>
    </template>
    <script>
        document.addEventListener('WebComponentsReady', function () {
            Polymer({
                is: 'x-contacts',
                properties: {
                    activeItem: {
                        observer: '_onContactRowSelected'
                    },
                    _filterActive: {
                        type: Boolean,
                        value: true
                    },
                    _permissions: {
                        type: Array,
                        value: @Html.Raw(Json.Serialize(ViewBag.UserPermissions)),
                    },
                },
                _openToast: function (message) {
                    this.$.ToastMessageSuccess.text = message;
                    this.$.ToastMessageSuccess.open();
                },
                _openToastError: function (message) {
                    this.$.ToastMessageError.text = message;
                    this.$.ToastMessageError.open();
                },
                _onContactRowSelected: function (item) {
                    if (item != null) {
                        window.location.href = "/Contactos/Detalhes/" + item.id;
                    }
                },
                _redirectToNewContactForm: function (item) {
                    if (item != null) {
                        window.location.href = "/Contactos/Detalhes";
                    }
                },
                _deleteContact: function (e) {
                    var ajax_request = this.$.deleteContact_ajax;

                    var contactToDelete = e.model.item;//this.activeItem;

                    bootbox.confirm({
                        message: "Tem a certeza que pretende remover o contacto " + contactToDelete.id + "?",
                        buttons: {
                            confirm: {
                                label: 'Sim',
                                className: 'btn-success'
                            },
                            cancel: {
                                label: 'Não',
                                className: 'btn-danger'
                            }
                        },
                        callback: function (result) {
                            if (result) {
                                ajax_request.body = JSON.stringify(contactToDelete);
                                ajax_request.generateRequest();
                            }
                        }
                    });
                },
                _deleteContactResponse: function (e) {
                    if (this.DeleteContactResponse) {
                        this.$.contacts_grid_datasource.generateRequest();
                        this._openToast("Contacto eliminado com sucesso.");
                    }
                    else {
                        this._openToastError("Ocorreu um erro ao eliminar o contacto.");
                    }
                },
            });
        });
    </script>
</dom-module>
