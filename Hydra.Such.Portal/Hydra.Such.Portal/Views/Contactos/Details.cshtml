
@{
    ViewData["Title"] = "Detalhes de Contacto";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="import" href="~/lib/vaadin-themable-mixin/vaadin-themable-mixin.html" />
<link rel="import" href="~/lib/vaadin-valo-theme/vaadin-text-field.html">
<link rel="import" href="~/lib/vaadin-text-field/vaadin-text-field.html">
<link rel="import" href="~/lib/paper-button/paper-button.html" />
<link rel="import" href="/lib/paper-toast-master/paper-toast.html" />
<link rel="import" href="/lib/such-textarea/such-textarea.html">
<link rel="import" href="/lib/iron-autogrow-textarea/iron-autogrow-textarea.html" />
<link rel="import" href="/lib/such-selectbox/such-selectbox.html">

<x-contact-details _permissions='@Html.Raw(Json.Serialize(ViewBag.UserPermissions))'></x-contact-details>
<dom-module id="x-contact-details">
    <template>
        <link rel="stylesheet" href="/lib/bootstrap/dist/css/bootstrap.css" />
        <link rel="stylesheet" href="~/lib/font-awesome-4.7.0/css/font-awesome.min.css" />
        <link rel="stylesheet" href="/css/main.css" />

        <iron-ajax method="post" handle-as="json" content-type="application/json" last-response="{{contact}}" id="contact_datasource" url="/Contactos/GetById" on-response="_onGetContactByIdResponse"></iron-ajax>
        <iron-ajax method="post" handle-as="json" content-type="application/json" last-response="{{contact}}" id="create_contact_request" url="/Contactos/CreateContact" on-response="_onContactResponse"></iron-ajax>
        <iron-ajax method="post" handle-as="json" content-type="application/json" last-response="{{numValidationResponse}}" id="numValidation_contact_request" url="/Contactos/ValidateNumeration" on-response="_onNumValidationResponse"></iron-ajax>
        <iron-ajax url="/PopulateDropdowns/GetAllRegionCode" last-response="{{CBRegions}}" auto method="post" handle-as="json" content-type="application/json"></iron-ajax>

        @*<template is="dom-if" if="{{ !_isCreate }}">
            <div class="subMenu">
                <paper-button class="tablinks" on-tap="_goBack" title="Voltar"><i class="fa fa-arrow-left" aria-hidden="true"></i> Voltar</paper-button>

                <template is="dom-if" if="{{ _permissions.create }}">
                    <paper-button class="tablinks" on-tap="_redirectToNewContactForm"><i class="fa fa-plus" aria-hidden="true" title="Criar Novo"></i>&nbsp; Criar Novo</paper-button>
                </template>
            </div>
        </template>*@

        <div class="subMenu">
            <paper-button id="btnGoBack" class="tablinks" on-tap="_goBack" title="Voltar"><i class="fa fa-arrow-left" aria-hidden="true"></i> Voltar</paper-button>

            <paper-button id="btnCreateNew" class="btnEdit tablinks" on-tap="_redirectToNewContactForm" disabled="{{ !_permissions.create }}"><i class="fa fa-plus" aria-hidden="true" title="Criar Novo"></i>&nbsp; Criar Novo</paper-button>
            <paper-button id="btnCreate" class="btnSave tablinks" on-tap="_createContact" disabled="{{ !_permissions.create }}"><i class="fa fa-plus" aria-hidden="true"></i>&nbsp; Criar</paper-button>
            <paper-button id="btnUpdate" class="btnSave tablinks" on-tap="_updateContact" disabled="{{ !_permissions.update }}"><i class="fa fa-floppy-o" aria-hidden="true"></i>&nbsp; Guardar</paper-button>
            <paper-button id="btnCancel" class="btnRemove tablinks" on-tap="_deleteContact" disabled="{{ !_permissions.delete }}"><i class="fa fa-trash-o" aria-hidden="true"></i>&nbsp; Eliminar</paper-button>
        </div>

        <div class="row">
            <div class="col-lg-3">
                <vaadin-text-field id="contactId" name="contactId" label="Nº" value="{{contact.id}}" disabled></vaadin-text-field>
            </div>
            <div class="col-lg-3">
                <vaadin-text-field id="contactName" name="contactName" label="Nome" value="{{contact.name}}" disabled="{{ !_permissions.update }}" required error-message="Este campo é obrigatório"></vaadin-text-field>
            </div>
            <div class="col-lg-3">
                <vaadin-text-field id="address" name="address" label="Endereço" value="{{contact.address}}" disabled="{{ !_permissions.update }}"></vaadin-text-field>
            </div>
            <div class="col-lg-3">
                <vaadin-text-field id="zipcode" name="zipcode" label="Código Postal" value="{{contact.zipCode}}" disabled="{{ !_permissions.update }}"></vaadin-text-field>
            </div>
            <div class="col-lg-3">
                <vaadin-text-field id="city" name="city" label="Cidade" value="{{contact.city}}" disabled="{{ !_permissions.update }}"></vaadin-text-field>
            </div>
            <div class="col-lg-3">
                <such-selectbox id="codigoRegiao" name="codigoRegiao" value="{{contact.regiao}}" label="Região" disabled="{{ !_permissions.update }}"
                                items="[[CBRegions]]"
                                text-path="value"
                                value-path="id"
                                fields='[{"field":"id", "name":"Código"}, {"field":"value", "name":"Descrição"}]'>
                </such-selectbox>
            </div>
            <div class="col-lg-3">
                <vaadin-text-field id="phone" name="phone" label="Telefone" value="{{contact.phone}}" disabled="{{ !_permissions.update }}"></vaadin-text-field>
            </div>
            <div class="col-lg-3">
                <vaadin-text-field id="email" name="email" label="Email" value="{{contact.email}}" disabled="{{ !_permissions.update }}"></vaadin-text-field>
            </div>
            <div class="col-lg-3">
                <vaadin-text-field id="VATNumber" name="VATNumber" label="NIF" value="{{contact.vatNumber}}" disabled="{{ !_permissions.update }}"></vaadin-text-field>
            </div>
            <div class="col-lg-3">
                <vaadin-text-field id="PersonContact" name="PersonContact" label="Pessoa Contato" value="{{contact.personContact}}" disabled="{{ !_permissions.update }}"></vaadin-text-field>
            </div>
            <div class="col-lg-3">
                <vaadin-text-field id="PhoneContact" name="PhoneContact" label="Telefone Contato" value="{{contact.phoneContact}}" disabled="{{ !_permissions.update }}"></vaadin-text-field>
            </div>
            <div class="col-lg-3">
                <vaadin-text-field id="ContactFunction" name="ContactFunction" label="Função Contato" value="{{contact.contactFunction}}" disabled="{{ !_permissions.update }}"></vaadin-text-field>
            </div>
            <div class="col-lg-3">
                <vaadin-text-field id="MobilePhoneContact" name="MobilePhoneContact" label="Telemovel Contato" value="{{contact.mobilePhoneContact}}" disabled="{{ !_permissions.update }}"></vaadin-text-field>
            </div>
            <div class="col-lg-3">
                <vaadin-text-field id="EmailContact" name="EmailContact" label="Email Contato" value="{{contact.emailContact}}" disabled="{{ !_permissions.update }}"></vaadin-text-field>
            </div>

            <div class="col-md-6">
                <such-textarea rows="5" value="{{contact.notes}}" id="notes" name="notes" label="Notas" disabled="{{ !_permissions.update }}"> </such-textarea>
            </div>
        </div>

        @*<div class="marginSpace">
            <template is="dom-if" if="{{ _isCreate }}">
                <paper-button raised id="btnCreate" class="btnSave" on-tap="_createContact"><i class="fa fa-plus" aria-hidden="true"></i>&nbsp; Criar</paper-button>
            </template>
            <template is="dom-if" if="{{ !_isCreate }}">
                <template is="dom-if" if="{{ _permissions.update }}">
                    <paper-button raised id="btnUpdate" class="btnSave" on-tap="_updateContact"><i class="fa fa-floppy-o" aria-hidden="true"></i>&nbsp; Guardar</paper-button>
                </template>
                <template is="dom-if" if="{{ _permissions.delete }}">
                    <paper-button raised id="btnCancel" class="btnRemove" on-tap="_deleteContact"><i class="fa fa-trash-o" aria-hidden="true"></i>&nbsp; Eliminar</paper-button>
                </template>
            </template>
        </div>*@

        <paper-toast id="ToastMessageSuccess" duration="4000" horizontalAlign="right" class="toastSuccess">&nbsp;<i class="fa fa-check fa-lg" aria-hidden="true"></i></paper-toast>
        <paper-toast id="ToastMessageError" duration="4000" horizontalAlign="right" class="toastError">&nbsp;<i class="fa fa-exclamation-triangle" aria-hidden="true"></i></paper-toast>

    </template>
    <script>
        document.addEventListener('WebComponentsReady', function () {
            Polymer({
                is: 'x-contact-details',
                properties: {
                    _permissions: {
                        type: Array
                    },
                    _isCreate: {
                        type: Boolean,
                        value: false
                    },
                    _contactId: {
                        type: String,
                        notify: true,
                        value: "@ViewBag.ContactId"
                    }
                },
                ready: function () {
                    this.$.contact_datasource.body = JSON.stringify({ "Id": this._contactId });
                    this.$.contact_datasource.generateRequest();

                    if (this._contactId == "")
                        this._isCreate = true;

                    //Inserir
                    //debugger;
                    if (this._contactId  == "") {
                        $(this.$.btnCreateNew).addClass('hidden');
                        $(this.$.btnCreate).removeClass('hidden');
                        $(this.$.btnUpdate).addClass('hidden');
                        $(this.$.btnCancel).addClass('hidden');
                    } else {
                        $(this.$.btnCreateNew).removeClass('hidden');
                        $(this.$.btnCreate).addClass('hidden');
                        $(this.$.btnUpdate).removeClass('hidden');
                        $(this.$.btnCancel).removeClass('hidden');
                    }
                },
                _showMessage: function (message) {
                    this.$.ToastMessageSuccess.text = message;
                    this.$.ToastMessageSuccess.open();
                },
                _showErrorMessage: function (message) {
                    this.$.ToastMessageError.text = message;
                    this.$.ToastMessageError.open();
                },
                _onGetContactByIdResponse: function (e) {
                    if (this.contact == undefined && this._contactId != "") {
                        this._showMessage('Contacto não encontrado');
                    }
                },
                _redirectToNewContactForm: function (item) {
                    if (item != null) {
                        window.location.href = "/Contactos/Detalhes";
                    }
                },
                _validateUserInput() {
                    if (this.$.contactName.validate()) {
                        return true;
                    }
                    this._showErrorMessage("Verifique os dados inseridos.");
                    return false;
                },
                _createContact: function () {

                    if (this._validateUserInput()) {
                        this.$.numValidation_contact_request.body = JSON.stringify(this.contact);
                        this.$.numValidation_contact_request.generateRequest();
                    }
                },
                _onNumValidationResponse: function (data) {
                    if (data.detail.status === 200) {
                        if (this.numValidationResponse == "") {
                            this.$.create_contact_request.url = "/Contactos/CreateContact";
                            this.$.create_contact_request.body = JSON.stringify(this.contact);
                            this.$.create_contact_request.generateRequest();
                        }
                        else {
                            this._showErrorMessage(this.numValidationResponse);
                        }
                    }
                },
                _onContactResponse: function (e) {
                    if (e.detail.status === 200)
                    {
                        if (e.detail.url.indexOf("Create") !== -1) {
                            if (this.contact.eReasonCode == 1) {
                                this._contactId = this.contact.Id;
                                this._isCreate = false;
                                this._showMessage(this.contact.eMessage);
                            }
                            else {
                                this._showErrorMessage(this.contact.eMessage);
                                this.$.contactId.value = "";
                            }
                        }
                        else if (e.detail.url.indexOf("Delete") !== -1) {
                            //On delete action contact is a boolean
                            if (this.contact) {
                                this._showMessage("Contacto eliminado com sucesso.");
                                setTimeout(function () {
                                        window.location.href = "/Contactos";
                                    }, 2500);
                            }
                            else {
                                this._showErrorMessage("Ocorreu um erro ao remover o contacto.");
                            }
                        }
                        else {
                            this.$.contact_datasource.generateRequest();
                            this._showMessage("O contacto foi atualizado com sucesso!");
                        }
                    } else {
                        if (e.detail.url.indexOf("Create") !== -1) {
                            this._showErrorMessage("Ocorreu um erro ao criar o contacto.");
                        }
                        else if (e.detail.url.indexOf("Delete") !== -1) {
                            this._showErrorMessage("Ocorreu um erro ao remover o contacto!");
                        }
                        else {
                            this._showErrorMessage("Ocorreu um erro ao atualizar o contacto.");
                        }
                    }
                },
                _updateContact: function () {
                    if (this._validateUserInput()) {
                        this.$.create_contact_request.url = "/Contactos/UpdateContact";
                        this.$.create_contact_request.body = JSON.stringify(this.contact);
                        this.$.create_contact_request.generateRequest();
                    }
                },
                _deleteContact: function () {
                    this.$.create_contact_request.url = "/Contactos/DeleteContact";
                    var ajax_request = this.$.create_contact_request;

                    var contactToDelete = this.contact;

                    bootbox.confirm({
                        message: "Tem a certeza que pretende remover o contacto " + this.contact.id + "?",
                        buttons: {
                            confirm: {
                                label: 'Sim',
                                className: 'btn-success'
                            },
                            cancel: {
                                label: 'Não',
                                className: 'btn-danger'
                            }
                        },
                        callback: function (result) {
                            if (result) {
                                ajax_request.body = JSON.stringify(contactToDelete);
                                ajax_request.generateRequest();
                            }
                        }
                    });


                },

                _goBack: function (e) {
                    window.history.back();
                },
            });
        });
    </script>
</dom-module>