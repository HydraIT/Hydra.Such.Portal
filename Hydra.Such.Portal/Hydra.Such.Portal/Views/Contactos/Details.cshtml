@{
    ViewData["Title"] = "Detalhes de Contacto";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="import" href="~/lib/vaadin-themable-mixin/vaadin-themable-mixin.html" />
<link rel="import" href="~/lib/vaadin-valo-theme/vaadin-text-field.html">
<link rel="import" href="~/lib/vaadin-text-field/vaadin-text-field.html">
<link rel="import" href="~/lib/paper-button/paper-button.html" />
<link rel="import" href="/lib/paper-toast-master/paper-toast.html" />
<link rel="import" href="/lib/such-textarea/such-textarea.html">
<link rel="import" href="/lib/iron-autogrow-textarea/iron-autogrow-textarea.html" />
<link rel="import" href="/lib/such-selectbox/such-selectbox.html">

<x-contact-details _permissions='@Html.Raw(Json.Serialize(ViewBag.UserPermissions))'></x-contact-details>
<dom-module id="x-contact-details">
    <template>
        <link rel="stylesheet" href="/lib/bootstrap/dist/css/bootstrap.css" />
        <link rel="stylesheet" href="~/lib/font-awesome-4.7.0/css/font-awesome.min.css" />
        <link rel="stylesheet" href="/css/main.css" />

        <iron-ajax method="post"
                   handle-as="json"
                   content-type="application/json"
                   last-response="{{contact}}"
                   id="contact_datasource"
                   url="/Contactos/GetById"
                   on-response="_onGetContactByIdResponse">
        </iron-ajax>

        <iron-ajax method="post"
                   handle-as="json"
                   content-type="application/json"
                   last-response="{{contact}}"
                   id="create_contact_request"
                   url="/Contactos/CreateContact"
                   on-response="_onContactResponse">
        </iron-ajax>

        <iron-ajax method="post"
                   handle-as="json"
                   content-type="application/json"
                   last-response="{{numValidationResponse}}"
                   id="numValidation_contact_request"
                   url="/Contactos/ValidateNumeration"
                   on-response="_onNumValidationResponse">
        </iron-ajax>

        <iron-ajax url="/PopulateDropdowns/GetAllClientsComboGrid"
                   last-response="{{CBClients}}"
                   auto
                   method="post"
                   handle-as="json"
                   content-type="application/json"
                   id="clients_ajax">
        </iron-ajax>

        <iron-ajax url="/PopulateDropdowns/GetAllContactsServicos"
                   last-response="{{CBServicos}}"
                   auto
                   method="post"
                   handle-as="json"
                   content-type="application/json"
                   id="clients_ajax">
        </iron-ajax>

        <iron-ajax url="/PopulateDropdowns/GetAllContactsFuncoes"
                   last-response="{{CBFuncoes}}"
                   auto
                   method="post"
                   handle-as="json"
                   content-type="application/json"
                   id="clients_ajax">
        </iron-ajax>

        <div class="subMenu">
            <paper-button id="btnGoBack" class="tablinks" on-tap="_goBack" title="Voltar"><i class="fa fa-arrow-left" aria-hidden="true"></i> Voltar</paper-button>
            <paper-button id="btnCreateNew" class="btnEdit tablinks" on-tap="_redirectToNewContactForm" disabled="{{ !_permissions.create }}"><i class="fa fa-plus" aria-hidden="true" title="Criar Novo"></i>&nbsp; Criar Novo</paper-button>
            <paper-button id="btnCreate" class="btnSave tablinks" on-tap="_createContact" disabled="{{ !_permissions.create }}"><i class="fa fa-plus" aria-hidden="true"></i>&nbsp; Criar</paper-button>
            <paper-button id="btnUpdate" class="btnSave tablinks" on-tap="_updateContact" disabled="{{ !_permissions.update }}"><i class="fa fa-floppy-o" aria-hidden="true"></i>&nbsp; Guardar</paper-button>
            <paper-button id="btnCancel" class="btnRemove tablinks" on-tap="_deleteContact" disabled="{{ !_permissions.delete }}"><i class="fa fa-trash-o" aria-hidden="true"></i>&nbsp; Eliminar</paper-button>
        </div>

        <div class="row">
            <div class="col-sm-3">
                <vaadin-text-field id="ddno" label="Nº" value="{{contact.no}}" disabled></vaadin-text-field>
            </div>

            <div class="col-sm-3">
                <such-selectbox id="ddnoCliente" value="{{contact.noCliente}}" label="Nº Cliente" style="padding:12px"
                                items="[[CBClients]]"
                                text-path="no_"
                                value-path="no_"
                                fields='[{"field":"no_", "name":"Cód. Cliente"}, {"field":"name", "name":"Nome"}, {"field":"vatRegistrationNo_", "name":"NIF"}, {"field":"address", "name":"Endereço"}, {"field":"postCode", "name":"Código Postal"}, {"field":"city", "name":"Cidade"}, {"field":"regionCode", "name":"Região"}, {"field":"phoneNo", "name":"Telefone"}, {"field":"eMail", "name":"Email"}]'
                                on-value-changed="_getClienteDados"
                                disabled="{{ !_permissions.update }}">
                </such-selectbox>
            </div>

            <div class="col-sm-3">
                <vaadin-text-field id="ddclienteNome" label="Cliente Nome" value="{{contact.clienteNome}}" disabled></vaadin-text-field>
            </div>

            <div class="col-sm-3">
                <vaadin-text-field id="ddclienteNIF" label="Cliente NIF" value="{{contact.clienteNIF}}" disabled></vaadin-text-field>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-3">
                <vaadin-text-field id="ddclienteEndereco" label="Cliente Endereço" value="{{contact.clienteEndereco}}" disabled></vaadin-text-field>
            </div>

            <div class="col-sm-3">
                <vaadin-text-field id="ddclienteCodigoPostal" label="Cliente Código Postal" value="{{contact.clienteCodigoPostal}}" disabled></vaadin-text-field>
            </div>

            <div class="col-sm-3">
                <vaadin-text-field id="ddclienteCidade" label="Cliente Cidade" value="{{contact.clienteCidade}}" disabled></vaadin-text-field>
            </div>

            <div class="col-sm-3">
                <vaadin-text-field id="ddclienteRegiao" label="Cliente Região" value="{{contact.clienteRegiao}}" disabled></vaadin-text-field>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-3">
                <vaadin-text-field id="ddclienteTelefone" label="Cliente Telefone" value="{{contact.clienteTelefone}}" disabled></vaadin-text-field>
            </div>

            <div class="col-sm-3">
                <vaadin-text-field id="ddclienteEmail" label="Cliente Email" value="{{contact.clienteEmail}}" disabled></vaadin-text-field>
            </div>

            <div class="col-sm-3">
                <such-selectbox id="ddnoServico" value="{{contact.noServico}}" label="Serviço" style="padding:12px"
                                items="[[CBServicos]]"
                                text-path="value"
                                value-path="id"
                                fields='[{"field":"id", "name":"Nº Serviço"}, {"field":"value", "name":"Serviço"}]'
                                disabled="{{ !_permissions.update }}">
                </such-selectbox>
            </div>

            <div class="col-sm-3">
                <such-selectbox id="ddnoFuncao" value="{{contact.noFuncao}}" label="Função" style="padding:12px"
                                items="[[CBFuncoes]]"
                                text-path="value"
                                value-path="id"
                                fields='[{"field":"id", "name":"Nº Função"}, {"field":"value", "name":"Função"}]'
                                disabled="{{ !_permissions.update }}">
                </such-selectbox>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-3">
                <vaadin-text-field id="ddnome" label="Nome" value="{{contact.nome}}" disabled="{{ !_permissions.update }}"></vaadin-text-field>
            </div>

            <div class="col-sm-3">
                <vaadin-text-field id="ddtelefone" label="Telefone" value="{{contact.telefone}}" disabled="{{ !_permissions.update }}"></vaadin-text-field>
            </div>

            <div class="col-sm-3">
                <vaadin-text-field id="ddtelemovel" label="Telemóvel" value="{{contact.telemovel}}" disabled="{{ !_permissions.update }}"></vaadin-text-field>
            </div>

            <div class="col-sm-3">
                <vaadin-text-field id="ddfax" label="Fax" value="{{contact.fax}}" disabled="{{ !_permissions.update }}"></vaadin-text-field>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-3">
                <vaadin-text-field id="ddemail" label="Email" value="{{contact.email}}" disabled="{{ !_permissions.update }}"></vaadin-text-field>
            </div>

            <div class="col-sm-3">
                <vaadin-text-field id="ddpessoa" label="Pessoa" value="{{contact.pessoa}}" disabled="{{ !_permissions.update }}"></vaadin-text-field>
            </div>

            <div class="col-sm-6">
                <such-textarea id="ddnotas" label="Notas" value="{{contact.notas}}" disabled="{{ !_permissions.update }}" rows="5"> </such-textarea>
            </div>
        </div>

        <paper-toast id="ToastMessageSuccess" duration="4000" horizontalAlign="right" class="toastSuccess">&nbsp;<i class="fa fa-check fa-lg" aria-hidden="true"></i></paper-toast>
        <paper-toast id="ToastMessageError" duration="4000" horizontalAlign="right" class="toastError">&nbsp;<i class="fa fa-exclamation-triangle" aria-hidden="true"></i></paper-toast>

    </template>
    <script>
        document.addEventListener('WebComponentsReady', function () {
            Polymer({
                is: 'x-contact-details',
                properties: {
                    _permissions: {
                        type: Array
                    },
                    _isCreate: {
                        type: Boolean,
                        value: false
                    },
                    _contactId: {
                        type: String,
                        notify: true,
                        value: "@ViewBag.ContactId"
                    }
                },

                ready: function () {
                    this.$.contact_datasource.body = JSON.stringify({ "no": this._contactId });
                    this.$.contact_datasource.generateRequest();

                    if (this._contactId == "")
                        this._isCreate = true;

                    //Inserir
                    if (this._contactId  == "") {
                        $(this.$.btnCreateNew).addClass('hidden');
                        $(this.$.btnCreate).removeClass('hidden');
                        $(this.$.btnUpdate).addClass('hidden');
                        $(this.$.btnCancel).addClass('hidden');
                    } else {
                        $(this.$.btnCreateNew).removeClass('hidden');
                        $(this.$.btnCreate).addClass('hidden');
                        $(this.$.btnUpdate).removeClass('hidden');
                        $(this.$.btnCancel).removeClass('hidden');
                    }
                },

                _showMessage: function (message) {
                    this.$.ToastMessageSuccess.text = message;
                    this.$.ToastMessageSuccess.open();
                },
                _showErrorMessage: function (message) {
                    this.$.ToastMessageError.text = message;
                    this.$.ToastMessageError.open();
                },

                _onGetContactByIdResponse: function (e) {
                    if (this.contact == undefined && this._contactId != "") {
                        this._showMessage('Contacto não encontrado');
                    }
                },

                _redirectToNewContactForm: function (item) {
                    if (item != null) {
                        window.location.href = "/Contactos/Detalhes";
                    }
                },

                _validateUserInput() {
                    if (this.$.contactName.validate()) {
                        return true;
                    }
                    this._showErrorMessage("Verifique os dados inseridos.");
                    return false;
                },

                _createContact: function () {
                    //if (this._validateUserInput()) {
                        this.$.numValidation_contact_request.body = JSON.stringify(this.contact);
                        this.$.numValidation_contact_request.generateRequest();
                    //}
                },

                _onNumValidationResponse: function (data) {
                    if (data.detail.status === 200) {
                        if (this.numValidationResponse == "") {
                            this.$.create_contact_request.url = "/Contactos/CreateContact";
                            this.$.create_contact_request.body = JSON.stringify(this.contact);
                            this.$.create_contact_request.generateRequest();
                        }
                        else {
                            this._showErrorMessage(this.numValidationResponse);
                        }
                    }
                },

                _onContactResponse: function (e) {
                    if (e.detail.status === 200)
                    {
                        if (e.detail.url.indexOf("Create") !== -1) {
                            if (this.contact.eReasonCode == 1) {
                                this._contactId = this.contact.Id;
                                this._isCreate = false;
                                this._showMessage(this.contact.eMessage);

                                window.location.href = "/Contactos/Detalhes/" + this.$.ddno.value;
                            }
                            else {
                                this._showErrorMessage(this.contact.eMessage);
                                this.$.contactId.value = "";
                            }
                        }
                        else if (e.detail.url.indexOf("Delete") !== -1) {
                            //On delete action contact is a boolean
                            if (this.contact) {
                                this._showMessage("Contacto eliminado com sucesso.");
                                setTimeout(function () {
                                        window.location.href = "/Contactos";
                                    }, 2500);
                            }
                            else {
                                this._showErrorMessage("Ocorreu um erro ao remover o contacto.");
                            }
                        }
                        else {
                            this.$.contact_datasource.generateRequest();
                            this._showMessage("O contacto foi atualizado com sucesso!");
                        }
                    } else {
                        if (e.detail.url.indexOf("Create") !== -1) {
                            this._showErrorMessage("Ocorreu um erro ao criar o contacto.");
                        }
                        else if (e.detail.url.indexOf("Delete") !== -1) {
                            this._showErrorMessage("Ocorreu um erro ao remover o contacto!");
                        }
                        else {
                            this._showErrorMessage("Ocorreu um erro ao atualizar o contacto.");
                        }
                    }
                },

                _updateContact: function () {
                    this.$.create_contact_request.url = "/Contactos/UpdateContact";
                    this.$.create_contact_request.body = JSON.stringify(this.contact);
                    this.$.create_contact_request.generateRequest();
                },

                _deleteContact: function () {
                    this.$.create_contact_request.url = "/Contactos/DeleteContact";
                    var ajax_request = this.$.create_contact_request;

                    var contactToDelete = this.contact;

                    bootbox.confirm({
                        message: "Tem a certeza que pretende remover o contacto " + this.$.ddno.value + "?",
                        buttons: {
                            confirm: {
                                label: 'Sim',
                                className: 'btn-success'
                            },
                            cancel: {
                                label: 'Não',
                                className: 'btn-danger'
                            }
                        },
                        callback: function (result) {
                            if (result) {
                                ajax_request.body = JSON.stringify(contactToDelete);
                                ajax_request.generateRequest();
                            }
                        }
                    });


                },

                _getClienteDados: function () {
                    debugger;
                    if (this.$.ddnoCliente.value != "") {
                        var cliente = this.CBClients.find(x => x.no_ == this.$.ddnoCliente.value);
                        if (cliente != null) {
                            this.$.ddclienteNome.value = cliente.name;
                            this.$.ddclienteNIF.value = cliente.vatRegistrationNo_;
                            this.$.ddclienteEndereco.value = cliente.address;
                            this.$.ddclienteCodigoPostal.value = cliente.postCode;
                            this.$.ddclienteCidade.value = cliente.city;
                            this.$.ddclienteRegiao.value = cliente.regionCode;
                            this.$.ddclienteTelefone.value = cliente.phoneNo;
                            this.$.ddclienteEmail.value = cliente.eMail;
                        }
                    }
                    else {
                        this.$.ddclienteNome.value = "";
                        this.$.ddclienteNIF.value = "";
                        this.$.ddclienteEndereco.value = "";
                        this.$.ddclienteCodigoPostal.value = "";
                        this.$.ddclienteCidade.value = "";
                        this.$.ddclienteRegiao.value = "";
                        this.$.ddclienteTelefone.value = "";
                        this.$.ddclienteEmail.value = "";
                    }

                },



                _goBack: function (e) {
                    window.history.back();
                },
            });
        });
    </script>
</dom-module>