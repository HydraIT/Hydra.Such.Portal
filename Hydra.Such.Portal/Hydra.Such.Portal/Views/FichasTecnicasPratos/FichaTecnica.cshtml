
@{
    ViewData["Title"] = "Ficha Técnica de Prato";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<link rel="import" href="/lib/paper-tabs-master/paper-tab.html" />
<link rel="import" href="/lib/paper-tabs-master/paper-tabs.html" />
<link rel="import" href="/lib/iron-pages-master/iron-pages.html" />
<link rel="import" href="/lib/iron-menu-behavior/iron-menubar-behavior.html" />
<link rel="import" href="/lib/such-textarea/such-textarea.html">
<link rel="import" href="/lib/paper-input/paper-input.html" />
<link rel="import" href="/lib/input-picker-pattern/input-picker-pattern.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-sorter.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-sort-behavior.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-filter.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-filter-behavior.html" />
<link rel="import" href="~/lib/vaadin-valo-theme/vaadin-checkbox.html">
<link rel="import" href="~/lib/vaadin-checkbox/vaadin-checkbox.html">
<link rel="import" href="~/lib/vaadin-valo-theme/vaadin-text-field.html">
<link rel="import" href="~/lib/vaadin-text-field/vaadin-text-field.html">
<link rel="import" href="~/lib/vaadin-valo-theme/vaadin-date-picker.html" />
<link rel="import" href="~/lib/vaadin-date-picker/vaadin-date-picker.html" />
<link rel="import" href="~/lib/vaadin-valo-theme/vaadin-combo-box.html" />
<link rel="import" href="/lib/vaadin-combo-box/vaadin-combo-box.html" />
<link rel="import" href="/lib/vaadin-combo-box/vaadin-combo-box-behavior.html" />
<link rel="import" href="~/lib/iron-form/iron-form.html" />
<link rel="import" href="~/lib/paper-button/paper-button.html" />
<link rel="import" href="~/lib/iron-flex-layout/iron-flex-layout.html" />
<link rel="import" href="~/lib/iron-flex-layout/iron-flex-layout-classes.html" />
<link rel="import" href="/lib/paper-toast-master/paper-toast.html" />
<link rel="import" href="~/elements/comboboxs/MovementTypeList.html" />
<link rel="import" href="~/elements/comboboxs/ProjectTypeList.html" />
<link rel="import" href="~/elements/comboboxs/ProjectList.html" />
<link rel="import" href="~/lib/iron-input/iron-input.html" />
<link rel="import" href="~/lib/vaadin-upload/vaadin-upload.html" />
<link rel="import" href="/lib/such-textarea/such-textarea.html">
<link rel="import" href="/lib/such-selectbox/such-selectbox.html">
<link rel="import" href="/lib/paper-dialog/paper-dialog.html" />
<link rel="import" href="/lib/paper-dialog-behavior/paper-dialog-behavior.html" />

<!--ACORDEÃO-->
<link rel="import" href="/lib/paper-collapse-item/paper-collapse-group.html">
<link rel="import" href="/lib/paper-collapse-item/paper-collapse-item.html">

<x-recordtechnical></x-recordtechnical>
<dom-module id="x-recordtechnical">
    <template>
        <link rel="stylesheet" href="/lib/bootstrap/dist/css/bootstrap.css" />
        <link rel="stylesheet" href="/lib/font-awesome-4.7.0/css/font-awesome.min.css" />
        <link rel="stylesheet" href="/css/main.css" />


        <iron-ajax url="/PopulateDropdowns/GetLocations" last-response="{{CBLocationsheader}}" auto method="post" handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/PopulateDropdowns/GetMeasureUnits" last-response="{{CBOMeasureUnitheader}}" auto method="post" handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/PopulateDropdowns/GetLocations" last-response="{{CBLocations}}" auto method="post" handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/PopulateDropdowns/GetMeasureUnits" last-response="{{CBOMeasureUnit}}" auto method="post" handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/PopulateDropdowns/GetLPlatesTechnicalFilesType" last-response="{{CBOType}}" auto method="post" handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/PopulateDropdowns/GetProducts" last-response="{{ProductCode}}" auto method="post" handle-as="json" content-type="application/json"></iron-ajax>


        <iron-ajax url="/PopulateDropdowns/GetCookingTechnique" last-response="{{CBOCookingTechnique}}" auto method="post" handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/PopulateDropdowns/GetClassificationFilesTechniques" last-response="{{CboClassificationFilesTechniques}}" auto method="post" handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/PopulateDropdowns/GetLinesRecTechnicPlatesType" last-response="{{CbotLinesRecTecPlatesType}}" auto method="post" handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/PopulateDropdowns/GetLinesRecordTechnicalOfPlatesCode" id="ajax_CboCode" last-response="{{CboCode}}" method="post" handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/PopulateDropdowns/GetAllAction" id="action_ajax" auto last-response="{{CboAction}}" method="post" handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/PopulateDropdowns/GetAllAction" id="actionGrid_ajax" auto last-response="{{CboActionGrid}}" method="post" handle-as="json" content-type="application/json"></iron-ajax>

        <iron-ajax url="/Nutricao/FichasTecnicasPratos/GetAllProceduresConfection" id="ajax_GridProcedConfec" last-response="{{GridProceduresConfection}}" method="post" handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/Nutricao/FichasTecnicasPratos/GetImageRecTecPlates" id="ajax_Image" last-response="{{dataImage}}" on-response="_ImageResponse" method="post" handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/Nutricao/FichasTecnicasPratos/GetAllRecTecPlatesBYPlate" id="ajax_GetAllRecTecPlat" last-response="{{getAllRecTecPlatResult}}" on-response="_GetRecTecPlatResponse" method="post" handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/Nutricao/FichasTecnicasPratos/CreateRecordTechnicalOfPlates" id="createRecTec_ajax" last-response="{{CreateResult}}" on-response="_CreateResponse" method="post" handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/Nutricao/FichasTecnicasPratos/UpdateRecordTechnicalOfPlates" id="UpdateRecTec_ajax" last-response="{{UpdateResult}}" on-response="_UpdateResponse" method="post" handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/Nutricao/FichasTecnicasPratos/GetAllLinesRecTechnicPlates" id="getallgrid_ajax" last-response="{{data}}" on-response="_GridResponse" method="post" handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/Nutricao/FichasTecnicasPratos/CreateLinesRecordTechnicalOfPlates" id="createRecTecLines_ajax" last-response="{{Createdate}}" on-response="_CreateLinesResponse" method="post" handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/Nutricao/FichasTecnicasPratos/UpdateLinesRecordTechnicalOfPlates" id="updateRecTecLines_ajax" last-response="{{updatedate}}" on-response="_UpdateLinesResponse" method="post" handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/Nutricao/FichasTecnicasPratos/SaveImage" id="getsaveImg_ajax" last-response="{{Uploaddate}}" on-response="_UploadResponse" method="post" handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/Nutricao/FichasTecnicasPratos/CreateConfection" id="createConf_ajax" last-response="{{createConf}}" on-response="_createConfResponse" method="post" handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/Nutricao/FichasTecnicasPratos/UpdateConfection" id="updateConf_ajax" last-response="{{updateConf}}" on-response="_updateConfResponse" method="post" handle-as="json" content-type="application/json"></iron-ajax>




        <style>
            vaadin-combo-box {
                margin-top: 0px !important;
                width: 100% !important;
            }

            vaadin-date-picker {
                margin-top: 0px !important;
                width: 100% !important;
            }

            vaadin-text-field {
                margin-top: 0px !important;
                width: 100%;
            }

            paper-button {
                margin-top: 10px;
            }

            .break_clear {
                margin-top: 15px;
                margin-right: 0px !important;
                margin-left: 0px !important;
            }

            .break_frm {
                margin-top: 15px;
            }

            .label_custom {
                color: var(--valo-contrast-60pct) !important;
                font-weight: 500 !important;
                font-size: var(--valo-font-size-s) !important;
                margin-left: calc(var(--valo-text-field-border-radius, var(--valo-border-radius)) / 4) !important;
                margin-bottom: var(--valo-space-xs) !important;
                transition: color 0.4s !important;
                line-height: 1 !important;
                font-family: var(--valo-font-family) !important;
            }

            datetime-picker {
                border-radius: var(--valo-text-field-border-radius, var(--valo-border-radius));
                background-color: var(--valo-contrast-5pct);
                color: var(--valo-contrast-60pct) !important;
                width: 100%;
            }

            .marginSpace {
                margin: 0px !important;
            }

            textarea {
                background-color: #f5f5f5;
                border: none;
                border-radius: 3px 4px;
                align-self: baseline;
                font-weight: 500;
            }

                textarea:hover {
                    background-color: #eeeeee;
                }

                textarea:focus {
                    background-color: white;
                    border: none;
                    outline: 1px solid #eeeeee;
                    border-radius: 3px 4px;
                }

            datetime-picker {
                --datetime-selected-background: #71BCC1 !important;
                --datetime-background: #1f3133;
                --datetime-color: #eeeeee;
            }

            .panel-body {
                padding-top: 0px !important;
            }

            /*ACORDEÃO*/
            paper-collapse-item {
                --paper-item: {
                    padding: 0 0;
                };
                --paper-collapse-item-header: {
                    padding: 0 15px;
                    color: #333;
                    background-color: #f5f5f5;
                    border-bottom: solid #ddd 1px;
                    border-top-left-radius: 3px;
                    border-top-right-radius: 3px;
                };
            }
        </style>

        <div class="row break_frm">
            <div class="col-md-12 col-md-12 col-lg-12">
                <div class="panel panel-default">
                    <div class="panel-heading">Cabeçalho</div>
                    <div class="panel-body">
                        <paper-tabs fit-container no-slide autoselect autoselect-delay="0" selected="{{selected}}">
                            <paper-tab>Geral</paper-tab>
                            <paper-tab>Classificação</paper-tab>
                            <paper-tab>Observações</paper-tab>
                            <paper-tab hidden="{{ _NotCreateOnly }}">Confeção</paper-tab>
                            <paper-tab>Alergénios</paper-tab>
                            <paper-tab hidden="{{ _NotCreateOnly }}">Imagem</paper-tab>
                        </paper-tabs>
                        <iron-pages selected="{{selected}}">
                            <!--Geral-->
                            <div>
                                <div class="row break_clear">
                                    <div class="col-lg-3">
                                        <vaadin-text-field value="{{RecTecPlatValue}}" maxlength="20" id="plateNoid" name="plateNoName" label="Nº" disabled> </vaadin-text-field>
                                    </div>
                                    <div class="col-lg-3">
                                        <vaadin-text-field value="{{recTecNameValue}}" maxlength="20" id="recordTechnicalNameid" name="recTecName" label="Nome Ficha Técnica"> </vaadin-text-field>
                                    </div>
                                    <div class="col-lg-3">
                                        <such-selectbox id="piCodeMeasurementUnit" value="{{CodMeasureUnitValue}}" label="Cód. Unidade Medida"
                                                        items="[[CBOMeasureUnitheader]]"
                                                        text-path="value"
                                                        value-path="id"
                                                        fields='[{"field":"id", "name":"Código"}, {"field":"value", "name":"Descrição"}]'>
                                        </such-selectbox>
                                    </div>
                                    <div class="col-lg-3">
                                        <such-selectbox id="_CBLocalizations" value="{{LocalizationsValue}}" label="Cod. Localização"
                                                        items="[[CBLocationsheader]]"
                                                        text-path="value"
                                                        value-path="id"
                                                        fields='[{"field":"id", "name":"Código"}, {"field":"value", "name":"Descrição"}]'>
                                        </such-selectbox>
                                    </div>
                                </div>
                                <div class="row break_clear">
                                    <div class="col-lg-3">
                                        <vaadin-text-field value="{{TPreparationValue}}" on-value-changed="_ConvertDecimals" maxlength="20" id="TimePreparationid" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" name="TimePreparationName" label="Tempo Preparação">  <div slot="suffix">min.</div></vaadin-text-field>
                                    </div>
                                    <div class="col-lg-3">
                                        <such-selectbox id="_CookingTechnique" value="{{CookingTechniqueValue}}" label="Técnica Culinária"
                                                        items="[[CBOCookingTechnique]]"
                                                        text-path="value"
                                                        value-path="id"
                                                        fields='[{"field":"id", "name":"Código"}, {"field":"value", "name":"Descrição"}]'>
                                        </such-selectbox>
                                    </div>
                                    <div class="col-lg-3">
                                        <vaadin-text-field value="{{GroupValue}}" maxlength="20" id="Groupid" name="GroupName" label="Grupo"> </vaadin-text-field>
                                    </div>
                                    <div class="col-lg-3">
                                        <vaadin-text-field value="{{EpochValue}}" maxlength="20" id="Epochid" name="EpochName" label="Época"> </vaadin-text-field>
                                    </div>
                                </div>
                                <div class="row break_clear">
                                    <div class="col-lg-3">
                                        <vaadin-text-field value="{{DosesNoValue}}" maxlength="20" on-value-changed="_ConvertDecimals" id="DosesNoId" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" name="DosesNoName" label="Número de doses"> </vaadin-text-field>
                                    </div>
                                    <div class="col-lg-3">
                                        <vaadin-text-field value="{{PreparTempValue}}" maxlength="20" on-value-changed="_ConvertDecimals" id="PreparationTemperatureId" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" name="PreparationTemperatureName" label="Temperatura Preparação"> <div slot="suffix">°C</div> </vaadin-text-field>
                                    </div>
                                    <div class="col-lg-3">
                                        <vaadin-text-field value="{{FinalTempConfectValue}}" maxlength="20" on-value-changed="_ConvertDecimals" id="FinalTemperatureConfectionId" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" name="FinalTemperatureConfectionName" label="Temperatura final Confeção"><div slot="suffix">°C</div> </vaadin-text-field>
                                    </div>
                                    <div class="col-lg-3">
                                        <vaadin-text-field value="{{ServeTempValue}}" maxlength="20" on-value-changed="_ConvertDecimals" id="ServeTemperatureId" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" name="ServeTemperatureName" label="Temperatura a Servir"><div slot="suffix">°C</div> </vaadin-text-field>
                                    </div>
                                </div>
                                <div class="row break_clear">
                                    <div class="col-lg-3">
                                        <vaadin-text-field value="{{VitaminA}}" maxlength="20" on-value-changed="_ConvertDecimals" id="VitaminAId" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" name="VitaminAName" label="Vitamina A"></vaadin-text-field>
                                    </div>
                                    <div class="col-lg-3">
                                        <vaadin-text-field value="{{VitaminD}}" maxlength="20" on-value-changed="_ConvertDecimals" id="VitaminDId" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" name="VitaminDName" label="Vitamina D"></vaadin-text-field>
                                    </div>
                                    <div class="col-lg-3">
                                        <vaadin-text-field value="{{Cholesterol}}" maxlength="20" on-value-changed="_ConvertDecimals" id="CholesterolId" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" name="CholesterolName" label="Colesterol"></vaadin-text-field>
                                    </div>
                                    <div class="col-lg-3">
                                        <vaadin-text-field value="{{Sodium}}" maxlength="20" on-value-changed="_ConvertDecimals" id="SodiumId" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" name="SodiumName" label="Sódio (Na)"></vaadin-text-field>
                                    </div>
                                </div>
                                <div class="row break_clear">
                                    <div class="col-lg-3">
                                        <vaadin-text-field value="{{Potassium}}" maxlength="20" on-value-changed="_ConvertDecimals" id="PotassiumId" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" name="PotassiumName" label="Potássio (K)"></vaadin-text-field>
                                    </div>
                                    <div class="col-lg-3">
                                        <vaadin-text-field value="{{Calcium}}" maxlength="20" on-value-changed="_ConvertDecimals" id="CalciumId" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" name="CalciumName" label="Cálcio (Ca)"></vaadin-text-field>
                                    </div>
                                    <div class="col-lg-3">
                                        <vaadin-text-field value="{{Iron}}" maxlength="20" on-value-changed="_ConvertDecimals" id="IronId" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" name="IronName" label="Ferro (Fe)"></vaadin-text-field>
                                    </div>
                                    <div class="col-lg-3">
                                        <vaadin-text-field value="{{Proteins}}" maxlength="20" on-value-changed="_ConvertDecimals" id="ProteinsId" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" name="ProteinsName" label="Proteínas"></vaadin-text-field>
                                    </div>
                                </div>
                                <div class="row break_clear">
                                    <div class="col-lg-3">
                                        <vaadin-text-field value="{{Carbohydrates}}" maxlength="20" on-value-changed="_AllLinesCalculation" id="CarbohydratesId" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" name="CarbohydratesName" label="Glícidos"></vaadin-text-field>
                                    </div>
                                    <div class="col-lg-3">
                                        <vaadin-text-field value="{{Lipids}}" maxlength="20" on-value-changed="_ConvertDecimals" id="LipidsId" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" name="LipidsName" label="Lípidos"></vaadin-text-field>
                                    </div>
                                    <div class="col-lg-3">
                                        <vaadin-text-field value="{{FoodFiber}}" maxlength="20" on-value-changed="_ConvertDecimals" id="FoodFiberId" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" name="FoodFiberName" label="Fibra Alimentar"></vaadin-text-field>
                                    </div>
                                    <div class="col-lg-3">
                                        <vaadin-text-field value="{{PriceCostExpected}}" maxlength="20" on-value-changed="_ConvertDecimals" id="PriceCostExpectedId" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" name="PriceCostExpectedName" label="Preço Custo Esperado"><div slot="suffix">€</div> </vaadin-text-field>
                                    </div>
                                </div>
                                <div class="row break_clear">
                                    <div class="col-lg-3">
                                        <vaadin-text-field value="{{PriceCostCurrent}}" maxlength="20" on-value-changed="_ConvertDecimals" id="PriceCostCurrentId" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" name="PriceCostCurrentName" label="Preço Custo Atual"><div slot="suffix">€</div></vaadin-text-field>
                                    </div>
                                    <div class="col-lg-3">
                                        <vaadin-text-field value="{{Energeticvalue}}" maxlength="20" on-value-changed="_ConvertDecimals" id="EnergeticvalueId" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" name="EnergeticvalueName" label="Valor Energético (Kcal)"></vaadin-text-field>
                                    </div>
                                    <div class="col-lg-3">
                                        <vaadin-text-field value="{{Energeticvalue2}}" maxlength="20" on-value-changed="_ConvertDecimals" id="Energeticvalue2Id" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" name="Energeticvalue2Name" label="Valor Energético (Kj)"></vaadin-text-field>
                                    </div>
                                </div>
                            </div>
                            <!--Classificação-->
                            <div>
                                <div class="row break_clear">
                                    <div class="col-lg-3">
                                        <such-selectbox id="_ClassFilesTec1" value="{{ClassFt1Value}}" label="Class.FT.1"
                                                        items="[[CboClassificationFilesTechniques]]"
                                                        text-path="value"
                                                        value-path="id"
                                                        fields='[{"field":"id", "name":"Código"}, {"field":"value", "name":"Descrição"}]'>
                                        </such-selectbox>
                                    </div>
                                    <div class="col-lg-3">
                                        <such-selectbox id="_ClassFilesTec2" value="{{ClassFt2Value}}" label="Class.FT.2"
                                                        items="[[CboClassificationFilesTechniques]]"
                                                        text-path="value"
                                                        value-path="id"
                                                        fields='[{"field":"id", "name":"Código"}, {"field":"value", "name":"Descrição"}]'>
                                        </such-selectbox>
                                    </div>
                                    <div class="col-lg-3">
                                        <vaadin-text-field value="{{ClassFt3Value}}" maxlength="20" id="ClassFt3id" name="ClassFt3Name" label="Class.FT.3"> </vaadin-text-field>
                                    </div>
                                    <div class="col-lg-3">
                                        <vaadin-text-field value="{{ClassFt4Value}}" maxlength="20" id="ClassFt4id" name="ClassFt4Name" label="Class.FT.4"> </vaadin-text-field>
                                    </div>
                                </div>
                                <div class="row break_clear">
                                    <div class="col-lg-3">
                                        <vaadin-text-field value="{{ClassFt5Value}}" maxlength="20" id="ClassFt5id" name="ClassFt5Name" label="Class.FT.5"> </vaadin-text-field>
                                    </div>
                                    <div class="col-lg-3">
                                        <vaadin-text-field value="{{ClassFt6Value}}" maxlength="20" id="ClassFt6id" name="ClassFt6Name" label="Class.FT.6"> </vaadin-text-field>
                                    </div>
                                    <div class="col-lg-3">
                                        <vaadin-text-field value="{{ClassFt7Value}}" maxlength="20" id="ClassFt7id" name="ClassFt7Name" label="Class.FT.7"> </vaadin-text-field>
                                    </div>
                                </div>
                            </div>
                            <!--Observações-->
                            <div>
                                <div class="row break_clear">
                                    <div class="col-lg-12">
                                        <such-textarea value="{{NotesValue}}" rows="6" id="Notes" name="Notes" label="Observações"> </such-textarea>
                                    </div>
                                </div>
                            </div>
                            <!--Confeção-->
                            <div hidden="{{ _NotCreateOnly }}">
                                <paper-collapse-group>
                                    <paper-collapse-item class="panel-heading" header="Criar" closed>
                                        <div class="row break_clear" hidden="{{ _NotCreateOnly }}">
                                            <div class="col-lg-4">
                                                <such-selectbox id="_CboAction" value="" label="Ação"
                                                                items="[[CboAction]]"
                                                                text-path="value"
                                                                value-path="id"
                                                                fields='[{"field":"id", "name":"Código"}, {"field":"value", "name":"Descrição"}]'>
                                                </such-selectbox>
                                            </div>
                                            <div class="col-lg-4">
                                                <vaadin-text-field value="{{decValue}}" maxlength="20" id="descconfid" name="decconfName" label="Descrição"> </vaadin-text-field>
                                            </div>
                                            <div class="col-lg-4">
                                                <vaadin-text-field id="OrderNoid" name="OrderName" pattern="^[0-9]+$" label="No. Ordem" class="alignRight" value=""></vaadin-text-field>
                                            </div>
                                            <div class="col-lg-12  " hidden="{{ !_permissionsVal.create }}">
                                                <paper-button class="btnSave" on-tap="_addConfection"><i class="fa fa-plus" aria-hidden="true"></i>&nbsp; Criar</paper-button>
                                            </div>
                                        </div>
                                    </paper-collapse-item>
                                </paper-collapse-group>

                                <div class="row break_clear">
                                    <div class="col-lg-12">
                                        <vaadin-grid id="gridConfection_request" aria-label="ProfileModelsTabel" items="[[GridProceduresConfection]]" class="grid" active-item="{{_SelectedConfectionLine}}">
                                            <vaadin-grid-column width="160px" resizable hidden>
                                                <template class="header">
                                                    <vaadin-grid-sorter path="TechnicalSheetNo">No. Ficha Técnica </vaadin-grid-sorter>
                                                    <vaadin-grid-filter path="TechnicalSheetNo" />
                                                </template>
                                                <template>
                                                    {{item.TechnicalSheetNo}}
                                                </template>
                                            </vaadin-grid-column>
                                            <vaadin-grid-column width="200px" resizable>
                                                <template class="header">
                                                    <vaadin-grid-sorter path="actionNo">Ação</vaadin-grid-sorter>
                                                    <vaadin-grid-filter path="actionNo" />
                                                </template>
                                                <template>
                                                    <template is="dom-if" if="{{ item.selected }}">
                                                        <vaadin-combo-box items="[[CboActionGrid]]" id="CboActionGridid" item-value-path="id" item-label-path="value" value="{{item.actionNo}}">
                                                            <template>
                                                                <table width="200px">
                                                                    <tr>
                                                                        <td width="40%">[[item.id]]</td>
                                                                        <td width="60%"> <b>[[item.value]]</b></td>
                                                                    </tr>
                                                                </table>
                                                            </template>
                                                        </vaadin-combo-box>
                                                    </template>
                                                    <template is="dom-if" if="{{ !item.selected }}">
                                                        [[_parseActionCode(item.actionNo)]]
                                                    </template>
                                                </template>
                                            </vaadin-grid-column>
                                            <vaadin-grid-column width="200px" resizable>
                                                <template class="header">
                                                    <vaadin-grid-sorter path="description">Descrição</vaadin-grid-sorter>
                                                    <vaadin-grid-filter path="description" />
                                                </template>
                                                <template>
                                                    <template is="dom-if" if="{{ item.selected }}">
                                                        <vaadin-text-field value="{{item.description}}" maxlength="20" id="Griddescconfid" name="DescriptionName" disabled="{{ !_permissionsVal.update }}"> </vaadin-text-field>
                                                    </template>
                                                    <template is="dom-if" if="{{ !item.selected }}">
                                                        {{item.description}}
                                                    </template>
                                                </template>
                                            </vaadin-grid-column>
                                            <vaadin-grid-column width="200px" resizable>
                                                <template class="header">
                                                    <vaadin-grid-sorter path="orderNo">No. Ordem</vaadin-grid-sorter>
                                                    <vaadin-grid-filter path="orderNo" />
                                                </template>
                                                <template>
                                                    <template is="dom-if" if="{{ item.selected }}">
                                                        <vaadin-text-field id="GridOrderNoid" name="OrderName" pattern="^[0-9]+$" class="alignRight" value="{{item.orderNo}}"></vaadin-text-field>
                                                    </template>
                                                    <template is="dom-if" if="{{ !item.selected }}">
                                                        {{item.orderNo}}
                                                    </template>
                                                </template>
                                            </vaadin-grid-column>
                                            <vaadin-grid-column with="100px" hidden="{{ !_permissionsVal.delete }}">
                                                <template class="header">
                                                </template>
                                                <template>
                                                    <center>
                                                        <paper-button class="btnRemove" raised on-tap="_deleteConf">Eliminar</paper-button>
                                                    </center>
                                                </template>
                                            </vaadin-grid-column>
                                        </vaadin-grid>
                                    </div>
                                </div>
                                <div class="row break_clear">
                                    <div class="col-lg-12" hidden="{{ !_permissionsVal.update }}">
                                        <paper-button raised id="btnAddNew" class="btnEdit" on-tap="_updateconfLines"><i class="fa fa-floppy-o" aria-hidden="true"></i>&nbsp; Guardar</paper-button>
                                        <paper-button raised id="btnCancel" class="btnRemove" on-tap="_confcancel"><i class="fa fa-undo" aria-hidden="true"></i>&nbsp; Cancelar</paper-button>
                                    </div>
                                </div>
                            </div>
                            <!--Alergénios-->
                            <div>
                                <div>
                                    <div class="row break_clear">
                                        <div class="col-lg-3 alignPoga">
                                            <vaadin-checkbox checked="{{WithGlutenChecked}}" id="WithGlutenId">Cereais que contêm glúten</vaadin-checkbox>
                                        </div>
                                        <div class="col-lg-3 alignPoga">
                                            <vaadin-checkbox checked="{{BasedCrustaceansChecked}}" id="BasedCrustaceansId">Prod. à base de crustáceos</vaadin-checkbox>
                                        </div>
                                        <div class="col-lg-3 alignPoga">
                                            <vaadin-checkbox checked="{{BasedEggsChecked}}" id="BasedEggsId">Prod. à base de ovos</vaadin-checkbox>
                                        </div>
                                        <div class="col-lg-3 alignPoga">
                                            <vaadin-checkbox checked="{{BasedFishChecked}}" id="BasedFishId">Prod. à base de peixes</vaadin-checkbox>
                                        </div>
                                    </div>
                                    <div class="row break_clear">
                                        <div class="col-lg-3 alignPoga">
                                            <vaadin-checkbox checked="{{BasedPeanutsChecked}}" id="BasedPeanutsId">Prod. à base de amendoins</vaadin-checkbox>
                                        </div>
                                        <div class="col-lg-3 alignPoga">
                                            <vaadin-checkbox checked="{{BasedSoyChecked}}" id="BasedSoyId">Prod. à base de soja</vaadin-checkbox>
                                        </div>
                                        <div class="col-lg-3 alignPoga">
                                            <vaadin-checkbox checked="{{BasedMilkChecked}}" id="BasedMilkId">Prod. à base de leite</vaadin-checkbox>
                                        </div>
                                        <div class="col-lg-3 alignPoga">
                                            <vaadin-checkbox checked="{{BasedFruitShardShellChecked}}" id="BasedFruitShardShellId">Prod. à base de frutos de casca rija</vaadin-checkbox>
                                        </div>
                                    </div>
                                    <div class="row break_clear">
                                        <div class="col-lg-3 alignPoga">
                                            <vaadin-checkbox checked="{{BasedCeleryChecked}}" id="BasedCeleryId">Prod. à base de aipo</vaadin-checkbox>
                                        </div>
                                        <div class="col-lg-3 alignPoga">
                                            <vaadin-checkbox checked="{{BasedMustardChecked}}" id="BasedMustardId">Prod. à base de mostarda</vaadin-checkbox>
                                        </div>
                                        <div class="col-lg-3 alignPoga">
                                            <vaadin-checkbox checked="{{BasedSesameSeedsChecked}}" id="BasedSesameSeedsId">Prod. à base de sementes de sésamo</vaadin-checkbox>
                                        </div>
                                        <div class="col-lg-3 alignPoga">
                                            <vaadin-checkbox checked="{{BasedLupineChecked}}" id="BasedLupineId">Prod. à base de tremoço</vaadin-checkbox>
                                        </div>
                                    </div>
                                    <div class="row break_clear">
                                        <div class="col-lg-3 alignPoga">
                                            <vaadin-checkbox checked="{{BasedMolluscsChecked}}" id="BasedMolluscsId">Prod. à base de moluscos</vaadin-checkbox>
                                        </div>
                                        <div class="col-lg-5 alignPoga">
                                            <vaadin-checkbox checked="{{BasedSulfSulphChecked}}" id="BasedSulfurDioxideAndSulphitesId">Dióxido de enxofre e sulfitos em concentração superior a 10 mg/kg ou 10 mg/l</vaadin-checkbox>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!--Imagem-->
                            <div hidden="{{ _NotCreateOnly }}">
                                <div class="row">
                                    <div class="col-md-12 col-lg-12">
                                        <img class="roundrect" id="my_image" src="" alt="" width="300" height="200">
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12 col-lg-12" hidden="{{ !_permissionsVal.update }}">
                                        <form method="post" enctype="multipart/form-data">
                                            <input type="file" id="files" name="files" />
                                            <button class="btn btn-primary start" type="button" id="upload" value="Upload Selected Files" on-tap="_Upload">
                                                <i class="glyphicon glyphicon-upload"></i>
                                                <span>Start upload</span>
                                            </button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </iron-pages>
                        <div class="row  break_clear" hidden="{{ !_NotCreateOnly }}">
                            <div class="col-lg-2 alignPoga" hidden="{{ !_permissionsVal.create }}">
                                <paper-button class="btnSave" on-tap="_add"><i class="fa fa-plus" aria-hidden="true"></i>&nbsp; Criar</paper-button>
                            </div>
                        </div>
                        <div class="row break_clear" hidden="{{ _NotCreateOnly }}">
                            <div class="col-lg-12" hidden="{{ !_permissionsVal.update }}">
                                <paper-button raised id="btnLocalMarketValidation" style="width: 250px !important;" on-tap="_update" hidden="{{ !_permissionsVal.update }}"><i class="fa fa-floppy-o" aria-hidden="true"></i>&nbsp; Guardar Cabeçalho</paper-button>
                            </div>
                        </div>
                    </div>
                    <paper-collapse-group style="display: {{ _NotCreateOnly }};" hidden="{{ _NotCreateOnly }}">
                        <paper-collapse-item class="panel-heading" header="Linhas" closed>
                            <div class="row break_clear">
                                <div class="col-lg-3">
                                    <such-selectbox id="Typeid" value="{{Type}}" label="Tipo" on-value-changed="_TypeChaged"
                                                    items="[[CBOType]]"
                                                    text-path="value"
                                                    value-path="id"
                                                    fields='[{"field":"id", "name":"Código"}, {"field":"value", "name":"Descrição"}]'>
                                    </such-selectbox>
                                </div>
                                <div class="col-lg-3" hidden="{{ _NotShowProduct }}">
                                    <such-selectbox id="Codeid" value="{{Code}}" label="Codigo"
                                                    items="[[ProductCode]]"
                                                    text-path="code"
                                                    value-path="code"
                                                    fields='[{"field":"code", "name":"Código"}, {"field":"name", "name":"Descrição"}]'>
                                    </such-selectbox>
                                </div>
                                <div class="col-lg-3" hidden="{{ _NotShowPlate }}">
                                    <vaadin-text-field value="{{RecTecPlatValue}}" maxlength="20" id="RecTecPlatid" name="RecTecPlatName" label="Codigo" disabled="true"> </vaadin-text-field>
                                </div>
                                <div class="col-lg-3">
                                    <vaadin-text-field value="{{LineDescription}}" maxlength="20" id="Descriptionid" name="DescriptionName" label="Descrição"> </vaadin-text-field>
                                </div>
                                <div class="col-lg-3">
                                    <vaadin-text-field value="{{LineQuantity}}" maxlength="20" on-value-changed="_ConvertDecimals" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="Quantityid" name="QuantityName" label="Quantidade"> </vaadin-text-field>
                                </div>
                            </div>
                            <div class="row break_clear">

                                <div class="col-lg-3">
                                    <such-selectbox id="UnitMeasureCodeid" value="{{LineMeasureUnit}}" label="Cód. Unidade Medida"
                                                    items="[[CBOMeasureUnit]]"
                                                    text-path="value"
                                                    value-path="id"
                                                    fields='[{"field":"id", "name":"Código"}, {"field":"value", "name":"Descrição"}]'>
                                    </such-selectbox>
                                </div>
                                <div class="col-lg-3">
                                    <vaadin-text-field value="{{LineQuantityOfProduction}}" maxlength="20" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="QuantityOfProductionid" name="QuantityOfProductionName" label="Quantidade de Produção" on-value-changed="_AllLinesCalculation"> </vaadin-text-field>
                                </div>
                                <div class="col-lg-3">
                                    <vaadin-text-field value="{{LineEnergetic}}" maxlength="20" on-value-changed="_ConvertDecimals" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="EnergeticValueid" name="EnergeticValueName" label="Valor Energético"> </vaadin-text-field>
                                </div>
                                <div class="col-lg-3">
                                    <vaadin-text-field value="{{LineProteins}}" maxlength="20" on-value-changed="_AllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="Proteinsid" name="ProteinsName" label="Proteínas"> </vaadin-text-field>
                                </div>
                            </div>
                            <div class="row break_clear">

                                <div class="col-lg-3">
                                    <vaadin-text-field value="{{LineHydratesOfCarbont}}" maxlength="20" on-value-changed="_ConvertDecimals" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="HydratesOfCarbontid" name="HydratesOfCarbontName" label="Glícidos"> </vaadin-text-field>
                                </div>
                                <div class="col-lg-3">
                                    <vaadin-text-field value="{{LineLipids}}" maxlength="20" on-value-changed="_AllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="Lipidsid" name="LipidsName" label="Lípidos"> </vaadin-text-field>
                                </div>
                                <div class="col-lg-3">
                                    <vaadin-text-field value="{{LineFibers}}" maxlength="20" on-value-changed="_AllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="Fibersid" name="FibersName" label="Fibras"> </vaadin-text-field>
                                </div>
                                <div class="col-lg-3">
                                    <vaadin-text-field value="{{LineExpectedCostPrice}}" maxlength="20" on-value-changed="_AllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="ExpectedCostPriceid" name="ExpectedCostPriceName" label="Preço Custo Esperado">
                                        <div slot="suffix">€</div>
                                    </vaadin-text-field>
                                </div>
                            </div>
                            <div class="row break_clear">

                                <div class="col-lg-3">
                                    <vaadin-text-field value="{{LineCurrentCostPrice}}" maxlength="20" on-value-changed="_AllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="CurrentCostPriceid" name="CurrentCostPriceName" label="Preço Custo Atual">
                                        <div slot="suffix">€</div>
                                    </vaadin-text-field>
                                </div>
                                <div class="col-lg-3">
                                    <vaadin-text-field value="{{LineTimeExpectedCostPrice}}" maxlength="20" on-value-changed="_AllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="TimeExpectedCostPriceid" name="TimeExpectedCostPriceName" label="TPreço Custo Esperado" disabled> </vaadin-text-field>
                                </div>
                                <div class="col-lg-3">
                                    <vaadin-text-field value="{{LineTimeCurrentCostPrice}}" maxlength="20" on-value-changed="_AllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="TimeCurrentCostPriceid" name="TimeCurrentCostPriceName" label="TPreço Custo Atual" disabled> </vaadin-text-field>
                                </div>
                                <div class="col-lg-3">
                                    <such-selectbox id="LineLocalizationCodeid" value="{{LineLocalizationCode}}" label="Cod. Localização"
                                                    items="[[CBLocations]]"
                                                    text-path="value"
                                                    value-path="id"
                                                    fields='[{"field":"id", "name":"Código"}, {"field":"value", "name":"Descrição"}]'>
                                    </such-selectbox>
                                </div>
                            </div>
                            <div class="row break_clear">

                                <div class="col-lg-3">
                                    <vaadin-text-field value="{{LineProteinsByQuantity}}" disabled maxlength="20" on-value-changed="_AllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="ProteinsByQuantityid" name="ProteinsByQuantityName" label="Proteínas/Kg"> </vaadin-text-field>
                                </div>

                                <div class="col-lg-3">
                                    <vaadin-text-field value="{{LineGlicansByQuantity}}" disabled maxlength="20" on-value-changed="_AllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="GlicansByQuantityid" name="GlicansByQuantityName" label="Glícidos/Kg"> </vaadin-text-field>
                                </div>
                                <div class="col-lg-3">
                                    <vaadin-text-field value="{{LineLipidsByQuantity}}" disabled maxlength="20" on-value-changed="_AllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="LipidsByQuantityid" name="LipidsByQuantityName" label="Lípidos/Kg"> </vaadin-text-field>
                                </div>
                                <div class="col-lg-3">
                                    <vaadin-text-field value="{{LineFibersByQuantity}}" disabled maxlength="20" on-value-changed="_AllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="FibersByQuantityid" name="FibersByQuantityName" label="Fibras/Kg"> </vaadin-text-field>
                                </div>
                            </div>
                            <div class="row break_clear">

                                <div class="col-lg-3">
                                    <vaadin-text-field value="{{LineEnergeticValue2}}" disabled maxlength="20" on-value-changed="_AllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="EnergeticValue2id" name="EnergeticValue2Name" label="Valor Energético 1"> </vaadin-text-field>
                                </div>
                                <div class="col-lg-3">
                                    <vaadin-text-field value="{{LineVitaminA}}" maxlength="20" on-value-changed="_AllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="VitaminAid" name="VitaminAName" label="Vitamina A"> </vaadin-text-field>
                                </div>
                                <div class="col-lg-3">
                                    <vaadin-text-field value="{{LineVitaminD}}" maxlength="20" on-value-changed="_AllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="VitaminDid" name="VitaminDName" label="Vitamina D"> </vaadin-text-field>
                                </div>
                                <div class="col-lg-3">
                                    <vaadin-text-field value="{{LineCholesterol}}" maxlength="20" on-value-changed="_AllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="Cholesterolid" name="CholesterolName" label="Colesterol"> </vaadin-text-field>
                                </div>
                            </div>
                            <div class="row break_clear">

                                <div class="col-lg-3">
                                    <vaadin-text-field value="{{LineSodium}}" maxlength="20" on-value-changed="_AllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="Sodiumid" name="SodiumName" label="Sódio"> </vaadin-text-field>
                                </div>
                                <div class="col-lg-3">
                                    <vaadin-text-field value="{{LinePotassium}}" maxlength="20" on-value-changed="_AllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="Potassiumid" name="PotassiumName" label="Potássio"> </vaadin-text-field>
                                </div>
                                <div class="col-lg-3">
                                    <vaadin-text-field value="{{LineCalcium}}" maxlength="20" on-value-changed="_AllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="Calciumid" name="CalciumName" label="Cálcio"> </vaadin-text-field>
                                </div>
                                <div class="col-lg-3">
                                    <vaadin-text-field value="{{LineIron}}" maxlength="20" on-value-changed="_AllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="Ironid" name="IronName" label="Ferro"> </vaadin-text-field>
                                </div>
                            </div>
                            <div class="row break_clear">

                                <div class="col-lg-3">
                                    <vaadin-text-field value="{{LineEdivel}}" maxlength="20" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="Edivelid" name="EdivelName" label="Edivel" on-value-changed="_AllLinesCalculation"> </vaadin-text-field>
                                </div>
                                <div class="col-lg-3">
                                    <vaadin-text-field value="{{LineVitaminAByQuantity}}" disabled maxlength="20" on-value-changed="_AllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="VitaminAByQuantityid" name="VitaminAByQuantityName" label="Vitamina A/Kg"> </vaadin-text-field>
                                </div>
                                <div class="col-lg-3">
                                    <vaadin-text-field value="{{LineVitaminDByQuantity}}" disabled maxlength="20" on-value-changed="_AllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="VitaminDByQuantityid" name="VitaminDByQuantityName" label="Vitamina D/Kg"> </vaadin-text-field>
                                </div>
                                <div class="col-lg-3">
                                    <vaadin-text-field value="{{LineCholesterolByQuantity}}" disabled maxlength="20" on-value-changed="_AllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="CholesterolByQuantityid" name="CholesterolByQuantityName" label="Colesterol/Kg"> </vaadin-text-field>
                                </div>
                            </div>
                            <div class="row break_clear">

                                <div class="col-lg-3">
                                    <vaadin-text-field value="{{LineSodiumByQuantity}}" disabled maxlength="20" on-value-changed="_AllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="SodiumByQuantityid" name="SodiumByQuantityName" label="Sódio/Kg"> </vaadin-text-field>
                                </div>
                                <div class="col-lg-3">
                                    <vaadin-text-field value="{{LinePotassiumByQuantity}}" disabled maxlength="20" on-value-changed="_AllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="PotassiumByQuantityid" name="PotassiumByQuantityName" label="Potássio/Kg"> </vaadin-text-field>
                                </div>
                                <div class="col-lg-3">
                                    <vaadin-text-field value="{{LineIronByQuantity}}" disabled maxlength="20" on-value-changed="_AllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="IronByQuantityid" name="IronByQuantityName" label="Ferro/Kg"> </vaadin-text-field>
                                </div>
                                <div class="col-lg-3">
                                    <vaadin-text-field value="{{LineCalciumByQuantity}}" disabled maxlength="20" on-value-changed="_AllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="CalciumByQuantityid" name="CalciumByQuantityName" label="Cálcio/Kg"> </vaadin-text-field>
                                </div>
                            </div>
                            <div class="row break_clear">

                                <div class="col-lg-3">
                                    <vaadin-text-field value="{{LineSaturatedFattyAcids}}" maxlength="20" on-value-changed="_ConvertDecimals" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="SaturatedFattyAcidsid" name="SaturatedFattyAcidsName" label="Ácidos Gordos Saturados"> </vaadin-text-field>
                                </div>
                                <div class="col-lg-3">
                                    <vaadin-text-field value="{{LineSugarcane}}" maxlength="20" on-value-changed="_ConvertDecimals" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="Sugarcaneid" name="TSugarcaneName" label="Açucares"> </vaadin-text-field>
                                </div>
                                <div class="col-lg-3">
                                    <vaadin-text-field value="{{Linesalt}}" maxlength="20" on-value-changed="_ConvertDecimals" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="saltid" name="saltName" label="Sal"> </vaadin-text-field>
                                </div>
                                <div class="col-lg-3">
                                    <vaadin-text-field value="{{LineQuantityPlates}}" maxlength="20" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="QuantityPlatesid" name="QuantityPlatesName" label="Quantidade Prato" on-value-changed="_AllLinesCalculation" disabled> </vaadin-text-field>
                                </div>
                            </div>
                            <div class="row break_clear">
                                <div class="col-lg-12">
                                    <such-textarea rows="5" value="{{LinePreparation}}" id="Preparationid" name="PreparationName" label="Preparação"> </such-textarea>
                                </div>
                            </div>
                            <div class="row break_clear">
                                <div class="col-lg-2 alignPoga" hidden="{{ !_permissionsVal.create }}">
                                    <paper-button class="btnSave" on-tap="_addlines"><i class="fa fa-plus" aria-hidden="true"></i>&nbsp; Criar</paper-button>
                                </div>
                            </div><br />
                        </paper-collapse-item>
                    </paper-collapse-group>
                    <div class="row break_clear" hidden="{{ _NotCreateOnly }}">
                        <div class="col-lg-12">
                            <vaadin-grid id="GridRecTecOfPlatesLines" aria-label="ProfileModelsTabel" items="[[data]]" class="grid" active-item="{{_SelectedLine}}">
                                <vaadin-grid-column width="160px" resizable>
                                    <template class="header">
                                        <vaadin-grid-sorter path="type">Tipo</vaadin-grid-sorter>
                                        <vaadin-grid-filter path="type" />
                                    </template>
                                    <template>
                                        <template is="dom-if" if="{{ item.selected }}">
                                            <vaadin-combo-box id="GridTypeid" name="GridTypeName" items="[[CBOType]]" item-value-path="id" value="{{item.type}}" item-label-path="value" on-value-changed="_TypeGridChaged" disabled="{{ !_permissionsVal.update }}">
                                                <template>
                                                    <table width="200px">
                                                        <tr>
                                                            <td width="40%">[[item.id]]</td>
                                                            <td width="60%"> <b>[[item.value]]</b></td>
                                                        </tr>
                                                    </table>
                                                </template>
                                            </vaadin-combo-box>
                                        </template>
                                        <template is="dom-if" if="{{ !item.selected }}">
                                            [[_parseType(item.type)]]
                                        </template>
                                    </template>
                                </vaadin-grid-column>
                                <vaadin-grid-column width="160px" resizable hidden="{{ _NotShowProductGrid }}">
                                    >
                                    <template class="header">
                                        <vaadin-grid-sorter path="code">Código</vaadin-grid-sorter>
                                        <vaadin-grid-filter path="code" />
                                    </template>
                                    <template>
                                        <template is="dom-if" if="{{ item.selected }}">
                                            <vaadin-combo-box id="GridCodeid" name="GridCodeName" items="[[ProductCode]]" item-value-path="code" value="{{item.code}}" item-label-path="code" disabled="{{ !_permissionsVal.update }}">
                                                <template>
                                                    <table width="200px">
                                                        <tr>
                                                            <td width="40%">[[item.code]]</td>
                                                            <td width="60%"> <b>[[item.name]]</b></td>
                                                        </tr>
                                                    </table>
                                                </template>
                                            </vaadin-combo-box>
                                        </template>
                                        <template is="dom-if" if="{{ !item.selected }}">
                                            {{item.code}}
                                        </template>
                                    </template>
                                </vaadin-grid-column>
                                <vaadin-grid-column width="160px" resizable hidden="{{ _NotShowPlateGrid }}">
                                    >
                                    <template class="header">
                                        <vaadin-grid-sorter path="code">Código</vaadin-grid-sorter>
                                        <vaadin-grid-filter path="code" />
                                    </template>
                                    <template>
                                        <template is="dom-if" if="{{ item.selected }}">
                                            <vaadin-text-field value="{{item.code}}" maxlength="20" id="GridCodeTxtid" name="GridCodeTxtName" disabled="true"> </vaadin-text-field>
                                        </template>
                                        <template is="dom-if" if="{{ !item.selected }}">
                                            {{item.code}}
                                        </template>
                                    </template>
                                </vaadin-grid-column>
                                <vaadin-grid-column width="160px" resizable>
                                    <template class="header">
                                        <vaadin-grid-sorter path="description">Descrição </vaadin-grid-sorter>
                                        <vaadin-grid-filter path="description" />
                                    </template>
                                    <template>
                                        <template is="dom-if" if="{{ item.selected }}">
                                            <vaadin-text-field value="{{item.description}}" maxlength="20" id="Descriptionid" name="DescriptionName" disabled="{{ !_permissionsVal.update }}"> </vaadin-text-field>
                                        </template>
                                        <template is="dom-if" if="{{ !item.selected }}">
                                            {{item.description}}
                                        </template>
                                    </template>
                                </vaadin-grid-column>
                                <vaadin-grid-column width="160px" resizable>
                                    <template class="header">
                                        <vaadin-grid-sorter path="quantity">Quantidade </vaadin-grid-sorter>
                                        <vaadin-grid-filter path="quantity" />
                                    </template>
                                    <template>
                                        <template is="dom-if" if="{{ item.selected }}">
                                            <vaadin-text-field value="{{item.quantity}}" maxlength="20" on-value-changed="_ConvertDecimals" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="GridQuantityid" name="QuantityName" disabled="{{ !_permissionsVal.update }}"> </vaadin-text-field>
                                        </template>
                                        <template is="dom-if" if="{{ !item.selected }}">
                                            {{item.quantity}}
                                        </template>
                                    </template>
                                </vaadin-grid-column>
                                <vaadin-grid-column width="160px" resizable>
                                    <template class="header">
                                        <vaadin-grid-sorter path="unitMeasureCode">Cód. Unidade Medida </vaadin-grid-sorter>
                                        <vaadin-grid-filter path="unitMeasureCode" />
                                    </template>
                                    <template>
                                        <template is="dom-if" if="{{ item.selected }}">
                                            <vaadin-combo-box id="UnitMeasureCodeid" name="UnitMeasureCodeid" items="[[CBOMeasureUnit]]" item-value-path="id" value="{{item.unitMeasureCode}}" item-label-path="value" disabled="{{ !_permissionsVal.update }}">
                                                <template>
                                                    <table width="200px">
                                                        <tr>
                                                            <td width="40%">[[item.id]]</td>
                                                            <td width="60%"> <b>[[item.value]]</b></td>
                                                        </tr>
                                                    </table>
                                                </template>
                                            </vaadin-combo-box>
                                        </template>
                                        <template is="dom-if" if="{{ !item.selected }}">
                                            [[_parseMeasure(item.unitMeasureCode)]]
                                        </template>
                                    </template>
                                </vaadin-grid-column>
                                <vaadin-grid-column width="160px" resizable>
                                    <template class="header">
                                        <vaadin-grid-sorter path="quantityOfProduction">Quantidade de Produção </vaadin-grid-sorter>
                                        <vaadin-grid-filter path="quantityOfProduction" />
                                    </template>
                                    <template>
                                        <template is="dom-if" if="{{ item.selected }}">
                                            <vaadin-text-field value="{{item.quantityOfProduction}}" maxlength="20" on-value-changed="_GridAllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="GridQuantityOfProductionid" name="QuantityOfProductionName" disabled="{{ !_permissionsVal.update }}"> </vaadin-text-field>
                                        </template>
                                        <template is="dom-if" if="{{ !item.selected }}">
                                            {{item.quantityOfProduction}}
                                        </template>
                                    </template>
                                </vaadin-grid-column>
                                <vaadin-grid-column width="160px" resizable>
                                    <template class="header">
                                        <vaadin-grid-sorter path="energeticValue">Valor Energético </vaadin-grid-sorter>
                                        <vaadin-grid-filter path="energeticValue" />
                                    </template>
                                    <template>
                                        <template is="dom-if" if="{{ item.selected }}">
                                            <vaadin-text-field value="{{item.energeticValue}}" maxlength="20" on-value-changed="_ConvertDecimals" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="GridEnergeticValueid" name="EnergeticValueName" disabled="{{ !_permissionsVal.update }}"> </vaadin-text-field>
                                        </template>
                                        <template is="dom-if" if="{{ !item.selected }}">
                                            {{item.energeticValue}}
                                        </template>
                                    </template>
                                </vaadin-grid-column>
                                <vaadin-grid-column width="160px" resizable>
                                    <template class="header">
                                        <vaadin-grid-sorter path="proteins">Proteínas </vaadin-grid-sorter>
                                        <vaadin-grid-filter path="proteins" />
                                    </template>
                                    <template>
                                        <template is="dom-if" if="{{ item.selected }}">
                                            <vaadin-text-field value="{{item.proteins}}" maxlength="20" on-value-changed="_GridAllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="GridProteinsid" name="ProteinsName" disabled="{{ !_permissionsVal.update }}"> </vaadin-text-field>
                                        </template>
                                        <template is="dom-if" if="{{ !item.selected }}">
                                            {{item.proteins}}
                                        </template>
                                    </template>
                                </vaadin-grid-column>
                                <vaadin-grid-column width="160px" resizable>
                                    <template class="header">
                                        <vaadin-grid-sorter path="hydratesOfCarbon">Glícidos </vaadin-grid-sorter>
                                        <vaadin-grid-filter path="hydratesOfCarbon" />
                                    </template>
                                    <template>
                                        <template is="dom-if" if="{{ item.selected }}">
                                            <vaadin-text-field value="{{item.hydratesOfCarbon}}" maxlength="20" on-value-changed="_GridAllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="GridHydratesOfCarbontid" name="HydratesOfCarbontName" disabled="{{ !_permissionsVal.update }}"> </vaadin-text-field>
                                        </template>
                                        <template is="dom-if" if="{{ !item.selected }}">
                                            {{item.hydratesOfCarbon}}
                                        </template>
                                    </template>
                                </vaadin-grid-column>
                                <vaadin-grid-column width="160px" resizable>
                                    <template class="header">
                                        <vaadin-grid-sorter path="lipids">Lípidos</vaadin-grid-sorter>
                                        <vaadin-grid-filter path="lipids" />
                                    </template>
                                    <template>
                                        <template is="dom-if" if="{{ item.selected }}">
                                            <vaadin-text-field value="{{item.lipids}}" maxlength="20" on-value-changed="_GridAllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="GridLipidsid" name="LipidsName" disabled="{{ !_permissionsVal.update }}"> </vaadin-text-field>
                                        </template>
                                        <template is="dom-if" if="{{ !item.selected }}">
                                            {{item.lipids}}
                                        </template>
                                    </template>
                                </vaadin-grid-column>
                                <vaadin-grid-column width="160px" resizable>
                                    <template class="header">
                                        <vaadin-grid-sorter path="fibers">Fibras</vaadin-grid-sorter>
                                        <vaadin-grid-filter path="fibers" />
                                    </template>
                                    <template>
                                        <template is="dom-if" if="{{ item.selected }}">
                                            <vaadin-text-field value="{{item.fibers}}" maxlength="20" on-value-changed="_GridAllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="GridFibersid" name="FibersName" disabled="{{ !_permissionsVal.update }}"> </vaadin-text-field>
                                        </template>
                                        <template is="dom-if" if="{{ !item.selected }}">
                                            {{item.fibers}}
                                        </template>
                                    </template>
                                </vaadin-grid-column>
                                <vaadin-grid-column width="160px" resizable>
                                    <template class="header">
                                        <vaadin-grid-sorter path="expectedCostPrice">Preço Custo Esperado</vaadin-grid-sorter>
                                        <vaadin-grid-filter path="expectedCostPrice" />
                                    </template>
                                    <template>
                                        <template is="dom-if" if="{{ item.selected }}">
                                            <vaadin-text-field value="{{item.expectedCostPrice}}" maxlength="20" on-value-changed="_GridAllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="GridExpectedCostPriceid" name="ExpectedCostPriceName" disabled="{{ !_permissionsVal.update }}">
                                                <div slot="suffix">€</div>
                                            </vaadin-text-field>
                                        </template>
                                        <template is="dom-if" if="{{ !item.selected }}">
                                            {{item.expectedCostPrice}}
                                        </template>
                                    </template>
                                </vaadin-grid-column>
                                <vaadin-grid-column width="160px" resizable>
                                    <template class="header">
                                        <vaadin-grid-sorter path="currentCostPrice">Preço Custo Atual</vaadin-grid-sorter>
                                        <vaadin-grid-filter path="currentCostPrice" />
                                    </template>
                                    <template>
                                        <template is="dom-if" if="{{ item.selected }}">
                                            <vaadin-text-field value="{{item.currentCostPrice}}" maxlength="20" on-value-changed="_GridAllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="GridCurrentCostPriceid" name="CurrentCostPriceName" disabled="{{ !_permissionsVal.update }}">
                                                <div slot="suffix">€</div>
                                            </vaadin-text-field>
                                        </template>
                                        <template is="dom-if" if="{{ !item.selected }}">
                                            {{item.currentCostPrice}}
                                        </template>
                                    </template>
                                </vaadin-grid-column>
                                <vaadin-grid-column width="160px" resizable>
                                    <template class="header">
                                        <vaadin-grid-sorter path="timeExpectedCostPrice">TPreço Custo Esperado</vaadin-grid-sorter>
                                        <vaadin-grid-filter path="timeExpectedCostPrice" />
                                    </template>
                                    <template>
                                        <template is="dom-if" if="{{ item.selected }}">
                                            <vaadin-text-field value="{{item.timeExpectedCostPrice}}" maxlength="20" on-value-changed="_GridAllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="GridTimeExpectedCostPriceid" name="TimeExpectedCostPriceName" disabled> </vaadin-text-field>
                                        </template>
                                        <template is="dom-if" if="{{ !item.selected }}">
                                            {{item.timeExpectedCostPrice}}
                                        </template>
                                    </template>
                                </vaadin-grid-column>
                                <vaadin-grid-column width="160px" resizable>
                                    <template class="header">
                                        <vaadin-grid-sorter path="timeCurrentCostPrice">TPreço Custo Atual</vaadin-grid-sorter>
                                        <vaadin-grid-filter path="timeCurrentCostPrice" />
                                    </template>
                                    <template>
                                        <template is="dom-if" if="{{ item.selected }}">
                                            <vaadin-text-field value="{{item.timeCurrentCostPrice}}" maxlength="20" on-value-changed="_GridAllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="GridTimeCurrentCostPriceid" name="TimeCurrentCostPriceName" disabled> </vaadin-text-field>
                                        </template>
                                        <template is="dom-if" if="{{ !item.selected }}">
                                            {{item.timeCurrentCostPrice}}
                                        </template>
                                    </template>
                                </vaadin-grid-column>
                                <vaadin-grid-column width="160px" resizable>
                                    <template class="header">
                                        <vaadin-grid-sorter path="localizationCode">Cod. Localização</vaadin-grid-sorter>
                                        <vaadin-grid-filter path="localizationCode" />
                                    </template>
                                    <template>
                                        <template is="dom-if" if="{{ item.selected }}">
                                            <vaadin-combo-box items="[[CBLocations]]" id="GirdLineLocalizationCodeid" item-value-path="id" item-label-path="value" value="{{item.localizationCode}}" disabled="{{ !_permissionsVal.update }}">
                                                <template>
                                                    <table width="200px">
                                                        <tr>
                                                            <td width="40%">[[item.id]]</td>
                                                            <td width="60%"> <b>[[item.value]]</b></td>
                                                        </tr>
                                                    </table>
                                                </template>
                                            </vaadin-combo-box>
                                        </template>
                                        <template is="dom-if" if="{{ !item.selected }}">
                                            [[_parselocalization(item.localizationCode)]]
                                        </template>
                                    </template>
                                </vaadin-grid-column>
                                <vaadin-grid-column width="160px" resizable>
                                    <template class="header">
                                        <vaadin-grid-sorter path="proteinsByQuantity">Proteínas/Kg</vaadin-grid-sorter>
                                        <vaadin-grid-filter path="proteinsByQuantity" />
                                    </template>
                                    <template>
                                        <template is="dom-if" if="{{ item.selected }}">
                                            <vaadin-text-field value="{{item.proteinsByQuantity}}" maxlength="20" on-value-changed="_GridAllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="GridProteinsByQuantityid" name="ProteinsByQuantityName" disabled> </vaadin-text-field>
                                        </template>
                                        <template is="dom-if" if="{{ !item.selected }}">
                                            {{item.proteinsByQuantity}}
                                        </template>
                                    </template>
                                </vaadin-grid-column>
                                <vaadin-grid-column width="160px" resizable>
                                    <template class="header">
                                        <vaadin-grid-sorter path="glicansByQuantity">Glícidos/Kg</vaadin-grid-sorter>
                                        <vaadin-grid-filter path="glicansByQuantity" />
                                    </template>
                                    <template>
                                        <template is="dom-if" if="{{ item.selected }}">
                                            <vaadin-text-field value="{{item.glicansByQuantity}}" maxlength="20" on-value-changed="_GridAllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="GridGlicansByQuantityid" name="GlicansByQuantityName" disabled> </vaadin-text-field>
                                        </template>
                                        <template is="dom-if" if="{{ !item.selected }}">
                                            {{item.glicansByQuantity}}
                                        </template>
                                    </template>
                                </vaadin-grid-column>
                                <vaadin-grid-column width="160px" resizable>
                                    <template class="header">
                                        <vaadin-grid-sorter path="lipidsByQuantity">Lípidos/Kg</vaadin-grid-sorter>
                                        <vaadin-grid-filter path="lipidsByQuantity" />
                                    </template>
                                    <template>
                                        <template is="dom-if" if="{{ item.selected }}">
                                            <vaadin-text-field value="{{item.lipidsByQuantity}}" maxlength="20" on-value-changed="_GridAllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="GridLipidsByQuantityid" name="LipidsByQuantityName" disabled> </vaadin-text-field>
                                        </template>
                                        <template is="dom-if" if="{{ !item.selected }}">
                                            {{item.lipidsByQuantity}}
                                        </template>
                                    </template>
                                </vaadin-grid-column>
                                <vaadin-grid-column width="160px" resizable>
                                    <template class="header">
                                        <vaadin-grid-sorter path="fibersByQuantity">Fibras/Kg</vaadin-grid-sorter>
                                        <vaadin-grid-filter path="fibersByQuantity" />
                                    </template>
                                    <template>
                                        <template is="dom-if" if="{{ item.selected }}">
                                            <vaadin-text-field value="{{item.fibersByQuantity}}" maxlength="20" on-value-changed="_GridAllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="GridFibersByQuantityid" name="FibersByQuantityName" disabled> </vaadin-text-field>
                                        </template>
                                        <template is="dom-if" if="{{ !item.selected }}">
                                            {{item.fibersByQuantity}}
                                        </template>
                                    </template>
                                </vaadin-grid-column>
                                <vaadin-grid-column width="160px" resizable>
                                    <template class="header">
                                        <vaadin-grid-sorter path="energeticValue2">Valor Energético 1</vaadin-grid-sorter>
                                        <vaadin-grid-filter path="energeticValue2" />
                                    </template>
                                    <template>
                                        <template is="dom-if" if="{{ item.selected }}">
                                            <vaadin-text-field value="{{item.energeticValue2}}" maxlength="20" on-value-changed="_GridAllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="GridEnergeticValue2id" name="EnergeticValue2Name" disabled> </vaadin-text-field>
                                        </template>
                                        <template is="dom-if" if="{{ !item.selected }}">
                                            {{item.energeticValue2}}
                                        </template>
                                    </template>
                                </vaadin-grid-column>
                                <vaadin-grid-column width="160px" resizable>
                                    <template class="header">
                                        <vaadin-grid-sorter path="vitaminA">Vitamina A</vaadin-grid-sorter>
                                        <vaadin-grid-filter path="vitaminA" />
                                    </template>
                                    <template>
                                        <template is="dom-if" if="{{ item.selected }}">
                                            <vaadin-text-field value="{{item.vitaminA}}" maxlength="20" on-value-changed="_GridAllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="GridVitaminAid" name="VitaminAName" disabled="{{ !_permissionsVal.update }}"> </vaadin-text-field>
                                        </template>
                                        <template is="dom-if" if="{{ !item.selected }}">
                                            {{item.vitaminA}}
                                        </template>
                                    </template>
                                </vaadin-grid-column>
                                <vaadin-grid-column width="160px" resizable>
                                    <template class="header">
                                        <vaadin-grid-sorter path="vitaminD">Vitamina D</vaadin-grid-sorter>
                                        <vaadin-grid-filter path="vitaminD" />
                                    </template>
                                    <template>
                                        <template is="dom-if" if="{{ item.selected }}">
                                            <vaadin-text-field value="{{item.vitaminD}}" maxlength="20" on-value-changed="_GridAllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="GridVitaminDid" name="VitaminDName" disabled="{{ !_permissionsVal.update }}"> </vaadin-text-field>
                                        </template>
                                        <template is="dom-if" if="{{ !item.selected }}">
                                            {{item.vitaminD}}
                                        </template>
                                    </template>
                                </vaadin-grid-column>
                                <vaadin-grid-column width="160px" resizable>
                                    <template class="header">
                                        <vaadin-grid-sorter path="cholesterol">Colesterol</vaadin-grid-sorter>
                                        <vaadin-grid-filter path="cholesterol" />
                                    </template>
                                    <template>
                                        <template is="dom-if" if="{{ item.selected }}">
                                            <vaadin-text-field value="{{item.cholesterol}}" maxlength="20" on-value-changed="_GridAllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="GridCholesterolid" name="CholesterolName" disabled="{{ !_permissionsVal.update }}"> </vaadin-text-field>
                                        </template>
                                        <template is="dom-if" if="{{ !item.selected }}">
                                            {{item.cholesterol}}
                                        </template>
                                    </template>
                                </vaadin-grid-column>
                                <vaadin-grid-column width="160px" resizable>
                                    <template class="header">
                                        <vaadin-grid-sorter path="sodium">Sódio</vaadin-grid-sorter>
                                        <vaadin-grid-filter path="sodium" />
                                    </template>
                                    <template>
                                        <template is="dom-if" if="{{ item.selected }}">
                                            <vaadin-text-field value="{{item.sodium}}" maxlength="20" on-value-changed="_GridAllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="GridSodiumid" name="SodiumName" disabled="{{ !_permissionsVal.update }}"> </vaadin-text-field>
                                        </template>
                                        <template is="dom-if" if="{{ !item.selected }}">
                                            {{item.sodium}}
                                        </template>
                                    </template>
                                </vaadin-grid-column>
                                <vaadin-grid-column width="160px" resizable>
                                    <template class="header">
                                        <vaadin-grid-sorter path="potassium">Potássio</vaadin-grid-sorter>
                                        <vaadin-grid-filter path="potassium" />
                                    </template>
                                    <template>
                                        <template is="dom-if" if="{{ item.selected }}">
                                            <vaadin-text-field value="{{item.potassium}}" maxlength="20" on-value-changed="_GridAllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="GridPotassiumid" name="PotassiumName" disabled="{{ !_permissionsVal.update }}"> </vaadin-text-field>
                                        </template>
                                        <template is="dom-if" if="{{ !item.selected }}">
                                            {{item.potassium}}
                                        </template>
                                    </template>
                                </vaadin-grid-column>
                                <vaadin-grid-column width="160px" resizable>
                                    <template class="header">
                                        <vaadin-grid-sorter path="calcium">Cálcio</vaadin-grid-sorter>
                                        <vaadin-grid-filter path="calcium" />
                                    </template>
                                    <template>
                                        <template is="dom-if" if="{{ item.selected }}">
                                            <vaadin-text-field value="{{item.calcium}}" maxlength="20" on-value-changed="_GridAllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="GridCalciumid" name="CalciumName" disabled="{{ !_permissionsVal.update }}"> </vaadin-text-field>
                                        </template>
                                        <template is="dom-if" if="{{ !item.selected }}">
                                            {{item.calcium}}
                                        </template>
                                    </template>
                                </vaadin-grid-column>
                                <vaadin-grid-column width="160px" resizable>
                                    <template class="header">
                                        <vaadin-grid-sorter path="iron">Ferro</vaadin-grid-sorter>
                                        <vaadin-grid-filter path="iron" />
                                    </template>
                                    <template>
                                        <template is="dom-if" if="{{ item.selected }}">
                                            <vaadin-text-field value="{{item.iron}}" maxlength="20" on-value-changed="_GridAllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="GridIronid" name="IronName" disabled="{{ !_permissionsVal.update }}"> </vaadin-text-field>
                                        </template>
                                        <template is="dom-if" if="{{ !item.selected }}">
                                            {{item.iron}}
                                        </template>
                                    </template>
                                </vaadin-grid-column>
                                <vaadin-grid-column width="160px" resizable>
                                    <template class="header">
                                        <vaadin-grid-sorter path="edivel">Edivel</vaadin-grid-sorter>
                                        <vaadin-grid-filter path="edivel" />
                                    </template>
                                    <template>
                                        <template is="dom-if" if="{{ item.selected }}">
                                            <vaadin-text-field value="{{item.edivel}}" maxlength="20" on-value-changed="_GridAllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="GridEdivelid" name="EdivelName" disabled="{{ !_permissionsVal.update }}"> </vaadin-text-field>
                                        </template>
                                        <template is="dom-if" if="{{ !item.selected }}">
                                            {{item.edivel}}
                                        </template>
                                    </template>
                                </vaadin-grid-column>
                                <vaadin-grid-column width="160px" resizable>
                                    <template class="header">
                                        <vaadin-grid-sorter path="vitaminAByQuantity">Vitamina A/Kg</vaadin-grid-sorter>
                                        <vaadin-grid-filter path="vitaminAByQuantity" />
                                    </template>
                                    <template>
                                        <template is="dom-if" if="{{ item.selected }}">
                                            <vaadin-text-field value="{{item.vitaminAByQuantity}}" on-value-changed="_GridAllLinesCalculation" maxlength="20" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="GridVitaminAByQuantityid" name="VitaminAByQuantityName" disabled> </vaadin-text-field>
                                        </template>
                                        <template is="dom-if" if="{{ !item.selected }}">
                                            {{item.vitaminAByQuantity}}
                                        </template>
                                    </template>
                                </vaadin-grid-column>
                                <vaadin-grid-column width="160px" resizable>
                                    <template class="header">
                                        <vaadin-grid-sorter path="vitaminDByQuantity">Vitamina D/Kg</vaadin-grid-sorter>
                                        <vaadin-grid-filter path="vitaminDByQuantity" />
                                    </template>
                                    <template>
                                        <template is="dom-if" if="{{ item.selected }}">
                                            <vaadin-text-field value="{{item.vitaminDByQuantity}}" maxlength="20" on-value-changed="_GridAllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="GridVitaminDByQuantityid" name="VitaminDByQuantityName" disabled> </vaadin-text-field>
                                        </template>
                                        <template is="dom-if" if="{{ !item.selected }}">
                                            {{item.vitaminDByQuantity}}
                                        </template>
                                    </template>
                                </vaadin-grid-column>
                                <vaadin-grid-column width="160px" resizable>
                                    <template class="header">
                                        <vaadin-grid-sorter path="cholesterolByQuantity">Colesterol/Kg</vaadin-grid-sorter>
                                        <vaadin-grid-filter path="cholesterolByQuantity" />
                                    </template>
                                    <template>
                                        <template is="dom-if" if="{{ item.selected }}">
                                            <vaadin-text-field value="{{item.cholesterolByQuantity}}" maxlength="20" on-value-changed="_GridAllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="GridCholesterolByQuantityid" name="CholesterolByQuantityName" disabled> </vaadin-text-field>
                                        </template>
                                        <template is="dom-if" if="{{ !item.selected }}">
                                            {{item.cholesterolByQuantity}}
                                        </template>
                                    </template>
                                </vaadin-grid-column>
                                <vaadin-grid-column width="160px" resizable>
                                    <template class="header">
                                        <vaadin-grid-sorter path="sodiumByQuantity">Sódio/Kg</vaadin-grid-sorter>
                                        <vaadin-grid-filter path="sodiumByQuantity" />
                                    </template>
                                    <template>
                                        <template is="dom-if" if="{{ item.selected }}">
                                            <vaadin-text-field value="{{item.sodiumByQuantity}}" maxlength="20" on-value-changed="_GridAllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="GridSodiumByQuantityid" name="SodiumByQuantityName" disabled> </vaadin-text-field>
                                        </template>
                                        <template is="dom-if" if="{{ !item.selected }}">
                                            {{item.sodiumByQuantity}}
                                        </template>
                                    </template>
                                </vaadin-grid-column>
                                <vaadin-grid-column width="160px" resizable>
                                    <template class="header">
                                        <vaadin-grid-sorter path="potassiumByQuantity">Potásio/Kg</vaadin-grid-sorter>
                                        <vaadin-grid-filter path="potassiumByQuantity" />
                                    </template>
                                    <template>
                                        <template is="dom-if" if="{{ item.selected }}">
                                            <vaadin-text-field value="{{item.potassiumByQuantity}}" maxlength="20" on-value-changed="_GridAllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="GridPotassiumByQuantityid" name="PotassiumByQuantityName" disabled> </vaadin-text-field>
                                        </template>
                                        <template is="dom-if" if="{{ !item.selected }}">
                                            {{item.potassiumByQuantity}}
                                        </template>
                                    </template>
                                </vaadin-grid-column>
                                <vaadin-grid-column width="160px" resizable>
                                    <template class="header">
                                        <vaadin-grid-sorter path="ironByQuantity">Ferro/Kg</vaadin-grid-sorter>
                                        <vaadin-grid-filter path="ironByQuantity" />
                                    </template>
                                    <template>
                                        <template is="dom-if" if="{{ item.selected }}">
                                            <vaadin-text-field value="{{item.ironByQuantity}}" maxlength="20" on-value-changed="_GridAllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="GridIronByQuantityid" name="IronByQuantityName" disabled> </vaadin-text-field>
                                        </template>
                                        <template is="dom-if" if="{{ !item.selected }}">
                                            {{item.ironByQuantity}}
                                        </template>
                                    </template>
                                </vaadin-grid-column>
                                <vaadin-grid-column width="160px" resizable>
                                    <template class="header">
                                        <vaadin-grid-sorter path="calciumByQuantity">Cálcio/Kg</vaadin-grid-sorter>
                                        <vaadin-grid-filter path="calciumByQuantity" />
                                    </template>
                                    <template>
                                        <template is="dom-if" if="{{ item.selected }}">
                                            <vaadin-text-field value="{{item.calciumByQuantity}}" maxlength="20" on-value-changed="_GridAllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="GridCalciumByQuantityid" name="CalciumByQuantityName" disabled> </vaadin-text-field>
                                        </template>
                                        <template is="dom-if" if="{{ !item.selected }}">
                                            {{item.calciumByQuantity}}
                                        </template>
                                    </template>
                                </vaadin-grid-column>
                                <vaadin-grid-column width="160px" resizable>
                                    <template class="header">
                                        <vaadin-grid-sorter path="saturatedFattyAcids">Ácidos Gordos Saturados</vaadin-grid-sorter>
                                        <vaadin-grid-filter path="saturatedFattyAcids" />
                                    </template>
                                    <template>
                                        <template is="dom-if" if="{{ item.selected }}">
                                            <vaadin-text-field value="{{item.saturatedFattyAcids}}" maxlength="20" on-value-changed="_ConvertDecimals" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="GridSaturatedFattyAcidsid" name="SaturatedFattyAcidsName" disabled="{{ !_permissionsVal.update }}"> </vaadin-text-field>
                                        </template>
                                        <template is="dom-if" if="{{ !item.selected }}">
                                            {{item.saturatedFattyAcids}}
                                        </template>
                                    </template>
                                </vaadin-grid-column>
                                <vaadin-grid-column width="160px" resizable>
                                    <template class="header">
                                        <vaadin-grid-sorter path="sugarCane">Açucares</vaadin-grid-sorter>
                                        <vaadin-grid-filter path="sugarCane" />
                                    </template>
                                    <template>
                                        <template is="dom-if" if="{{ item.selected }}">
                                            <vaadin-text-field value="{{item.sugarCane}}" maxlength="20" on-value-changed="_ConvertDecimals" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="GridSugarcaneid" name="TSugarcaneName" disabled="{{ !_permissionsVal.update }}"> </vaadin-text-field>
                                        </template>
                                        <template is="dom-if" if="{{ !item.selected }}">
                                            {{item.sugarCane}}
                                        </template>
                                    </template>
                                </vaadin-grid-column>
                                <vaadin-grid-column width="160px" resizable>
                                    <template class="header">
                                        <vaadin-grid-sorter path="salt">Sal</vaadin-grid-sorter>
                                        <vaadin-grid-filter path="salt" />
                                    </template>
                                    <template>
                                        <template is="dom-if" if="{{ item.selected }}">
                                            <vaadin-text-field value="{{item.salt}}" maxlength="20" on-value-changed="_ConvertDecimals" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="Gridsaltid" name="saltName" disabled="{{ !_permissionsVal.update }}"> </vaadin-text-field>
                                        </template>
                                        <template is="dom-if" if="{{ !item.selected }}">
                                            {{item.salt}}
                                        </template>
                                    </template>
                                </vaadin-grid-column>
                                <vaadin-grid-column width="160px" resizable>
                                    <template class="header">
                                        <vaadin-grid-sorter path="quantityPlates">Quantidade Prato</vaadin-grid-sorter>
                                        <vaadin-grid-filter path="quantityPlates" />
                                    </template>
                                    <template>
                                        <template is="dom-if" if="{{ item.selected }}">
                                            <vaadin-text-field value="{{item.quantityPlates}}" maxlength="20" on-value-changed="_GridAllLinesCalculation" pattern="[0-9]+([\.][0-9]+)?" class="alignRight" id="GridQuantityPlatesid" name="QuantityPlatesName" disabled> </vaadin-text-field>
                                        </template>
                                        <template is="dom-if" if="{{ !item.selected }}">
                                            {{item.quantityPlates}}
                                        </template>
                                    </template>
                                </vaadin-grid-column>
                                <vaadin-grid-column width="160px" resizable>
                                    <template class="header">
                                        <vaadin-grid-sorter path="preparation">Preparação</vaadin-grid-sorter>
                                        <vaadin-grid-filter path="preparation" />
                                    </template>
                                    <template>
                                        <template is="dom-if" if="{{ item.selected }}">
                                            <such-textarea rows="5" value="{{item.preparation}}" id="GridPreparationid" name="PreparationName" disabled="{{ !_permissionsVal.update }}"> </such-textarea>
                                        </template>
                                        <template is="dom-if" if="{{ !item.selected }}">
                                            {{item.preparation}}
                                        </template>
                                    </template>
                                </vaadin-grid-column>
                                <vaadin-grid-column with="10%" hidden="{{ !_permissionsVal.delete }}">
                                    <template class="header">
                                    </template>
                                    <template>
                                        <center>
                                            <paper-button class="btnRemove" raised on-tap="_delete">Eliminar</paper-button>
                                        </center>
                                    </template>
                                </vaadin-grid-column>
                            </vaadin-grid>
                        </div>
                    </div>
                    <div class="marginSpace" hidden="{{ !_permissionsVal.update }}">
                        <paper-button raised id="btnAddNew" class="btnEdit" on-tap="_updateLines" hidden="{{ _NotCreateOnly }}"><i class="fa fa-floppy-o" aria-hidden="true"></i>&nbsp; Guardar</paper-button>
                        <paper-button raised id="btnCancel" class="btnRemove" on-tap="_cancel" hidden="{{ _NotCreateOnly }}"><i class="fa fa-undo" aria-hidden="true"></i>&nbsp; Cancelar</paper-button>
                    </div>
                </div>
            </div>
        </div>
        <paper-toast id="ToastMessageSuccess" duration="4000" horizontalAlign="right" class="toastSuccess">&nbsp;<i class="fa fa-check fa-lg" aria-hidden="true"></i></paper-toast>
        <paper-toast id="ToastMessageError" duration="4000" horizontalAlign="right" class="toastError">&nbsp;<i class="fa fa-exclamation-triangle" aria-hidden="true"></i></paper-toast>

    </template>
    <script>
    document.addEventListener('WebComponentsReady', function () {
        Polymer({
            is: 'x-recordtechnical',
            properties: {
                selected: {
                    type: Number,
                    value: 0
                },
                _SelectedLine: {
                    observer: '_lineSelected'
                },
                _SelectedConfectionLine: {
                    observer: '_ConflineSelected'
                },
                _NotCreateOnly: {
                    type: Boolean,
                    value: false
                },
                _NotShowProduct: {
                    type: Boolean,
                    value: false
                },
                _NotShowPlate: {
                    type: Boolean,
                    value: true
                },
                _NotShowProductGrid: {
                    type: Boolean,
                    value: false
                },
                _NotShowPlateGrid: {
                    type: Boolean,
                    value: true
                },
                RecTecPlatValue: {
                    type: String,
                    notify: true,
                    value: ""
                },
                recTecNameValue: {
                    type: String,
                    notify: true,
                    value: ""
                },
                CodMeasureUnitValue: {
                    type: String,
                    notify: true,
                    value: ""
                },
                LocalizationsValue: {
                    type: String,
                    notify: true,
                    value: ""
                },
                TPreparationValue: {
                    type: String,
                    notify: true,
                    value: ""
                },
                CookingTechniqueValue: {
                    type: String,
                    notify: true,
                    value: ""
                },

                GroupValue: {
                    type: String,
                    notify: true,
                    value: ""
                },
                EpochValue: {
                    type: String,
                    notify: true,
                    value: ""
                },
                DosesNoValue: {
                    type: String,
                    notify: true,
                    value: ""
                },
                PreparTempValue: {
                    type: String,
                    notify: true,
                    value: ""
                },
                FinalTempConfectValue: {
                    type: String,
                    notify: true,
                    value: ""
                },
                ServeTempValue: {
                    type: String,
                    notify: true,
                    value: ""
                },
                VitaminA: {
                    type: String,
                    notify: true,
                    value: ""
                },
                VitaminD: {
                    type: String,
                    notify: true,
                    value: ""
                },
                Cholesterol: {
                    type: String,
                    notify: true,
                    value: ""
                },
                Sodium: {
                    type: String,
                    notify: true,
                    value: ""
                },
                Potassium: {
                    type: String,
                    notify: true,
                    value: ""
                },
                Calcium: {
                    type: String,
                    notify: true,
                    value: ""
                },
                Iron: {
                    type: String,
                    notify: true,
                    value: ""
                },
                Proteins: {
                    type: String,
                    notify: true,
                    value: ""
                },
                Carbohydrates: {
                    type: String,
                    notify: true,
                    value: ""
                },
                Lipids: {
                    type: String,
                    notify: true,
                    value: ""
                },
                FoodFiber: {
                    type: String,
                    notify: true,
                    value: ""
                },
                PriceCostExpected: {
                    type: String,
                    notify: true,
                    value: ""
                },
                PriceCostCurrent: {
                    type: String,
                    notify: true,
                    value: ""
                },
                Energeticvalue: {
                    type: String,
                    notify: true,
                    value: ""
                },
                Energeticvalue2: {
                    type: String,
                    notify: true,
                    value: ""
                },
                ClassFt1Value: {
                    type: String,
                    notify: true,
                    value: ""
                },
                ClassFt2Value: {
                    type: String,
                    notify: true,
                    value: ""
                },
                ClassFt3Value: {
                    type: String,
                    notify: true,
                    value: ""
                },
                ClassFt4Value: {
                    type: String,
                    notify: true,
                    value: ""
                },
                ClassFt5Value: {
                    type: String,
                    notify: true,
                    value: ""
                },
                ClassFt6Value: {
                    type: String,
                    notify: true,
                    value: ""
                },
                ClassFt7Value: {
                    type: String,
                    notify: true,
                    value: ""
                },
                NotesValue: {
                    type: String,
                    notify: true,
                    value: ""
                },
                WithGlutenChecked: {
                    type: Boolean,
                    value: false
                },
                BasedCrustaceansChecked: {
                    type: Boolean,
                    value: false
                },
                BasedEggsChecked: {
                    type: Boolean,
                    value: false
                },
                BasedFishChecked: {
                    type: Boolean,
                    value: false
                },
                BasedPeanutsChecked: {
                    type: Boolean,
                    value: false
                },
                BasedSoyChecked: {
                    type: Boolean,
                    value: false
                },
                BasedMilkChecked: {
                    type: Boolean,
                    value: false
                },
                BasedFruitShardShellChecked: {
                    type: Boolean,
                    value: false
                },
                BasedCeleryChecked: {
                    type: Boolean,
                    value: false
                },
                BasedMustardChecked: {
                    type: Boolean,
                    value: false
                },
                BasedSesameSeedsChecked: {
                    type: Boolean,
                    value: false
                },
                BasedLupineChecked: {
                    type: Boolean,
                    value: false
                },
                BasedMolluscsChecked: {
                    type: Boolean,
                    value: false
                },
                BasedSulfSulphChecked: {
                    type: Boolean,
                    value: false
                },
                Type: {
                    type: String,
                    notify: true,
                    value: ""
                },
                Code: {
                    type: String,
                    notify: true,
                    value: ""
                },
                LineDescription: {
                    type: String,
                    notify: true,
                    value: ""
                },
                LineQuantity: {
                    type: String,
                    notify: true,
                    value: ""
                },
                LineMeasureUnit: {
                    type: String,
                    notify: true,
                    value: ""
                },
                LineQuantityOfProduction: {
                    type: String,
                    notify: true,
                    value: ""
                },
                LineEnergetic: {
                    type: String,
                    notify: true,
                    value: ""
                },
                LineProteins: {
                    type: String,
                    notify: true,
                    value: ""
                },
                LineHydratesOfCarbont: {
                    type: String,
                    notify: true,
                    value: ""
                },
                LineLipids: {
                    type: String,
                    notify: true,
                    value: ""
                },
                LineFibers: {
                    type: String,
                    notify: true,
                    value: ""
                },
                LineExpectedCostPrice: {
                    type: String,
                    notify: true,
                    value: ""
                },
                LineCurrentCostPrice: {
                    type: String,
                    notify: true,
                    value: ""
                },
                LineTimeExpectedCostPrice: {
                    type: String,
                    notify: true,
                    value: ""
                },
                LineTimeCurrentCostPrice: {
                    type: String,
                    notify: true,
                    value: ""
                },
                LineLocalizationCode: {
                    type: String,
                    notify: true,
                    value: ""
                },
                LineProteinsByQuantity: {
                    type: String,
                    notify: true,
                    value: ""
                },
                LineGlicansByQuantity: {
                    type: String,
                    notify: true,
                    value: ""
                },
                LineLipidsByQuantity: {
                    type: String,
                    notify: true,
                    value: ""
                },
                LineFibersByQuantity: {
                    type: String,
                    notify: true,
                    value: ""
                },
                LineEnergeticValue2: {
                    type: String,
                    notify: true,
                    value: ""
                },
                LineVitaminA: {
                    type: String,
                    notify: true,
                    value: ""
                },
                LineVitaminD: {
                    type: String,
                    notify: true,
                    value: ""
                },
                LineCholesterol: {
                    type: String,
                    notify: true,
                    value: ""
                },
                LineSodium: {
                    type: String,
                    notify: true,
                    value: ""
                },
                LinePotassium: {
                    type: String,
                    notify: true,
                    value: ""
                },
                LineCalcium: {
                    type: String,
                    notify: true,
                    value: ""
                },
                LineIron: {
                    type: String,
                    notify: true,
                    value: ""
                },
                LineEdivel: {
                    type: String,
                    notify: true,
                    value: ""
                },
                LineVitaminAByQuantity: {
                    type: String,
                    notify: true,
                    value: ""
                },
                LineVitaminDByQuantity: {
                    type: String,
                    notify: true,
                    value: ""
                },
                LineCholesterolByQuantity: {
                    type: String,
                    notify: true,
                    value: ""
                },
                decValue: {
                    type: String,
                    notify: true,
                    value: ""
                },
                LineSodiumByQuantity: {
                    type: String,
                    notify: true,
                    value: ""
                },
                LinePotassiumByQuantity: {
                    type: String,
                    notify: true,
                    value: ""
                },
                LineIronByQuantity: {
                    type: String,
                    notify: true,
                    value: ""
                },
                LineCalciumByQuantity: {
                    type: String,
                    notify: true,
                    value: ""
                },
                LineSaturatedFattyAcids: {
                    type: String,
                    notify: true,
                    value: ""
                },
                LineSugarcane: {
                    type: String,
                    notify: true,
                    value: ""
                },
                Linesalt: {
                    type: String,
                    notify: true,
                    value: ""
                },
                _permissionsVal: {
                    type: Array
                },
                LineQuantityPlates: {
                    type: String,
                    notify: true,
                    value: ""
                },
                LinePreparation: {
                    type: String,
                    notify: true,
                    value: ""
                },
            },
            observers: [
                '_onCacheLoaded(CBOMeasureUnit,CBLocations,CboActionGrid,ProductCode)'
            ],
            _onCacheLoaded: function (CBOMeasureUnit, CBLocations, CboActionGrid, ProductCode) {
                if (!this.Flag) {
                    var RecTecPlatId = @Html.Raw(Json.Serialize(ViewBag.RecTecPlatesId));
                    this._permissionsVal = @Html.Raw(Json.Serialize(@ViewBag.UPermissions));
                    if (RecTecPlatId != "" && RecTecPlatId != null) {
                        this.RecTecPlatValue = RecTecPlatId;
                        this.$.ajax_GridProcedConfec.body = JSON.stringify(RecTecPlatId);
                        this.$.ajax_GridProcedConfec.generateRequest();
                        this.$.ajax_GetAllRecTecPlat.body = JSON.stringify(RecTecPlatId);
                        this.$.ajax_GetAllRecTecPlat.generateRequest();
                        this.$.getallgrid_ajax.body = JSON.stringify(RecTecPlatId);
                        this.$.getallgrid_ajax.generateRequest();
                        this.$.ajax_Image.body = JSON.stringify(RecTecPlatId);
                        this.$.ajax_Image.generateRequest();
                    }
                    this.Flag = true;
                }
            },
            _TypeGridChaged: function (e) {
                var _GridTypeid = e.target.value;
                if (_GridTypeid === 1) {
                    //Type Produto
                    this._NotShowProductGrid = false;
                    this._NotShowPlateGrid = true;

                } else if (_GridTypeid === 2) {
                    //Type LM Produção
                    this._NotShowProductGrid = false;
                    this._NotShowPlateGrid = true;
                    if (this.data != null) {
                        var res = this.data.find(x => x == this._SelectedLine);
                        if (res != null) {
                            res.energeticValue = this.Energeticvalue2;
                            res.proteins = this.Proteins;
                            res.hydratesOfCarbon = this.Carbohydrates;
                            res.lipids = this.Lipids;
                            res.fibers = this.FoodFiber;
                            res.expectedCostPrice = this.PriceCostExpected;
                            res.currentCostPrice = this.PriceCostCurrent;
                            this.$.GridRecTecOfPlatesLines.clearCache();
                        }
                    }
                }
                else if (_GridTypeid === 3) {
                    //Type Prato
                    this._NotShowProductGrid = true;
                    this._NotShowPlateGrid = false;
                }
            },
            _TypeChaged: function (e) {

                var typeId = e.target.value;
                if (typeId === 1) {
                    //Type Produto
                    this._NotShowProduct = false;
                    this._NotShowPlate = true;

                } else if (typeId === 2) {
                    //Type LM Produção
                    this._NotShowProduct = false;
                    this._NotShowPlate = true;
                    //Add header values
                    this.LineEnergetic = this.Energeticvalue2;
                    this.LineProteins = this.Proteins;
                    this.LineHydratesOfCarbont = this.Carbohydrates;
                    this.LineLipids = this.Lipids;
                    this.LineFibers = this.FoodFiber;
                    this.LineExpectedCostPrice = this.PriceCostExpected;
                    this.LineCurrentCostPrice = this.PriceCostCurrent;
                }
                else if (typeId === 3) {
                    //Type Prato
                    this._NotShowProduct = true;
                    this._NotShowPlate = false;
                }
            },
            _ConvertDecimals: function (e) {

                e.target.value = e.target.value.replace(",", ".");
            },
            _CreateResponse: function (e) {
                debugger;
                if (e.detail.status === 200) {
                    if (this.CreateResult.eReasonCode === 1) {
                        this._openToast(this.CreateResult.eMessage);
                        if (this.CreateResult.plateNo != "" && this.CreateResult.plateNo != null) {
                            window.location.href = "/Nutricao/FichasTecnicasPratos/FichaTecnica/" + this.CreateResult.plateNo;
                        }
                    } else {
                        this._openToastError(this.CreateResult.eMessage);
                    }
                }
                else {
                    this._openToastError("Ocorreu um erro ao criar o registo.");
                }
            },
            _UpdateResponse: function (e) {
                if (e.detail.status === 200) {
                    if (this.UpdateResult.eReasonCode === 1) {
                        this._openToast(this.UpdateResult.eMessage);
                    } else {
                        this._openToastError(this.UpdateResult.eMessage);
                    }
                }
                else {
                    this._openToastError("Ocorreu um erro ao Editado o registo.");
                }
            },
            _parselocalization: function (param) {

                if (param != undefined && this.CBLocations != undefined) {
                    var sel = this.CBLocations.find(x => x.id == param);
                    if (sel != undefined) {
                        return sel.value;
                    }
                }
                return "";
            },
            _parseMeasure: function (param) {

                if (param != undefined && this.CBOMeasureUnit != undefined) {
                    var sel = this.CBOMeasureUnit.find(x => x.id == param);
                    if (sel != undefined) {
                        return sel.value;
                    }
                }
                return "";
            },

            _parseType: function (param) {

                if (param != undefined && this.CBOType != undefined) {
                    var sel = this.CBOType.find(x => x.id == param);
                    if (sel != undefined) {
                        return sel.value;
                    }
                }
                return "";
            },
            _parseActionCode: function (param) {
                if (param != undefined && this.CboAction != undefined) {
                    var sel = this.CboAction.find(x => x.id == param);
                    if (sel != undefined) {
                        return sel.value;
                    }
                }
                return "";
            },
            _openToast: function (message) {
                this.$.ToastMessageSuccess.text = message;
                this.$.ToastMessageSuccess.open();
            },
            _openToastError: function(message) {
                this.$.ToastMessageError.text = message;
                this.$.ToastMessageError.open();
            },
            ready: function() {
                var RecTecPlatId = @Html.Raw(Json.Serialize(ViewBag.RecTecPlatesId));
                if (RecTecPlatId != "" && RecTecPlatId != null) {
                    this.RecTecPlatValue = RecTecPlatId;
                    this.$.ajax_GridProcedConfec.body = JSON.stringify(RecTecPlatId);
                    this.$.ajax_GridProcedConfec.generateRequest();
                    this.$.ajax_GetAllRecTecPlat.body = JSON.stringify(RecTecPlatId);
                    this.$.ajax_GetAllRecTecPlat.generateRequest();
                    this.$.getallgrid_ajax.body = JSON.stringify(RecTecPlatId);
                    this.$.getallgrid_ajax.generateRequest();
                    this.$.ajax_Image.body = JSON.stringify(RecTecPlatId);
                    this.$.ajax_Image.generateRequest();
                } else {
                    this._NotCreateOnly = true;
                }
            },
            //_LineTypeChange: function(e) {
            //    if (e.detail.value != null && e.detail.value != "") {
            //        this.$.ajax_CboCode.body = JSON.stringify(e.detail.value);
            //        this.$.ajax_CboCode.generateRequest();
            //    }
            //},
            //_CodeChange: function(e) {
            //    if (e.detail.value != null && e.detail.value != "") {
            //        var sel = this.CboCode.find(x => x.id == e.detail.value).value;
            //        if (sel != "") {
            //            this.$.Descriptionid.value = sel;
            //        }
            //    }
            //},
            _Upload: function () {
                var urlFile = "/FichasTecnicasPratos/UploadFilesAjax/" + this.RecTecPlatValue;
                var toastSuccess = this.$.ToastMessageSuccess;
                var toastError = this.$.ToastMessageError;
                var plateNo = this.RecTecPlatValue;
                var ajaxImage = this.$.ajax_Image;
                var files = this.$.files.files;
                var data = new FormData();
                for (var i = 0; i < files.length ; i++) {
                    data.append(files[i].name, files[i]);
                }
                $.ajax({
                    type: "POST",
                    url: urlFile,
                    contentType: false,
                    processData: false,
                    data: data,
                    success: function (result) {
                        if (result.eReasonCode === 1) {
                            ajaxImage.body = JSON.stringify(plateNo);
                            ajaxImage.generateRequest();
                            toastSuccess.text = result.eMessage;
                            toastSuccess.open();
                        } else {
                            toastError.text = result.eMessage;
                            toastError.open();
                        }
                    },
                    error: function () {
                        toastError.text = "Ocorreu um problema ao fazer o upload da imagem.";
                        toastError.open();
                    }
                });
            },
            _ImageResponse: function (dataImage) {
                if (this.dataImage != null) {
                    if (this.dataImage.imageToString != null && this.dataImage.imageToString!= "") {
                        this.$.my_image.src = this.dataImage.imageToString;
                    }
                }
            },
            _update() {
                var updateRecTec = {
                    plateNo: this.RecTecPlatValue,
                    type: this.Type,
                    code: this.Code,
                    unitMeasureCode: this.CodMeasureUnitValue,
                    recordTechnicalName: this.recTecNameValue,
                    localizationCode: this.LocalizationsValue,
                    preparationTime: this.TPreparationValue,
                    technicalCooking: this.CookingTechniqueValue,
                    group: this.GroupValue,
                    epoch: this.EpochValue,
                    dosesNo: this.DosesNoValue,
                    preparationTemperature: this.PreparTempValue,
                    finalTemperatureConfection: this.FinalTempConfectValue,
                    serveTemperature: this.ServeTempValue,
                    classFt1: this.ClassFt1Value,
                    classFt2: this.ClassFt2Value,
                    classFt3: this.ClassFt3Value,
                    classFt4: this.ClassFt4Value,
                    classFt5: this.ClassFt5Value,
                    classFt6: this.ClassFt6Value,
                    classFt7: this.ClassFt7Value,
                    observations: this.NotesValue,
                    withGluten: this.WithGlutenChecked,
                    basedCrustaceans: this.BasedCrustaceansChecked,
                    basedEggs: this.BasedEggsChecked,
                    basedFish: this.BasedFishChecked,
                    basedPeanuts: this.BasedPeanutsChecked,
                    basedSoy: this.BasedSoyChecked,
                    basedMilk: this.BasedMilkChecked,
                    basedFruitShardShell: this.BasedFruitShardShellChecked,
                    basedCelery: this.BasedCeleryChecked,
                    basedMustard: this.BasedMustardChecked,
                    basedSesameSeeds: this.BasedSesameSeedsChecked,
                    basedLupine: this.BasedLupineChecked,
                    basedMolluscs: this.BasedMolluscsChecked,
                    basedSulfurDioxeAndSulphites: this.BasedSulfSulphChecked,
                    image: this.dataImage.image,
                    vitaminA: this.VitaminA,
                    vitaminD: this.VitaminD,
                    cholesterol: this.Cholesterol,
                    sodium: this.Sodium,
                    potassium: this.Potassium,
                    calcium: this.Calcium,
                    iron: this.Iron,
                    proteins: this.Proteins,
                    carbohydrates: this.Carbohydrates,
                    lipids: this.Lipids,
                    foodFiber: this.FoodFiber,
                    priceCostExpected: this.PriceCostExpected,
                    priceCostCurrent: this.PriceCostCurrent,
                    energeticvalue: this.Energeticvalue,
                    energeticvalue2: this.Energeticvalue2,
                    //classFt8: this.recTecNameValue,
                    //variationPriceCost: this.recTecNameValue,
                    //centerResponsibilityCode: this.recTecNameValue,
                    //description: this.recTecNameValue,
                    //state: this.recTecNameValue,
                };
                this.$.UpdateRecTec_ajax.body = JSON.stringify(updateRecTec);
                this.$.UpdateRecTec_ajax.generateRequest();
            },
            _updateLines() {
                this.$.updateRecTecLines_ajax.body = JSON.stringify(this.data);
                this.$.updateRecTecLines_ajax.params = { "plateNo": this.RecTecPlatValue};
                this.$.updateRecTecLines_ajax.generateRequest();
                this.$.GridRecTecOfPlatesLines.clearCache();
            },
            _updateconfLines() {
                this.$.updateConf_ajax.body = JSON.stringify(this.GridProceduresConfection);
                this.$.updateConf_ajax.params = { "plateNo": this.RecTecPlatValue };
                this.$.updateConf_ajax.generateRequest();
                this.$.gridConfection_request.clearCache();
            },
            _cancel: function () {
                this.$.getallgrid_ajax.body = JSON.stringify(this.RecTecPlatValue);
                this.$.getallgrid_ajax.generateRequest();
                this.$.GridRecTecOfPlatesLines.clearCache();
            },
            _addConfection() {
                var createConf = {
                    technicalSheetNo: this.RecTecPlatValue,
                    actionNo: this.$._CboAction.value,
                    description: this.$.descconfid.value,
                    orderNo: this.$.OrderNoid.value
                };
                this.$.createConf_ajax.body = JSON.stringify(createConf);
                this.$.createConf_ajax.generateRequest();
                this.$.gridConfection_request.clearCache();
            },
            _addlines() {
                var codevalue;
                if (this.Type === 3) {
                    codevalue = this.RecTecPlatValue;
                } else {
                    codevalue = this.Code;
                }
                var createRecTecLines = {
                    plateNo: this.RecTecPlatValue,
                    type: this.Type,
                    code: codevalue,
                    description:this.LineDescription,
                    quantity:this.LineQuantity,
                    unitMeasureCode:this.LineMeasureUnit,
                    quantityOfProduction:this.LineQuantityOfProduction,
                    energeticValue:this.LineEnergetic,
                    proteins:this.LineProteins,
                    hydratesOfCarbon:this.LineHydratesOfCarbont,
                    lipids:this.LineLipids,
                    fibers:this.LineFibers,
                    expectedCostPrice:this.LineExpectedCostPrice,
                    currentCostPrice:this.LineCurrentCostPrice,
                    timeExpectedCostPrice:this.LineTimeExpectedCostPrice,
                    timeCurrentCostPrice:this.LineTimeCurrentCostPrice,
                    localizationCode:this.LineLocalizationCode,
                    proteinsByQuantity:this.LineProteinsByQuantity,
                    glicansByQuantity:this.LineGlicansByQuantity,
                    lipidsByQuantity:this.LineLipidsByQuantity,
                    fibersByQuantity:this.LineFibersByQuantity,
                    energeticValue2:this.LineEnergeticValue2,
                    vitaminA:this.LineVitaminA,
                    vitaminD:this.LineVitaminD,
                    cholesterol:this.LineCholesterol,
                    sodium:this.LineSodium,
                    potassium:this.LinePotassium,
                    calcium:this.LineCalcium,
                    iron:this.LineIron,
                    edivel:this.LineEdivel,
                    vitaminAByQuantity:this.LineVitaminAByQuantity,
                    vitaminDByQuantity:this.LineVitaminDByQuantity,
                    cholesterolByQuantity:this.LineCholesterolByQuantity,
                    sodiumByQuantity:this.LineSodiumByQuantity,
                    potassiumByQuantity:this.LinePotassiumByQuantity,
                    ironByQuantity:this.LineIronByQuantity,
                    calciumByQuantity:this.LineCalciumByQuantity,
                    saturatedFattyAcids:this.LineSaturatedFattyAcids,
                    sugarCane:this.LineSugarcane,
                    Salt:this.Linesalt,
                    quantityPlates:this.LineQuantityPlates,
                    preparation:this.LinePreparation
                };
                this.$.createRecTecLines_ajax.body = JSON.stringify(createRecTecLines);
                this.$.createRecTecLines_ajax.generateRequest();
                this.$.GridRecTecOfPlatesLines.clearCache();
            },
            _add() {
                var newRecTec = {
                    plateNo: this.RecTecPlatValue,
                    unitMeasureCode: this.CodMeasureUnitValue,
                    recordTechnicalName: this.recTecNameValue,
                    localizationCode: this.LocalizationsValue,
                    preparationTime: this.TPreparationValue,
                    technicalCooking: this.CookingTechniqueValue,
                    group: this.GroupValue,
                    epoch: this.EpochValue,
                    dosesNo: this.DosesNoValue,
                    preparationTemperature: this.PreparTempValue,
                    finalTemperatureConfection: this.FinalTempConfectValue,
                    serveTemperature: this.ServeTempValue,
                    classFt1: this.ClassFt1Value,
                    classFt2: this.ClassFt2Value,
                    classFt3: this.ClassFt3Value,
                    classFt4: this.ClassFt4Value,
                    classFt5: this.ClassFt5Value,
                    classFt6: this.ClassFt6Value,
                    classFt7: this.ClassFt7Value,
                    observations: this.NotesValue,
                    withGluten: this.WithGlutenChecked,
                    basedCrustaceans: this.BasedCrustaceansChecked,
                    basedEggs: this.BasedEggsChecked,
                    basedFish: this.BasedFishChecked,
                    basedPeanuts: this.BasedPeanutsChecked,
                    basedSoy: this.BasedSoyChecked,
                    basedMilk: this.BasedMilkChecked,
                    basedFruitShardShell: this.BasedFruitShardShellChecked,
                    basedCelery: this.BasedCeleryChecked,
                    basedMustard: this.BasedMustardChecked,
                    basedSesameSeeds: this.BasedSesameSeedsChecked,
                    basedLupine: this.BasedLupineChecked,
                    basedMolluscs: this.BasedMolluscsChecked,
                    basedSulfurDioxeAndSulphites: this.BasedSulfSulphChecked,
                    vitaminA: this.VitaminA,
                    vitaminD: this.VitaminD,
                    cholesterol: this.Cholesterol,
                    sodium: this.Sodium,
                    potassium: this.Potassium,
                    calcium: this.Calcium,
                    iron: this.Iron,
                    proteins: this.Proteins,
                    carbohydrates: this.Carbohydrates,
                    lipids: this.Lipids,
                    foodFiber: this.FoodFiber,
                    priceCostExpected: this.PriceCostExpected,
                    priceCostCurrent: this.PriceCostCurrent,
                    energeticvalue: this.Energeticvalue,
                    energeticvalue2: this.Energeticvalue2,
                    //classFt8: this.recTecNameValue,
                    //image: this.recTecNameValue,
                    //variationPriceCost: this.recTecNameValue,
                    //centerResponsibilityCode: this.recTecNameValue,
                    //description: this.recTecNameValue,
                    //state: this.recTecNameValue,
                };
                this.$.createRecTec_ajax.body = JSON.stringify(newRecTec);
                this.$.createRecTec_ajax.generateRequest();
            },
            _ConflineSelected: function (item) {
                if (item != null) {
                    var oSel = this.GridProceduresConfection.find(x => x.selected);
                    if (oSel != undefined) {
                        oSel.selected = false;
                    }
                    var sel = this.GridProceduresConfection.find(x => x == item);
                    if (sel != undefined) {
                        this.GridProceduresConfection.find(x => x == item).selected = true;
                        this.$.gridConfection_request.clearCache();
                    }
                }
            },
            _lineSelected: function (item) {
                if (item != null) {
                    var oSel = this.data.find(x => x.selected);
                    if (oSel != undefined) {
                        oSel.selected = false;
                    }
                    var sel = this.data.find(x => x == item);
                    if (sel != undefined) {
                        if (sel.type === 3) {
                            this._NotShowProductGrid = true;
                            this._NotShowPlateGrid = false;
                        } else {
                            this._NotShowProductGrid = false;
                            this._NotShowPlateGrid = true;
                        }
                        this.data.find(x => x == item).selected = true;
                        this.$.GridRecTecOfPlatesLines.clearCache();
                    }
                }
            },
            _AllLinesCalculation: function (e) {
                switch (e.target.id) {
                    case "QuantityOfProductionid":
                        //Quantidade de Produção
                        this.LineQuantityOfProduction = e.detail.value.replace(",", ".");
                    break;
                    case "Edivelid":
                        //Edivel
                        this.LineEdivel = e.detail.value.replace(",", ".");
                    break;
                    case "QuantityPlatesid":
                        //Quantidade Prato
                        this.LineQuantityPlates = e.detail.value.replace(",", ".");
                    break;
                    case "CurrentCostPriceid":
                        //Preço Custo Actual
                        this.LineCurrentCostPrice = e.detail.value.replace(",", ".");
                        break;
                    case "TimeCurrentCostPriceid":
                        //TPreço Custo Actual
                        this.LineTimeCurrentCostPrice = e.detail.value.replace(",", ".");
                        break;
                    case "ExpectedCostPriceid":
                        //Preço Custo Esperado
                        this.LineExpectedCostPrice = e.detail.value.replace(",", ".");
                        break;
                    case "TimeExpectedCostPriceid":
                        //TPreço Custo Esperado
                        this.LineTimeExpectedCostPrice = e.detail.value.replace(",", ".");
                        break;
                    case "Ironid":
                        //Ferro
                        this.LineIron = e.detail.value.replace(",", ".");
                        break;
                    case "IronByQuantityid":
                        //Ferro/kG
                        this.LineIronByQuantity = e.detail.value.replace(",", ".");
                        break;
                    case "Calciumid":
                        //Calcio
                        this.LineCalcium = e.detail.value.replace(",", ".");
                        break;
                    case "CalciumByQuantityid":
                        //Calcio/Kg
                        this.LineCalciumByQuantity = e.detail.value.replace(",", ".");
                        break;
                    case "Potassiumid":
                        //Potassio
                        this.LinePotassium = e.detail.value.replace(",", ".");
                        break;
                    case "PotassiumByQuantityid":
                        //Potassio/Kg
                        this.LinePotassiumByQuantity = e.detail.value.replace(",", ".");
                        break;
                    case "Sodiumid":
                        //Sodio
                        this.LineSodium = e.detail.value.replace(",", ".");
                        break;
                    case "SodiumByQuantityid":
                        //Sodio/Kg
                        this.LineSodiumByQuantity = e.detail.value.replace(",", ".");
                        break;
                    case "Cholesterolid":
                        //Colesterol
                        this.LineCholesterol = e.detail.value.replace(",", ".");
                        break;
                    case "CholesterolByQuantityid":
                        //Colesterol/Kg
                        this.LineCholesterolByQuantity = e.detail.value.replace(",", ".");
                        break;
                    case "VitaminDid":
                        //Vitamina D
                        this.LineVitaminD = e.detail.value.replace(",", ".");
                        break;
                    case "VitaminDByQuantityid":
                        //Vitamina D/Kg
                        this.LineVitaminDByQuantity = e.detail.value.replace(",", ".");
                        break;
                    case "VitaminAid":
                        //Vitamina A
                        this.LineVitaminA = e.detail.value.replace(",", ".");
                        break;
                    case "VitaminAByQuantityid":
                        //Vitamina A/Kg
                        this.LineVitaminAByQuantity = e.detail.value.replace(",", ".");
                        break;
                    case "EnergeticValue2id":
                        //Valor Energético 1
                        this.LineEnergeticValue2 = e.detail.value.replace(",", ".");
                        break;
                    case "Fibersid":
                        //Fibras
                        this.LineFibers = e.detail.value.replace(",", ".");
                        break;
                    case "FibersByQuantityid":
                        //Fibras/Kg
                        this.LineFibersByQuantity = e.detail.value.replace(",", ".");
                        break;
                    case "CarbohydratesId":
                        //Glícidos
                        this.LineHydratesOfCarbont = e.detail.value.replace(",", ".");
                        break;
                    case "GlicansByQuantityid":
                        //Glícidos/Kg
                        this.LineGlicansByQuantity = e.detail.value.replace(",", ".");
                        break;
                    case "Proteinsid":
                        //Proteínas
                        this.LineProteins = e.detail.value.replace(",", ".");
                        break;
                    case "ProteinsByQuantityid":
                        //Proteínas/Kg
                        this.LineProteinsByQuantity = e.detail.value.replace(",", ".");
                        break;
                    case "Lipidsid":
                        //Lípidos
                        this.LineLipids = e.detail.value.replace(",", ".");
                        break;
                    case "LipidsByQuantityid":
                        //Lípidos/Kg
                        this.LineLipidsByQuantity = e.detail.value.replace(",", ".");
                        break;
                default:
                    break;
                }
                // Calcula Quantidade de Pratos
                if (this.LineQuantityOfProduction != null && this.LineQuantityOfProduction != "" &&
                    this.LineEdivel != null && this.LineEdivel != "" && this.LineEdivel != "0") {
                    //when Edivel is not null and different of 0
                    this.LineQuantityPlates = this.LineQuantityOfProduction * this.LineEdivel;
                }
                else if (this.LineQuantityOfProduction != null && this.LineQuantityOfProduction != "") {
                    this.LineQuantityPlates = this.LineQuantityOfProduction;
                }
                //Calcula TPreço Custo Actual
                if (this.LineQuantityOfProduction != null && this.LineQuantityOfProduction != "" &&
                    this.LineCurrentCostPrice != null && this.LineCurrentCostPrice != "") {
                    this.LineTimeCurrentCostPrice = this.LineQuantityOfProduction * this.LineCurrentCostPrice;
                }
                //Calcula TPreço Custo Esperado
                if (this.LineQuantityOfProduction != null && this.LineQuantityOfProduction != "" &&
                    this.LineExpectedCostPrice != null && this.LineExpectedCostPrice != "") {
                    this.LineTimeExpectedCostPrice = this.LineQuantityOfProduction * this.LineExpectedCostPrice;
                }
                //Calcula Ferro/kG
                if (this.LineQuantityPlates != null && this.LineQuantityPlates != "" &&
                    this.LineIron != null && this.LineIron != "") {
                    this.LineIronByQuantity = this.LineQuantityPlates * this.LineIron;
                }
                //Calcula Calcio/Kg
                if (this.LineQuantityPlates != null && this.LineQuantityPlates != "" &&
                    this.LineCalcium != null && this.LineCalcium != "") {
                    this.LineCalciumByQuantity = this.LineQuantityPlates * this.LineCalcium;
                }
                //Calcula Potasio/Kg
                if (this.LineQuantityPlates != null && this.LineQuantityPlates != "" &&
                    this.LinePotassium != null && this.LinePotassium != "") {
                    this.LinePotassiumByQuantity = this.LineQuantityPlates * this.LinePotassium;
                }
                //Calcula Sodio/Kg
                if (this.LineQuantityPlates != null && this.LineQuantityPlates != "" &&
                    this.LineSodium != null && this.LineSodium != "") {
                    this.LineSodiumByQuantity = this.LineQuantityPlates * this.LineSodium;
                }
                //Calcula Colesterol/Kg
                if (this.LineQuantityPlates != null && this.LineQuantityPlates != "" &&
                    this.LineCholesterol != null && this.LineCholesterol != "") {
                    this.LineCholesterolByQuantity = this.LineQuantityPlates * this.LineCholesterol;
                }
                //Calcula Vitamina D/Kg
                if (this.LineQuantityPlates != null && this.LineQuantityPlates != "" &&
                    this.LineVitaminD != null && this.LineVitaminD != "") {
                    this.LineVitaminDByQuantity = this.LineQuantityPlates * this.LineVitaminD;
                }
                //Calcula Vitamina A/Kg
                if (this.LineQuantityPlates != null && this.LineQuantityPlates != "" &&
                    this.LineVitaminA != null && this.LineVitaminA != "") {
                    this.LineVitaminAByQuantity = this.LineQuantityPlates * this.LineVitaminA;
                }
                //Calcula Fibras/Kg
                if (this.LineQuantityPlates != null && this.LineQuantityPlates != "" &&
                    this.LineFibers != null && this.LineFibers != "") {
                    this.LineFibersByQuantity = this.LineQuantityPlates * this.LineFibers;
                }
                //Calcula Glícidos/Kg
                if (this.LineQuantityPlates != null && this.LineQuantityPlates != "" &&
                    this.LineHydratesOfCarbont != null && this.LineHydratesOfCarbont != "") {
                    this.LineGlicansByQuantity = this.LineQuantityPlates * this.LineHydratesOfCarbont;
                }
                //Calcula Proteínas/Kg
                if (this.LineQuantityPlates != null && this.LineQuantityPlates != "" &&
                    this.LineProteins != null && this.LineProteins != "") {
                    this.LineProteinsByQuantity = this.LineQuantityPlates * this.LineProteins;
                }
                //Calcula Lípidos/Kg
                if (this.LineQuantityPlates != null && this.LineQuantityPlates != "" &&
                    this.LineLipids != null && this.LineLipids != "") {
                    this.LineLipidsByQuantity = this.LineQuantityPlates * this.LineLipids;
                }
                //Calcula ValorEnergético1
                if (this.LineProteinsByQuantity != null && this.LineProteinsByQuantity != "" &&
                    this.LineGlicansByQuantity != null && this.LineGlicansByQuantity != "" &&
                    this.LineFibersByQuantity != null && this.LineFibersByQuantity != "" &&
                    this.LineLipidsByQuantity != null && this.LineLipidsByQuantity != "") {
                    this.LineEnergeticValue2 = (this.LineProteinsByQuantity * 4) +
                        (this.LineGlicansByQuantity * 4) +
                        (this.LineLipidsByQuantity * 9) +
                        (this.LineFibersByQuantity * 2);
                }
            },
            _GridAllLinesCalculation: function(param) {
                if (this.data != null) {
                    var res = this.data.find(x => x == this._SelectedLine);
                    if (res != null) {
                        var qtyOfPruduction = res.quantityOfProduction;
                        var edivel = res.edivel;
                        var qtyPlates = res.quantityPlates;
                        var currentCostPrice = res.currentCostPrice;
                        var tCurrentCostPrice = res.timeCurrentCostPrice;
                        var expCostPrice = res.expectedCostPrice;
                        var tExpCostPrice = res.timeExpectedCostPrice;
                        var iron = res.iron;
                        var qtyIron = res.ironByQuantity;
                        var calcium = res.calcium;
                        var qtyCalcium = res.calciumByQuantity;
                        var potassium = res.potassium;
                        var qtyPotassium = res.potassiumByQuantity;
                        var sodium = res.sodium;
                        var qtySodium = res.sodiumByQuantity;
                        var cholesterol = res.cholesterol;
                        var qtyCholesterol = res.cholesterolByQuantity;
                        var vitaminD = res.vitaminD;
                        var qtyVitaminD = res.vitaminDByQuantity;
                        var vitaminA = res.vitaminA;
                        var qtyVitaminA = res.vitaminAByQuantity;
                        var energeticValue2 = res.energeticValue2;
                        var fibers = res.fibers;
                        var qtyFibers = res.fibersByQuantity;
                        var glicans = res.hydratesOfCarbon;
                        var qtyGlicans = res.glicansByQuantity;
                        var proteins = res.proteins;
                        var qtyProteins = res.proteinsByQuantity;
                        var lipids = res.lipids;
                        var qtyLipids = res.lipidsByQuantity;
                        switch (param.target.id) {
                            case "GridQuantityOfProductionid":
                                qtyOfPruduction = param.target.value.replace(",", ".");
                                res.quantityOfProduction = qtyOfPruduction;
                            break;
                            case "GridEdivelid":
                                edivel = param.target.value.replace(",", ".");
                                res.edivel = edivel;
                            break;
                            case "GridQuantityPlatesid":
                                qtyPlates = param.target.value.replace(",", ".");
                                res.quantityPlates = qtyPlates;
                                break;
                            case "GridCurrentCostPriceid":
                                currentCostPrice = param.target.value.replace(",", ".");
                                res.currentCostPrice = currentCostPrice;
                                break;
                            case "GridTimeCurrentCostPriceid":
                                tCurrentCostPrice = param.target.value.replace(",", ".");
                                res.timeCurrentCostPrice = tCurrentCostPrice;
                                break;
                            case "GridExpectedCostPriceid":
                                expCostPrice = param.target.value.replace(",", ".");
                                res.expectedCostPrice = expCostPrice;
                                break;
                            case "GridTimeExpectedCostPriceid":
                                tExpCostPrice = param.target.value.replace(",", ".");
                                res.timeExpectedCostPrice = tExpCostPrice;
                                break;
                            case "GridIronid":
                                iron = param.target.value.replace(",", ".");
                                res.iron = iron;
                                break;
                            case "GridIronByQuantityid":
                                qtyIron = param.target.value.replace(",", ".");
                                res.ironByQuantity = qtyIron;
                                break;
                            case "GridCalciumid":
                                calcium = param.target.value.replace(",", ".");
                                res.calcium = calcium;
                                break;
                            case "GridCalciumByQuantityid":
                                qtyCalcium = param.target.value.replace(",", ".");
                                res.calciumByQuantity = qtyCalcium;
                                break;
                            case "GridPotassiumid":
                                potassium = param.target.value.replace(",", ".");
                                res.potassium = potassium;
                                break;
                            case "GridPotassiumByQuantityid":
                                qtyPotassium = param.target.value.replace(",", ".");
                                res.potassiumByQuantity = qtyPotassium;
                                break;
                            case "GridSodiumid":
                                sodium = param.target.value.replace(",", ".");
                                res.sodium = sodium;
                                break;
                            case "GridSodiumByQuantityid":
                                qtySodium = param.target.value.replace(",", ".");
                                res.sodiumByQuantity = qtySodium;
                                break;
                            case "GridCholesterolid":
                                cholesterol = param.target.value.replace(",", ".");
                                res.cholesterol = cholesterol;
                                break;
                            case "GridCholesterolByQuantityid":
                                qtyCholesterol = param.target.value.replace(",", ".");
                                res.cholesterolByQuantity = qtyCholesterol;
                                break;
                            case "GridVitaminDid":
                                vitaminD = param.target.value.replace(",", ".");
                                res.vitaminD = vitaminD;
                                break;
                            case "GridVitaminDByQuantityid":
                                qtyVitaminD = param.target.value.replace(",", ".");
                                res.vitaminDByQuantity = qtyVitaminD;
                                break;
                            case "GridVitaminAid":
                                vitaminA = param.target.value.replace(",", ".");
                                res.vitaminA = vitaminA;
                                break;
                            case "GridVitaminAByQuantityid":
                                qtyVitaminA = param.target.value.replace(",", ".");
                                res.vitaminAByQuantity = qtyVitaminA;
                                break;
                            case "GridEnergeticValue2id":
                                energeticValue2 = param.target.value.replace(",", ".");
                                res.energeticValue2 = energeticValue2;
                                break;
                            case "GridFibersid":
                                fibers = param.target.value.replace(",", ".");
                                res.fibers = fibers;
                                break;
                            case "GridFibersByQuantityid":
                                qtyFibers = param.target.value.replace(",", ".");
                                res.fibersByQuantity = qtyFibers;
                                break;
                            case "GridHydratesOfCarbontid":
                                glicans = param.target.value.replace(",", ".");
                                res.hydratesOfCarbon = glicans;
                                break;
                            case "GridGlicansByQuantityid":
                                qtyGlicans = param.target.value.replace(",", ".");
                                res.glicansByQuantity = qtyGlicans;
                                break;
                            case "GridProteinsid":
                                proteins = param.target.value.replace(",", ".");
                                res.proteins = proteins;
                                break;
                            case "GridProteinsByQuantityid":
                                qtyProteins = param.target.value.replace(",", ".");
                                res.proteinsByQuantity = qtyProteins;
                                break;
                            case "GridLipidsid":
                                lipids = param.target.value.replace(",", ".");
                                res.lipids = lipids;
                                break;
                            case "GridLipidsByQuantityid":
                                qtyLipids = param.target.value.replace(",", ".");
                                res.lipidsByQuantity = qtyLipids;
                                break;
                        default:
                            break;
                        }
                        // Calcula Quantidade de Pratos
                        if (qtyOfPruduction != null && qtyOfPruduction != "" &&
                            edivel != null && edivel != "" && edivel != "0") {
                            //when Edivel is not null and different of 0
                            res.quantityPlates = qtyOfPruduction * edivel;
                            qtyPlates = res.quantityPlates;
                        }
                        else if (qtyOfPruduction != null && qtyOfPruduction != "") {
                            res.quantityPlates = qtyOfPruduction;
                            qtyPlates = res.quantityPlates;
                        }
                        //Calcula TPreço Custo Actual
                        if (qtyOfPruduction != null && qtyOfPruduction != "" &&
                            currentCostPrice != null && currentCostPrice != "") {
                            res.timeCurrentCostPrice = qtyOfPruduction * currentCostPrice;
                        }
                        //Calcula TPreço Custo Esperado
                        if (qtyOfPruduction != null && qtyOfPruduction != "" &&
                            expCostPrice != null && expCostPrice != "") {
                            res.timeExpectedCostPrice = qtyOfPruduction * expCostPrice;
                        }
                        //Calcula Ferro/kG
                        if (qtyPlates != null && qtyPlates != "" &&
                            iron != null && iron != "") {
                            res.ironByQuantity = qtyPlates * iron;
                        }
                        //Calcula Calcio/Kg
                        if (qtyPlates != null && qtyPlates != "" &&
                            calcium != null && calcium != "") {
                            res.calciumByQuantity = qtyPlates * calcium;
                        }
                        //Calcula Potassio/Kg
                        if (qtyPlates != null && qtyPlates != "" &&
                            potassium != null && potassium != "") {
                            res.potassiumByQuantity = qtyPlates * potassium;
                        }
                        //Calcula Sodio/Kg
                        if (qtyPlates != null && qtyPlates != "" &&
                            sodium != null && sodium != "") {
                            res.sodiumByQuantity = qtyPlates * sodium;
                        }
                        //Calcula Colesterol/Kg
                        if (qtyPlates != null && qtyPlates != "" &&
                            cholesterol != null && cholesterol != "") {
                            res.cholesterolByQuantity = qtyPlates * cholesterol;
                        }
                        //Calcula Vitamina D/Kg
                        if (qtyPlates != null && qtyPlates != "" &&
                            vitaminD != null && vitaminD != "") {
                            res.vitaminDByQuantity = qtyPlates * vitaminD;
                        }
                        //Calcula Vitamina A/Kg
                        if (qtyPlates != null && qtyPlates != "" &&
                            vitaminA != null && vitaminA != "") {
                            res.vitaminAByQuantity = qtyPlates * vitaminA;
                        }
                        //Calcula Fibras/Kg
                        if (qtyPlates != null && qtyPlates != "" &&
                            fibers != null && fibers != "") {
                            res.fibersByQuantity = qtyPlates * fibers;
                            qtyFibers = res.fibersByQuantity;
                        }
                        //Calcula Glícidos/Kg
                        if (qtyPlates != null && qtyPlates != "" &&
                            glicans != null && glicans != "") {
                            res.glicansByQuantity = qtyPlates * glicans;
                            qtyGlicans = res.glicansByQuantity;
                        }
                        //Calcula Proteínas/Kg
                        if (qtyPlates != null && qtyPlates != "" &&
                            proteins != null && proteins != "") {
                            res.proteinsByQuantity = qtyPlates * proteins;
                            qtyProteins = res.proteinsByQuantity;
                        }
                        //Calcula Lípidos/Kg
                        if (qtyPlates != null && qtyPlates != "" &&
                            lipids != null && lipids != "") {
                            res.lipidsByQuantity = qtyPlates * lipids;
                            qtyLipids = res.lipidsByQuantity;
                        }
                        //Calcula ValorEnergético1
                        if (qtyProteins != null && qtyProteins != "" &&
                            qtyGlicans != null && qtyGlicans != "" &&
                            qtyFibers != null && qtyFibers != "" &&
                            qtyLipids != null && qtyLipids != "") {
                            res.energeticValue2 = (qtyProteins * 4) +
                                (qtyGlicans * 4) +
                                (qtyLipids * 9) +
                                (qtyFibers * 2);
                        }
                        this.$.GridRecTecOfPlatesLines.clearCache();
                    }
                }
            },
            _UpdateLinesResponse: function (e) {
                if (e.detail.status === 200) {
                    if (this.updatedate.eReasonCode === 1) {
                        this._openToast(this.updatedate.eMessage);
                        this.$.getallgrid_ajax.body = JSON.stringify(this.RecTecPlatValue);
                        this.$.getallgrid_ajax.generateRequest();
                        this.$.GridRecTecOfPlatesLines.clearCache();
                    } else {
                        this._openToastError(this.updatedate.eMessage);
                    }
                }
                else {
                    this._openToastError("Ocorreu um erro ao Editado o registo.");
                }
            },
            _updateConfResponse: function (e) {
                if (e.detail.status === 200) {
                    if (this.updateConf.eReasonCode === 1) {
                        this._openToast(this.updateConf.eMessage);
                        this.$.ajax_GridProcedConfec.body = JSON.stringify(this.RecTecPlatValue);
                        this.$.ajax_GridProcedConfec.generateRequest();
                        this.$.gridConfection_request.clearCache();
                    } else {
                        this._openToastError(this.updateConf.eMessage);
                    }
                }
                else {
                    this._openToastError("Ocorreu um erro ao editar o registo.");
                }
            },
            _createConfResponse: function (e) {
                if (e.detail.status === 200) {
                    if (this.createConf.eReasonCode === 1) {
                        this._openToast(this.createConf.eMessage);
                        this.$.ajax_GridProcedConfec.body = JSON.stringify(this.RecTecPlatValue);
                        this.$.ajax_GridProcedConfec.generateRequest();
                        this.$.gridConfection_request.clearCache();
                        this.$._CboAction.value = "";
                        this.$._CboAction.valueText = "";
                        this.$.descconfid.value = "";
                        this.$.OrderNoid.value = "";

                    } else {
                        this._openToastError(this.createConf.eMessage);
                    }
                }
                else {
                    this._openToastError("Ocorreu um erro ao Criar o registo.");
                }
            },
            _CreateLinesResponse: function (e) {
                if (e.detail.status === 200) {
                    if (this.Createdate.eReasonCode === 1) {
                        this._openToast(this.Createdate.eMessage);
                        this.$.getallgrid_ajax.body = JSON.stringify(this.RecTecPlatValue);
                        this.$.getallgrid_ajax.generateRequest();
                        this.$.GridRecTecOfPlatesLines.clearCache();
                        this._NotShowProduct = false;
                        this._NotShowPlate = true;
                        this.$.Typeid.value = "";
                        this.$.Typeid.valueText = "";
                        this.$.Codeid.value = "";
                        this.$.Codeid.valueText = "";
                        this.$.Descriptionid.value = "";
                        this.$.Quantityid.value = "";
                        this.$.UnitMeasureCodeid.value = "";
                        this.$.UnitMeasureCodeid.valueText = "";
                        this.$.QuantityOfProductionid.value = "";
                        this.$.EnergeticValueid.value = "";
                        this.$.Proteinsid.value = "";
                        this.$.HydratesOfCarbontid.value = "";
                        this.$.Lipidsid.value = "";
                        this.$.Fibersid.value = "";
                        this.$.ExpectedCostPriceid.value = "";
                        this.$.CurrentCostPriceid.value = "";
                        this.$.TimeExpectedCostPriceid.value = "";
                        this.$.TimeCurrentCostPriceid.value = "";
                        this.$.ProteinsByQuantityid.value = "";
                        this.$.GlicansByQuantityid.value = "";
                        this.$.LipidsByQuantityid.value = "";
                        this.$.FibersByQuantityid.value = "";
                        this.$.EnergeticValue2id.value = "";
                        this.$.VitaminAid.value = "";
                        this.$.VitaminDid.value = "";
                        this.$.Cholesterolid.value = "";
                        this.$.Sodiumid.value = "";
                        this.$.Potassiumid.value = "";
                        this.$.Calciumid.value = "";
                        this.$.Ironid.value = "";
                        this.$.Edivelid.value = "";
                        this.$.VitaminAByQuantityid.value = "";
                        this.$.VitaminDByQuantityid.value = "";
                        this.$.CholesterolByQuantityid.value = "";
                        this.$.SodiumByQuantityid.value = "";
                        this.$.PotassiumByQuantityid.value = "";
                        this.$.IronByQuantityid.value = "";
                        this.$.CalciumByQuantityid.value = "";
                        this.$.SaturatedFattyAcidsid.value = "";
                        this.$.Sugarcaneid.value = "";
                        this.$.saltid.value = "";
                        this.$.QuantityPlatesid.value = "";
                        this.$.Preparationid.value = "";
                        this.$.LineLocalizationCodeid.value = "";
                        this.$.LineLocalizationCodeid.valueText = "";
                    } else {
                        this._openToastError(this.Createdate.eMessage);
                    }
                }
                else
                {
                    this._openToastError("Ocorreu um erro ao Criar o registo.");
                }
            },
            _delete: function(e) {
                var index = this.data.indexOf(e.model.item);
                this.data.splice(index, 1);
                // Save to DB
                this.$.updateRecTecLines_ajax.body = JSON.stringify(this.data);
                this.$.updateRecTecLines_ajax.params = { "plateNo": this.RecTecPlatValue };
                this.$.updateRecTecLines_ajax.generateRequest();
                this.$.GridRecTecOfPlatesLines.clearCache();
            },
            _deleteConf: function (e) {
                var index = this.GridProceduresConfection.indexOf(e.model.item);
                this.GridProceduresConfection.splice(index, 1);
                // Save to DB
                this.$.updateConf_ajax.body = JSON.stringify(this.GridProceduresConfection);
                this.$.updateConf_ajax.params = { "plateNo": this.RecTecPlatValue };
                this.$.updateConf_ajax.generateRequest();
                this.$.GridRecTecOfPlatesLines.clearCache();
            },
            _GetRecTecPlatResponse: function (getAllRecTecPlatResult) {
                if (getAllRecTecPlatResult != null) {
                    if (this.getAllRecTecPlatResult != null && this.getAllRecTecPlatResult.length > 0) {
                        this.recTecNameValue = this.getAllRecTecPlatResult[0].recordTechnicalName;
                        this.CodMeasureUnitValue = this.getAllRecTecPlatResult[0].unitMeasureCode;
                        this.LocalizationsValue = this.getAllRecTecPlatResult[0].localizationCode;
                        this.TPreparationValue = this.getAllRecTecPlatResult[0].preparationTime;
                        this.CookingTechniqueValue = this.getAllRecTecPlatResult[0].technicalCooking;
                        this.GroupValue = this.getAllRecTecPlatResult[0].group;
                        this.EpochValue = this.getAllRecTecPlatResult[0].epoch;
                        this.DosesNoValue = this.getAllRecTecPlatResult[0].dosesNo;
                        this.PreparTempValue = this.getAllRecTecPlatResult[0].preparationTemperature;
                        this.FinalTempConfectValue = this.getAllRecTecPlatResult[0].finalTemperatureConfection;
                        this.ServeTempValue = this.getAllRecTecPlatResult[0].serveTemperature;
                        this.ClassFt1Value = this.getAllRecTecPlatResult[0].classFt1;
                        this.ClassFt2Value = this.getAllRecTecPlatResult[0].classFt2;
                        this.ClassFt3Value = this.getAllRecTecPlatResult[0].classFt3;
                        this.ClassFt4Value = this.getAllRecTecPlatResult[0].classFt4;
                        this.ClassFt5Value = this.getAllRecTecPlatResult[0].classFt5;
                        this.ClassFt6Value = this.getAllRecTecPlatResult[0].classFt6;
                        this.ClassFt7Value = this.getAllRecTecPlatResult[0].classFt7;
                        this.NotesValue = this.getAllRecTecPlatResult[0].observations;
                        this.WithGlutenChecked = this.getAllRecTecPlatResult[0].withGluten;
                        this.BasedCrustaceansChecked = this.getAllRecTecPlatResult[0].basedCrustaceans;
                        this.BasedEggsChecked = this.getAllRecTecPlatResult[0].basedEggs;
                        this.BasedFishChecked = this.getAllRecTecPlatResult[0].basedFish;
                        this.BasedPeanutsChecked = this.getAllRecTecPlatResult[0].basedPeanuts;
                        this.BasedSoyChecked = this.getAllRecTecPlatResult[0].basedSoy;
                        this.BasedMilkChecked = this.getAllRecTecPlatResult[0].basedMilk;
                        this.BasedFruitShardShellChecked = this.getAllRecTecPlatResult[0].basedFruitShardShell;
                        this.BasedCeleryChecked = this.getAllRecTecPlatResult[0].basedCelery;
                        this.BasedMustardChecked = this.getAllRecTecPlatResult[0].basedMustard;
                        this.BasedSesameSeedsChecked = this.getAllRecTecPlatResult[0].basedSesameSeeds;
                        this.BasedLupineChecked = this.getAllRecTecPlatResult[0].basedLupine;
                        this.BasedMolluscsChecked = this.getAllRecTecPlatResult[0].basedMolluscs;
                        this.BasedSulfSulphChecked = this.getAllRecTecPlatResult[0].basedSulfurDioxeAndSulphites;
                        this.VitaminA = this.getAllRecTecPlatResult[0].vitaminA;
                        this.VitaminD = this.getAllRecTecPlatResult[0].vitaminD;
                        this.Cholesterol = this.getAllRecTecPlatResult[0].cholesterol;
                        this.Sodium = this.getAllRecTecPlatResult[0].sodium;
                        this.Potassium = this.getAllRecTecPlatResult[0].potassium;
                        this.Calcium = this.getAllRecTecPlatResult[0].calcium;
                        this.Iron = this.getAllRecTecPlatResult[0].iron;
                        this.Proteins = this.getAllRecTecPlatResult[0].proteins;
                        this.Carbohydrates = this.getAllRecTecPlatResult[0].carbohydrates;
                        this.Lipids = this.getAllRecTecPlatResult[0].lipids;
                        this.FoodFiber = this.getAllRecTecPlatResult[0].foodFiber;
                        this.PriceCostExpected = this.getAllRecTecPlatResult[0].priceCostExpected;
                        this.PriceCostCurrent = this.getAllRecTecPlatResult[0].priceCostCurrent;
                        this.Energeticvalue = this.getAllRecTecPlatResult[0].energeticvalue;
                        this.Energeticvalue2 = this.getAllRecTecPlatResult[0].energeticvalue2;
                    }
                }
            }
        });
    });
    </script>
</dom-module>
