
@{
    ViewData["Title"] = "Fichas Técnicas de Pratos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-sorter.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-sort-behavior.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-filter.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-filter-behavior.html" />
<link rel="import" href="~/lib/vaadin-valo-theme/vaadin-checkbox.html">
<link rel="import" href="~/lib/vaadin-checkbox/vaadin-checkbox.html">
<link rel="import" href="~/lib/vaadin-valo-theme/vaadin-text-field.html">
<link rel="import" href="~/lib/vaadin-text-field/vaadin-text-field.html">
<link rel="import" href="~/lib/vaadin-valo-theme/vaadin-date-picker.html" />
<link rel="import" href="~/lib/vaadin-date-picker/vaadin-date-picker.html" />
<link rel="import" href="~/lib/vaadin-valo-theme/vaadin-combo-box.html" />
<link rel="import" href="/lib/vaadin-combo-box/vaadin-combo-box.html" />
<link rel="import" href="/lib/vaadin-combo-box/vaadin-combo-box-behavior.html" />
<link rel="import" href="~/lib/iron-form/iron-form.html" />
<link rel="import" href="~/lib/paper-button/paper-button.html" />
<link rel="import" href="~/lib/iron-flex-layout/iron-flex-layout.html" />
<link rel="import" href="~/lib/iron-flex-layout/iron-flex-layout-classes.html" />
<link rel="import" href="/lib/paper-toast-master/paper-toast.html" />
<link rel="import" href="~/elements/comboboxs/MovementTypeList.html" />
<link rel="import" href="~/elements/comboboxs/ProjectTypeList.html" />
<link rel="import" href="~/elements/comboboxs/ProjectList.html" />

<!--ACORDEÃO-->
<link rel="import" href="/lib/paper-collapse-item/paper-collapse-group.html">
<link rel="import" href="/lib/paper-collapse-item/paper-collapse-item.html">

<!--start ColumnToggle-->
<link rel="import" href="/lib/iron-menu-behavior/iron-menubar-behavior.html" />
<link rel="import" href="/lib/paper-tabs-master/paper-tabs.html" />
<link rel="import" href="/lib/iron-icons/iron-icons.html" />
<link rel="import" href="/lib/iron-behaviors/iron-button-state.html" />
<link rel="import" href="/lib/paper-menu-button/paper-menu-button.html" />
<!--end ColumnToggle-->

<x-rectecplates></x-rectecplates>
<dom-module id="x-rectecplates">
    <template>
        <style>
            /*ACORDEÃO*/
            paper-collapse-item {
                --paper-item: {
                    padding: 0 0;
                };
                --paper-collapse-item-header: {
                    padding: 0 15px;
                    color: #333;
                    background-color: #f5f5f5;
                    border-bottom: solid #ddd 1px;
                    border-top-left-radius: 3px;
                    border-top-right-radius: 3px;

                };
            }
        </style>

        <link rel="stylesheet" href="/lib/bootstrap/dist/css/bootstrap.css" />
        <link rel="stylesheet" href="/lib/font-awesome-4.7.0/css/font-awesome.min.css" />
        <link rel="stylesheet" href="/css/main.css" />

        <paper-toast id="ToastError" style="background-color:red" duration="4000" horizontalAlign="right"></paper-toast>
        <paper-toast id="ToastMessage" duration="4000" horizontalAlign="right"></paper-toast>

        <div class="subMenu" hidden="{{ _permissionssubMenu }}">
            <template is="dom-if" if="{{ _permissions.create }}">
                <paper-button class="tablinks" on-tap="_openCreate" hidden="{{ _NotSelectedprodUnit }}"><i class="fa fa-plus" aria-hidden="true"></i>&nbsp;  Criar Nova</paper-button>
            </template>
            <paper-button id="btnExport" class="tablinks" on-tap="_exportEXCEL" title="Exportar para Excel"><i class="fa fa-file-excel-o" aria-hidden="true"></i>&nbsp; Exportar</paper-button>

            <!--start ColumnToggle-->
            <paper-menu-button class="column-toggle" no-animations id="gridOpcaoGeral">
                <paper-icon-button icon="view-column" slot="dropdown-trigger" alt="Colunas"></paper-icon-button>
                <div class="list-group" slot="dropdown-content">
                    <template is="dom-repeat" items="[[ _toArray(_columns)]]" id="columnsList">
                        <a href="javascript:void(0);" on-tap="_toggleColumn" data-item$="[[item]]" class$="list-group-item [[ _getColumnItemClass( item.key ) ]]">
                            {{ item.value.label }}
                        </a>
                        <hr />
                    </template>
                </div>
            </paper-menu-button>
            <!--end ColumnToggle-->
        </div><!--on-response="_gridListResponse"-->

        <iron-ajax url="/PopulateDropdowns/GetClassificationFilesTechniques" last-response="{{CboClassificationFilesTechniques}}" auto method="post" handle-as="json" content-type="application/json"></iron-ajax>

        <iron-ajax url="/FichasTecnicasPratos/GetAllRecTecPlates" id="ajax_getgrid" auto last-response="{{result}}" method="post" handle-as="json" content-type="application/json"></iron-ajax>

        <iron-ajax url="/FichasTecnicasPratos/ExportToExcel_FichasTecnicasPratos"
                   last-response="{{export}}"
                   id="ajax_Export"
                   method="post"
                   handle-as="json"
                   on-response="_exportEXCELResponse"
                   content-type="application/json">
        </iron-ajax>

        <vaadin-grid id="gridrequest" aria-label="ProfileModelsTabel" items="[[result]]" class="grid" active-item="{{_SelectedLine}}">
            <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.plateNo.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="plateNo">Nº</vaadin-grid-sorter>
                    <vaadin-grid-filter path="plateNo" />
                </template>
                <template>
                    {{item.plateNo}}
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.recordTechnicalName.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="recordTechnicalName">Nome Ficha Técnica</vaadin-grid-sorter>
                    <vaadin-grid-filter path="recordTechnicalName" />
                </template>
                <template>
                    {{item.recordTechnicalName}}
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.classFt1.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="classFt1">Class.FT.1</vaadin-grid-sorter>
                    <vaadin-grid-filter path="classFt1" />
                </template>
                <template>
                    [[_parseclassFt(item.classFt1)]]
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.classFt2.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="classFt2">Class.FT.2</vaadin-grid-sorter>
                    <vaadin-grid-filter path="classFt2" />
                </template>
                <template>
                    [[_parseclassFt(item.classFt2)]]
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.classFt3.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="classFt3">Class.FT.3</vaadin-grid-sorter>
                    <vaadin-grid-filter path="classFt3" />
                </template>
                <template>
                    {{item.classFt3}}
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.classFt4.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="classFt4">Class.FT.4</vaadin-grid-sorter>
                    <vaadin-grid-filter path="classFt4" />
                </template>
                <template>
                    {{item.classFt4}}
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.classFt5.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="classFt5">Class.FT.5</vaadin-grid-sorter>
                    <vaadin-grid-filter path="classFt5" />
                </template>
                <template>
                    {{item.classFt5}}
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.classFt6.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="classFt6">Class.FT.6</vaadin-grid-sorter>
                    <vaadin-grid-filter path="classFt6" />
                </template>
                <template>
                    {{item.classFt6}}
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.classFt7.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="classFt7">Class.FT.7</vaadin-grid-sorter>
                    <vaadin-grid-filter path="classFt7" />
                </template>
                <template>
                    {{item.classFt7}}
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.unitMeasureCode.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="unitMeasureCode">Cód. Unidade Medida</vaadin-grid-sorter>
                    <vaadin-grid-filter path="unitMeasureCode" />
                </template>
                <template>
                    {{item.unitMeasureCode}}
                </template>
            </vaadin-grid-column>
        </vaadin-grid>
    </template>
    <script>
        document.addEventListener('WebComponentsReady', function () {
            Polymer({
                is: 'x-rectecplates',
                properties: {
                    _SelectedLine: {
                        observer: '_rowSelected'
                    },
                    _permissions: {
                        type: Array,
                        value: @Html.Raw(Json.Serialize(ViewBag.UPermissions)),
                    },
                    _columns: {
                        type: Object,
                        value: function () {
                            return {};
                        }
                    },
                },

                ready: function () {
                    debugger;

                    /*ColumnToggle*/
                    this._startColumnToggle();

                    var _this = this;
                    $(window).resize(function () {
                        _this.fixGridToBottom();
                    });
                    $(window).trigger('resize');

                    this.$.grid_databound_ajax.body = JSON.stringify({ area: parseInt(this._areaid), folhadehora: this._folhadehoraid, estado: parseInt(this._estado), validacao: parseInt(this._validacao), integracaoajuda: parseInt(this._integracaoajuda), integracaokms: parseInt(this._integracaokms), historico: parseInt(this._historico) });
                    this.$.grid_databound_ajax.generateRequest();
                },

                fixGridToBottom: function () {
                    var grid_el = $(this.$.gridrequest);
                    var parentHeight = $(this).offsetParent().height();
                    var offsetTop = $(this).offset().top;
                    var height = parentHeight - offsetTop;
                    grid_el.height(height);
                },

                _openCreate: function (item) {
                    if (item != null) {
                        window.location.href = "/FichasTecnicasPratos/FichaTecnica";
                    }
                },
                _parseclassFt: function (param) {
                    if (param != undefined && this.CboClassificationFilesTechniques != undefined) {
                        var sel = this.CboClassificationFilesTechniques.find(x => x.id == param);
                        if (sel != undefined) {
                            return sel.value;
                        }
                    }
                    return "";
                },
                _rowSelected: function (item) {
                    if (item != null) {
                        window.location.href = "/FichasTecnicasPratos/FichaTecnica/" + item.plateNo;
                    }
                },

                _exportEXCEL: function () {
                    //debugger;
                    this.result[0].ColunasEXCEL = this._columns;

                    this.$.ajax_Export.body = JSON.stringify(this.result);
                    this.$.ajax_Export.generateRequest();
                },

                _exportEXCELResponse: function (e) {
                    //debugger
                    var FileName = this.export;
                    location.href = '../FichasTecnicasPratos/ExportToExcelDownload_FichasTecnicasPratos?sFileName=' + FileName;
                },

                /*start - ColumnToggle*/
                _startColumnToggle: function () {
                    debugger;
                    var columns = {
                        "plateNo": { hidden: false, label: "Nº" },
                        "recordTechnicalName": { hidden: false, label: "Nome Ficha Técnica" },
                        "classFt1": { hidden: false, label: "Class.FT.1" },
                        "classFt2": { hidden: false, label: "Class.FT.2" },
                        "classFt3": { hidden: false, label: "Class.FT.3" },
                        "classFt4": { hidden: false, label: "Class.FT.4" },
                        "classFt5": { hidden: false, label: "Class.FT.5" },
                        "classFt6": { hidden: false, label: "Class.FT.6" },
                        "classFt7": { hidden: false, label: "Class.FT.7" },
                        "unitMeasureCode": { hidden: false, label: "Cód. Unidade Medida" }
                    };

                    if (localStorage["rectecplates.ToggleColumn"]) {
                        var keys = Object.keys(columns);
                        var storedColumns = JSON.parse(localStorage["rectecplates.ToggleColumn"]);
                        for (var i = 0; i < keys.length; i++) {
                            columns[keys[i]] = storedColumns[keys[i]];
                        }
                    };
                    this._columns = columns;
                },
                _toggleColumn: function (event) {
                    debugger;
                    var columnIndex = JSON.parse(event.target.dataset.item).key;
                    event.path[0].classList.toggle("selected");
                    this.set('_columns.' + columnIndex + '.hidden', (!this._columns[columnIndex].hidden));
                    if (typeof (Storage) !== "undefined") {
                        localStorage["rectecplates.ToggleColumn"] = JSON.stringify(this._columns);
                    }
                },
                _getColumnItemClass: function (columnIndex) {
                    debugger;
                    return !this._columns[columnIndex].hidden ? "selected" : "";
                },
                _toArray: function (obj) {
                    debugger;
                    return Object.keys(obj).map(function (key) {
                        return {
                            key: key,
                            value: obj[key]
                        };
                    });
                },
                /* end - ColumnToggle */

            });
        });
    </script>
</dom-module>