
@{
    ViewData["Title"] = "DiarioProjeto";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*Themes*@
<link rel="import" href="~/lib/vaadin-themable-mixin/vaadin-themable-mixin.html" />
<link rel="import" href="~/lib/vaadin-material-theme/vaadin-date-picker.html" />
@*Themes*@

<link rel="import" href="~/lib/vaadin-grid/vaadin-grid.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-sorter.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-sort-behavior.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-filter.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-filter-behavior.html" />
<link rel="import" href="~/lib/vaadin-date-picker/vaadin-date-picker.html" />

<link rel="import" href="/lib/vaadin-combo-box/vaadin-combo-box.html" />
<link rel="import" href="/lib/vaadin-combo-box/vaadin-combo-box-behavior.html" />

<link rel="import" href="~/lib/paper-input/paper-input.html" />
<link rel="import" href="~/lib/iron-form/iron-form.html" />
<link rel="import" href="~/lib/paper-checkbox-master/paper-checkbox.html" />
<link rel="import" href="~/lib/paper-button/paper-button.html" />
<link rel="import" href="~/lib/iron-flex-layout/iron-flex-layout.html" />
<link rel="import" href="~/lib/iron-flex-layout/iron-flex-layout-classes.html" />
<link rel="import" href="/lib/paper-toast-master/paper-toast.html" />

<link rel="import" href="~/elements/comboboxs/MovementTypeList.html" />
<link rel="import" href="~/elements/comboboxs/ProjectTypeList.html" />
<link rel="import" href="~/elements/comboboxs/ProjectList.html" />

<h1 class="title">Diário de Projeto</h1>

<x-projdiary></x-projdiary>
<dom-module id="x-projdiary">
    <template>
        <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
        <link rel="stylesheet" href="~/lib/font-awesome-4.7.0/css/font-awesome.min.css" />
        <link rel="stylesheet" href="~/css/main.css" />

        <style>
            input[readonly] {
                border: 2px solid transparent;
            }

            input {
                font: inherit;
            }

            .editGrid paper-input {
                max-width: 200px !important;
                font-size: 13px !important;
            }

            .editGrid vaadin-combo-box {
                max-width: 200px !important;
                font-size: 13px !important;
            }

            vaadin-grid#projectDiaryProject vaadin-grid-sorter {
                margin: 0 auto;
                white-space: nowrap;
            }

            vaadin-grid#projectDiaryProject vaadin-grid-filter {
                margin: 0 auto;
                white-space: nowrap;
            }

            vaadin-grid#projectDiaryProject paper-checkbox {
                text-align: center;
            }

            --vaadin-grid-header-cell: {
                font-size: 12px;
            }
        </style>

        <div class="subMenu">
            <paper-button class="tablinks" on-tap="_registerDiary"><i class="fa fa-check-square" aria-hidden="true"></i> Registar Linhas de Diário</paper-button>
            <paper-button class="tablinks" on-tap="_getMovements"><i class="fa fa-get-pocket" aria-hidden="true"></i> Obter Movimentos</paper-button>
        </div>

        @*Populate Dropdown*@
        <iron-ajax url="/PopulateDropdowns/GetProjectList"
                   last-response="{{response}}"
                   auto
                   method="post"
                   handle-as="json"
                   content-type="application/json"></iron-ajax>

        <iron-ajax url="/PopulateDropdowns/GetProjectDiaryMovements"
                   last-response="{{response2}}"
                   auto
                   method="post"
                   handle-as="json"
                   content-type="application/json"></iron-ajax>

        <iron-ajax url="/PopulateDropdowns/GetProjectDiaryTypes"
                   last-response="{{response3}}"
                   auto
                   method="post"
                   handle-as="json"
                   content-type="application/json"></iron-ajax>

        @*CODE OPTIONS*@
        <iron-ajax url="/PopulateDropdowns/GetCGAccountCode"
                   id="ajax_code_options"
                   last-response="{{codeOptions}}"
                   method="post"
                   on-response="_updateMeasureUnit"
                   handle-as="json"
                   params='{}'
                   content-type="application/json"></iron-ajax>
        @*CODE OPTIONS*@

        @*Temp*@
        <iron-ajax url="/PopulateDropdowns/GetCGAccountCode"
                   id="ajax_account_options"
                   last-response="{{accountCode}}"
                   method="post"
                   handle-as="json"
                   auto
                   params='{}'
                   content-type="application/json"></iron-ajax>
        <iron-ajax url="/PopulateDropdowns/GetResourcesCode"
                   id="ajax_resource_options"
                   last-response="{{resourceCode}}"
                   method="post"
                   handle-as="json"
                   auto
                   params='{}'
                   content-type="application/json"></iron-ajax>
        <iron-ajax url="/PopulateDropdowns/GetProductsCode"
                   id="ajax_products_options"
                   last-response="{{productCode}}"
                   method="post"
                   auto
                   handle-as="json"
                   params='{}'
                   content-type="application/json"></iron-ajax>

        <iron-ajax url="/PopulateDropdowns/Alpha"
                   id="ajax_products_options"
                   last-response="{{allofit}}"
                   method="post"
                   auto
                   handle-as="json"
                   params='{}'
                   content-type="application/json"></iron-ajax>
        @*Temp*@


        <iron-ajax url="/PopulateDropdowns/GetMeasureUnits"
                   last-response="{{MeasureUnit}}"
                   auto
                   method="post"
                   handle-as="json"
                   content-type="application/json"></iron-ajax>

        <iron-ajax url="/PopulateDropdowns/GetLocations"
                   last-response="{{Locations}}"
                   auto
                   method="post"
                   handle-as="json"
                   content-type="application/json"></iron-ajax>

        <iron-ajax url="/PopulateDropdowns/GetRegionCode"
                   last-response="{{RegionData}}"
                   auto
                   method="post"
                   handle-as="json"
                   content-type="application/json">
        </iron-ajax>
        <iron-ajax url="/PopulateDropdowns/GetFunctionalAreaCode"
                   last-response="{{FunctionalAreaCodeData}}"
                   auto
                   method="post"
                   handle-as="json"
                   content-type="application/json">
        </iron-ajax>
        <iron-ajax url="/PopulateDropdowns/GetResponsabilityCenterCode"
                   last-response="{{ResponsabilityCenterData}}"
                   auto
                   method="post"
                   handle-as="json"
                   content-type="application/json">
        </iron-ajax>
        <iron-ajax url="/PopulateDropdowns/GetContabGroup"
                   last-response="{{ContabGroupData}}"
                   auto
                   method="post"
                   handle-as="json"
                   content-type="application/json">
        </iron-ajax>
        @*Populate Dropdown*@

        <iron-form id="formGeral">
            <form>
                <h2 class="separator">Novo Registo</h2>
                <table class="table inlineForm">
                    <tr>
                        <td width="">
                            <vaadin-combo-box id="projectList" name="projectList" items="[[response]]" on-value-changed="_projectChange" item-value-path="id" item-label-path="value" label="Nº Projeto" disabled="{{disabledProjectNo}}" value="{{projectNumber}}">
                                <template>
                                    <paper-icon-item>
                                        <paper-item-body two-line>
                                            <div>[[item.value]]</div>
                                        </paper-item-body>
                                    </paper-icon-item>
                                </template>
                            </vaadin-combo-box>
                        </td>
                        <td width=""><vaadin-date-picker label="Data" id="dpDate" name="dpDate" value="{{date}}"></vaadin-date-picker></td>
                        <td width="">
                            <vaadin-combo-box id="projectMovementList" name="projectMovementList" items="[[response2]]" item-value-path="id" item-label-path="value" label="Tipo Movimento" value="{{projectMovementNumber}}">
                                <template>
                                    <paper-icon-item>
                                        <paper-item-body two-line>
                                            <div>[[item.value]]</div>
                                        </paper-item-body>
                                    </paper-icon-item>
                                </template>
                            </vaadin-combo-box>
                        </td>
                        <td width="">
                            <vaadin-combo-box id="projectTypeList" name="projectTypeList" items="[[response3]]" on-value-changed="_projectTypeChange" item-value-path="id" item-label-path="value" label="Tipo" value="{{projectTypeNumber}}">
                                <template>
                                    <paper-icon-item>
                                        <paper-item-body two-line>
                                            <div>[[item.value]]</div>
                                        </paper-item-body>
                                    </paper-icon-item>
                                </template>
                            </vaadin-combo-box>
                        </td>
                        <td width="">
                            <vaadin-combo-box id="piCode" name="piCode" items="[[codeOptions]]" item-value-path="id" on-value-changed="_codeChange" item-label-path="value" label="Código" value="{{codeNumber}}">
                                <template>
                                    <paper-icon-item>
                                        <paper-item-body two-line>
                                            <div>[[item.id]]</div>
                                            <div secundary>[[item.value]]</div>
                                        </paper-item-body>
                                    </paper-icon-item>
                                </template>
                            </vaadin-combo-box>
                        </td>
                    </tr>
                    <tr>
                        <td width=""><paper-input id="piDescription" type="text" name="piDescription" required label="Descrição" value="{{description}}"></paper-input></td>
                        <td width="">
                            <vaadin-combo-box id="piContabGroup" name="piContabGroup" items="[[ContabGroupData]]" item-value-path="id" value="{{codeProjectContabGroup}}" item-label-path="value" label="Grupo Contab">
                                <template>
                                    <paper-icon-item>
                                        <paper-item-body two-line>
                                            <div>[[item.id]]</div>
                                        </paper-item-body>
                                    </paper-icon-item>
                                </template>
                            </vaadin-combo-box>
                            @*<paper-input id="piContabGroup" type="number" name="piContabGroup" disabled label="Grupo Contab." value="{{projectContabGroup}}"></paper-input>*@
                        </td>
                        <td width=""><paper-input id="piQuantity" type="number" name="piQuantity" required label="Quantidade" value="{{quantity}}"></paper-input></td>
                        <td width="">
                            <vaadin-combo-box id="piCodeMeasurementUnit" name="piCodeMeasurementUnit" items="[[MeasureUnit]]" item-value-path="id" value="{{codeMeasurementUnit}}" item-label-path="value" label="Cód. Unidade Medida">
                                <template>
                                    <paper-icon-item>
                                        <paper-item-body two-line>
                                            <div>[[item.value]]</div>
                                        </paper-item-body>
                                    </paper-icon-item>
                                </template>
                            </vaadin-combo-box>
                        </td>
                        <td width="">
                            <vaadin-combo-box id="piCodeLocation" name="piCodeLocation" items="[[Locations]]" item-value-path="id" value="{{codeLocation}}" item-label-path="value" label="Cód. Localização">
                                <template>
                                    <paper-icon-item>
                                        <paper-item-body two-line>
                                            <div>[[item.value]]</div>
                                        </paper-item-body>
                                    </paper-icon-item>
                                </template>
                            </vaadin-combo-box>
                        </td>
                    </tr>
                    <tr>
                        <td width="">
                            <vaadin-combo-box id="piCodeRegion" name="piCodeRegion" items="[[RegionData]]" item-value-path="id" item-label-path="value" value="{{codeRegion}}" label="Cód. Região">
                                <template>
                                    <paper-icon-item>
                                        <paper-item-body two-line>
                                            <div>[[item.value]]</div>
                                        </paper-item-body>
                                    </paper-icon-item>
                                </template>
                            </vaadin-combo-box>
                        </td>
                        <td width="">
                            <vaadin-combo-box id="piFuncArea" name="piFuncArea" items="[[FunctionalAreaCodeData]]" item-value-path="id" value="{{codeFuncArea}}" item-label-path="value" label="Cód. Área Funcional">
                                <template>
                                    <paper-icon-item>
                                        <paper-item-body two-line>
                                            <div>[[item.value]]</div>
                                        </paper-item-body>
                                    </paper-icon-item>
                                </template>
                            </vaadin-combo-box>
                        </td>
                        <td width="">
                            <vaadin-combo-box id="piCodeResponsabilityCenter" name="piCodeResponsabilityCenter" items="[[ResponsabilityCenterData]]" value="{{codeResponsabilityCenter}}" item-value-path="id" item-label-path="value" label="Cód. Centro Responsabilidade">
                                <template>
                                    <paper-icon-item>
                                        <paper-item-body two-line>
                                            <div>[[item.value]]</div>
                                        </paper-item-body>
                                    </paper-icon-item>
                                </template>
                            </vaadin-combo-box>
                        </td>
                        <td width=""><paper-input class="alignRight" type="number" label="Custo Unitário" required id="piUnitCost" name="piUnitCost" value="{{unitCost}}"><div slot="suffix">€</div></paper-input></td>
                        <td width=""><paper-input class="alignRight" type="number" label="Custo Total  " required id="piTotalCost" name="piTotalCost" value="{{totalCost}}"><div slot="suffix">€</div></paper-input></td>
                    </tr>
                    <tr>
                        <td width=""><paper-input class="alignRight" type="number" label="Preço Unitário  " required id="piUnitPrice" name="piUnitPrice" value="{{unitPrice}}"><div slot="suffix">€</div></paper-input></td>
                        <td width=""><paper-input class="alignRight" type="number" label="Preço Total  " required id="piTotalPrice" name="piTotalPrice" value="{{totalPrice}}"><div slot="suffix">€</div></paper-input></td>
                        <td width=""><paper-checkbox id="pcInvoice" checked="{{billable}}">Faturável</paper-checkbox></td>
                        @*<td width=""><paper-input id="piInvoiceClientNo" type="text" name="piInvoiceClientNo" required label="Fatura a Nº Cliente" maxlength="20" value="{{invoiceClientNo}}"></paper-input></td>*@
                        <td><paper-button class="btnSave" raised on-tap="_add">Criar</paper-button></td>
                    </tr>
                </table>
            </form>
        </iron-form>

        <h2 class="separator">Movimentos do Utilizador X</h2>

        <iron-ajax url="/Projetos/GetAllProjectDiary"
                   last-response="{{result}}"
                   id="ajax_getall"
                   auto
                   method="post"
                   handle-as="json"
                   content-type="application/json"></iron-ajax>

        <iron-ajax url="/Projetos/UpdateProjectDiary"
                   last-response="{{result}}"
                   id="ajax_update"
                   method="post"
                   on-response="_updateResponse"
                   handle-as="json"
                   content-type="application/json"></iron-ajax>

        <iron-ajax url="/Projetos/GetRelatedProjectInfo"
                   last-response="{{related}}"
                   id="ajax_related"
                   method="post"
                   on-response="_updateRelatedResponse"
                   handle-as="json"
                   content-type="application/json"></iron-ajax>

        <iron-ajax url="/Projetos/RegisterDiaryLines"
                   last-response="{{data}}"
                   id="ajax_register"
                   method="post"
                   on-response="_updateRegisterResponse"
                   handle-as="json"
                   content-type="application/json"></iron-ajax>

        <iron-ajax url="/Projetos/RegisterDiaryLines"
                   last-response="{{data}}"
                   id="ajax_register"
                   method="post"
                   on-response="_updateRegisterResponse"
                   handle-as="json"
                   content-type="application/json"></iron-ajax>

        <iron-ajax url="/Projetos/GetMovements"
                   last-response="{{movementLines}}"
                   id="ajax_movementLines"
                   method="post"
                   handle-as="json"
                   loading="{{isloading}}"
                   on-response="_movementLinesResponse"
                   content-type="application/json"></iron-ajax>

        <vaadin-grid id="projectDiaryProject" aria-label="Tabela Numerações" items="[[result]]" class="editGrid">
            <vaadin-grid-column width="110px" resizable>
                <template class="header">
                    <vaadin-grid-sorter path="projectNo">Nº Projeto</vaadin-grid-sorter>
                    <vaadin-grid-filter path="projectNo"></vaadin-grid-filter>
                </template>
                <template>
                    <vaadin-combo-box items="[[response]]" on-value-changed="_projectChange" item-value-path="id" item-label-path="value" disabled value="{{item.projectNo}}">
                        <template>
                            <paper-icon-item>
                                <paper-item-body two-line>
                                    <div>[[item.value]]</div>
                                </paper-item-body>
                            </paper-icon-item>
                        </template>
                    </vaadin-combo-box>
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="160px" resizable>
                <template class="header">
                    <vaadin-grid-sorter path="date">Data</vaadin-grid-sorter>
                    <vaadin-grid-filter path="date"></vaadin-grid-filter>
                </template>
                <template>
                    @*<input type="date" id="dpDate" name="dpDate" value="{{item.date}}"/>*@
                    <vaadin-date-picker id="dpDate" name="dpDate" value="{{item.date}}"></vaadin-date-picker>
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="200px" resizable>
                <template class="header">
                    <vaadin-grid-sorter path="movementType">Tipo Movimento</vaadin-grid-sorter>
                    @*<vaadin-grid-filter path="movementType"></vaadin-grid-filter>*@
                </template>
                <template>
                    @*<cb-movetype name="movementType" indexvalue="{{item.movementType}}"></cb-movetype>*@
                    <vaadin-combo-box items="[[response2]]" item-value-path="id" item-label-path="value" label="Tipo" value="{{item.movementType}}">
                        <template>
                            <paper-icon-item>
                                <paper-item-body two-line>
                                    <div>[[item.value]]</div>
                                </paper-item-body>
                            </paper-icon-item>
                        </template>
                    </vaadin-combo-box>
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="200px" resizable>
                <template class="header">
                    <vaadin-grid-sorter path="type">Tipo</vaadin-grid-sorter>
                    @*<vaadin-grid-filter path="type"></vaadin-grid-filter>*@
                </template>
                <template>
                    <vaadin-combo-box id="type[[index]]" items="[[response3]]" on-value-changed="_lineProjectTypeChange" item-value-path="id" item-label-path="value" value="{{item.type}}">
                        <template>
                            <paper-icon-item>
                                <paper-item-body two-line>
                                    <div>[[item.value]]</div>
                                </paper-item-body>
                            </paper-icon-item>
                        </template>
                    </vaadin-combo-box>
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="200px" resizable>
                <template class="header">
                    <vaadin-grid-sorter path="code">Código</vaadin-grid-sorter>
                    <vaadin-grid-filter path="code"></vaadin-grid-filter>
                </template>
                <template>
                    <vaadin-combo-box id="code[[index]]" items="[[allofit.0]]" item-value-path="id" item-label-path="value" value="{{item.code}}">
                        <template>
                            <paper-icon-item>
                                <paper-item-body two-line>
                                    <div>[[item.value]]</div>
                                </paper-item-body>
                            </paper-icon-item>
                        </template>
                    </vaadin-combo-box>
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="200px" resizable>
                <template class="header">
                    <vaadin-grid-sorter path="description">Descrição</vaadin-grid-sorter>
                    <vaadin-grid-filter path="description"></vaadin-grid-filter>
                </template>
                <template>
                    <paper-input name="description" type="text" required value="{{item.description}}" disabled></paper-input>
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="200px" resizable>
                <template class="header">
                    <vaadin-grid-sorter path="projectContabGroup">Grupo Contab.</vaadin-grid-sorter>
                    <vaadin-grid-filter path="projectContabGroup"></vaadin-grid-filter>
                </template>
                <template>
                    @*<paper-input type="number" name="contabGroup" disabled value="{{item.projectContabGroup}}"></paper-input>*@
                    <vaadin-combo-box items="[[ContabGroupData]]" item-value-path="code" item-label-path="code" value="{{item.projectContabGroup}}">
                        <template>
                            <paper-icon-item>
                                <paper-item-body two-line>
                                    <div>[[item.code]]</div>
                                </paper-item-body>
                            </paper-icon-item>
                        </template>
                    </vaadin-combo-box>
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="160px" resizable>
                <template class="header">
                    <vaadin-grid-sorter path="quantity">Quantidade</vaadin-grid-sorter>
                    <vaadin-grid-filter path="quantity"></vaadin-grid-filter>
                </template>
                <template>
                    <paper-input type="number" name="quantity" required value="{{item.quantity}}"></paper-input>
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="160px" resizable>
                <template class="header">
                    <vaadin-grid-sorter path="measurementUnitCode">Cód. Unidade Medida</vaadin-grid-sorter>
                    <vaadin-grid-filter path="measurementUnitCode"></vaadin-grid-filter>
                </template>
                <template>
                    @*<paper-input type="text" name="measurementUnitCode" required maxlength="20" value="{{item.measurementUnitCode}}"></paper-input>*@
                    <vaadin-combo-box items="[[MeasureUnit]]" item-value-path="code" item-label-path="description" value="{{item.measurementUnitCode}}">
                        <template>
                            <paper-icon-item>
                                <paper-item-body two-line>
                                    <div>[[item.description]]</div>
                                </paper-item-body>
                            </paper-icon-item>
                        </template>
                    </vaadin-combo-box>
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="160px" resizable>
                <template class="header">
                    <vaadin-grid-sorter path="locationCode">Cód. Localização</vaadin-grid-sorter>
                    <vaadin-grid-filter path="locationCode"></vaadin-grid-filter>
                </template>
                <template>
                    @*<paper-input type="text" name="locationCode" required maxlength="20" value="{{item.locationCode}}"></paper-input>*@
                    <vaadin-combo-box items="[[Locations]]" item-value-path="code" item-label-path="name" value="{{item.locationCode}}">
                        <template>
                            <paper-icon-item>
                                <paper-item-body two-line>
                                    <div>[[item.name]]</div>
                                </paper-item-body>
                            </paper-icon-item>
                        </template>
                    </vaadin-combo-box>
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="160px" resizable>
                <template class="header">
                    <vaadin-grid-sorter path="regionCode">Cód. Região</vaadin-grid-sorter>
                    <vaadin-grid-filter path="regionCode"></vaadin-grid-filter>
                </template>
                <template>
                    @*<paper-input type="text" name="regionCode" disabled value="{{item.regionCode}}"></paper-input>*@
                    <vaadin-combo-box items="[[RegionData]]" item-value-path="id" item-label-path="value" value="{{item.regionCode}}">
                        <template>
                            <paper-icon-item>
                                <paper-item-body two-line>
                                    <div>[[item.value]]</div>
                                </paper-item-body>
                            </paper-icon-item>
                        </template>
                    </vaadin-combo-box>
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="160px" resizable>
                <template class="header">
                    <vaadin-grid-sorter path="functionalAreaCode">Cód. Área Funcional</vaadin-grid-sorter>
                    <vaadin-grid-filter path="functionalAreaCode"></vaadin-grid-filter>
                </template>
                <template>
                    @*<paper-input type="text" name="functionalAreaCode" disabled value="{{item.functionalAreaCode}}"></paper-input>*@
                    <vaadin-combo-box items="[[FunctionalAreaCodeData]]" item-value-path="id" item-label-path="value" value="{{item.functionalAreaCode}}">
                        <template>
                            <paper-icon-item>
                                <paper-item-body two-line>
                                    <div>[[item.value]]</div>
                                </paper-item-body>
                            </paper-icon-item>
                        </template>
                    </vaadin-combo-box>
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="160px" resizable>
                <template class="header">
                    <vaadin-grid-sorter path="responsabilityCenterCode">Cód. Centro Responsabilidade</vaadin-grid-sorter>
                    <vaadin-grid-filter path="responsabilityCenterCode"></vaadin-grid-filter>
                </template>
                <template>
                    @*<paper-input type="text" name="responsabilityCenterCode" disabled value="{{item.responsabilityCenterCode}}"></paper-input>*@
                    <vaadin-combo-box items="[[ResponsabilityCenterData]]" item-value-path="id" item-label-path="value" value="{{item.responsabilityCenterCode}}">
                        <template>
                            <paper-icon-item>
                                <paper-item-body two-line>
                                    <div>[[item.value]]</div>
                                </paper-item-body>
                            </paper-icon-item>
                        </template>
                    </vaadin-combo-box>
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="160px" resizable>
                <template class="header">
                    <vaadin-grid-sorter path="unitCost">Custo Unitário</vaadin-grid-sorter>
                    <vaadin-grid-filter path="unitCost"></vaadin-grid-filter>
                </template>
                <template>
                    <paper-input class="alignRight" type="number" required name="unitCost" value="{{item.unitCost}}"><div slot="suffix">€</div></paper-input>
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="160px" resizable>
                <template class="header">
                    <vaadin-grid-sorter path="totalCost">Custo Total</vaadin-grid-sorter>
                    <vaadin-grid-filter path="totalCost"></vaadin-grid-filter>
                </template>
                <template>
                    <paper-input class="alignRight" type="number" required name="totalCost" value="{{item.totalCost}}"><div slot="suffix">€</div></paper-input>
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="160px" resizable>
                <template class="header">
                    <vaadin-grid-sorter path="unitPrice">Preço Unitário</vaadin-grid-sorter>
                    <vaadin-grid-filter path="unitPrice"></vaadin-grid-filter>
                </template>
                <template>
                    <paper-input class="alignRight" type="number" required name="unitPrice" value="{{item.unitPrice}}"><div slot="suffix">€</div></paper-input>
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="160px" resizable>
                <template class="header">
                    <vaadin-grid-sorter path="totalPrice">Preço Total</vaadin-grid-sorter>
                    <vaadin-grid-filter path="totalPrice"></vaadin-grid-filter>
                </template>
                <template>
                    <paper-input class="alignRight" type="number" required name="totalPrice" value="{{item.totalPrice}}"><div slot="suffix">€</div></paper-input>
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="75px" resizable>
                <template class="header">
                    <p class="alignCenter">Faturável</p>
                    <vaadin-grid-filter path="billable" value="[[_filterActive]]">
                        <paper-checkbox checked="{{_filterActive}}"></paper-checkbox>
                    </vaadin-grid-filter>
                </template>
                <template>
                    <paper-checkbox name="billable" checked="{{item.billable}}"></paper-checkbox>
                </template>
            </vaadin-grid-column>

            @*<vaadin-grid-column width="130px" resizable>
                    <template class="header">
                        <vaadin-grid-sorter path="invoiceToClientNo">Fatura a Nº Cliente</vaadin-grid-sorter>
                        <vaadin-grid-filter path="invoiceToClientNo"></vaadin-grid-filter>
                    </template>
                    <template>
                        <paper-input type="text" name="invoiceToClientNo" required maxlength="20" value="{{item.invoiceToClientNo}}"></paper-input>
                    </template>
                </vaadin-grid-column>*@

            <vaadin-grid-column width="100px" resizable>
                <template class="header">
                </template>
                <template>
                    <paper-button class="btnRemove" raised on-tap="_delete">Eliminar</paper-button>
                </template>
            </vaadin-grid-column>
        </vaadin-grid>
        <div class="marginSpace">
            <paper-button raised id="btnAddNew" class="btnEdit" on-tap="_update"><i class="fa fa-floppy-o" aria-hidden="true"></i>&nbsp; Guardar</paper-button>
            <paper-button raised id="btnCancel" class="btnRemove" on-tap="_cancel"><i class="fa fa-undo" aria-hidden="true"></i>&nbsp; Cancelar</paper-button>
        </div>
        <paper-toast id="ToastMessage" duration="4000" horizontalAlign="right"></paper-toast>
    </template>

    <script>
        document.addEventListener('WebComponentsReady', function () {
            Polymer({
                is: 'x-projdiary',
                properties: {
                    projectNo: {
                        type: String,
                        notifiy: true,
                        value: ""
                    },
                    disabledProjectNo: {
                        type: Boolean,
                        notify: true,
                        value: false
                    },
                    date: {
                        type: String,
                        notify: true,
                        value: ""
                    },
                    movementType: {
                        type: String,
                        notifiy: true,
                        value: ""
                    },
                    type: {
                        type: String,
                        notifiy: true,
                        value: ""
                    },
                    code: {
                        type: String,
                        notify: true,
                        value: ""
                    },
                    description: {
                        type: String,
                        notify: true,
                        value: ""
                    },
                    codeProjectContabGroup: {
                        type: String,
                        notify: true,
                        value: ""
                    },
                    quantity: {
                        type: Number,
                        notify: true,
                        value: ""
                    },
                    codeMeasurementUnit: {
                        type: String,
                        notify: true,
                        value: ""
                    },
                    codeLocation: {
                        type: String,
                        notify: true,
                        value: ""
                    },
                    codeRegion: {
                        type: String,
                        notify: true,
                        value: ""
                    },
                    codeFuncArea: {
                        type: String,
                        notify: true,
                        value: ""
                    },
                    codeResponsabilityCenter: {
                        type: String,
                        notify: true,
                        value: ""
                    },
                    unitCost: {
                        type: Number,
                        notify: true,
                        value: ""
                    },
                    totalCost: {
                        type: Number,
                        notify: true,
                        value: ""
                    },
                    unitPrice: {
                        type: Number,
                        notify: true,
                        value: ""
                    },
                    totalPrice: {
                        type: Number,
                        notify: true,
                        value: ""
                    },
                    billable: {
                        type: Boolean,
                        notify: true,
                        value: true
                    },
                    invoiceClientNo: {
                        type: String,
                        notify: true,
                        value: ""
                    },
                    _filterActive: {
                        type: Boolean,
                        value: true
                    },
                },

                ready: function ()
                {
                    if ("@ViewBag.ProjectNo" != "")
                    {
                        this.$.projectList.value = "@ViewBag.ProjectNo";
                        this.disabledProjectNo = true;
                    }
                },

                openToast: function (message) {
                    this.$.ToastMessage.text = message;
                    this.$.ToastMessage.open();
                },

                _add() {

                    if (true)
                    //Validações
                    {
                        this.result.unshift({
                            projectNo: this.projectNumber,
                            date: this.date,
                            movementType: this.projectMovementNumber,
                            type: this.projectTypeNumber,
                            code: this.codeNumber,
                            description: this.description,
                            quantity: this.quantity,
                            measurementUnitCode: this.codeMeasurementUnit,
                            locationCode: this.codeLocation,
                            projectContabGroup: this.codeProjectContabGroup,
                            regionCode: this.codeRegion,
                            functionalAreaCode: this.codeFuncArea,
                            responsabilityCenterCode: this.codeResponsabilityCenter,
                            user: "", //set logged user
                            unitCost: this.unitCost,
                            totalCost: this.totalCost,
                            unitPrice: this.unitPrice,
                            totalPrice: this.totalPrice,
                            billable: this.billable,
                            invoiceToClientNo: this.invoiceClientNo
                        });

                        // Save to DB
                        this.$.ajax_update.body = JSON.stringify(this.result);
                        this.$.ajax_update.generateRequest();
                        this.$.projectDiaryProject.clearCache();
                    }
                    else {
                        alert("Tem de preencher todos os campos.");
                    }
                },

                _update: function () {
                    this.$.ajax_update.body = JSON.stringify(this.result);
                    this.$.ajax_update.generateRequest();
                },

                _delete: function (e) {
                    var index = this.result.indexOf(e.model.item);
                    this.result.splice(index, 1);
                    // Save to DB
                    this.$.ajax_update.body = JSON.stringify(this.result);
                    this.$.ajax_update.generateRequest();
                    this.$.projectDiaryProject.clearCache();
                },

                _cancel: function () {
                    this.$.ajax_getall.generateRequest();
                    this.$.projectDiaryProject.clearCache();
                },

                _updateResponse: function (e) {
                    var self = this;
                    if (e.detail.status === 200) {

                        this.$.ajax_getall.generateRequest();
                        this.$.projectDiaryProject.clearCache();

                        this.openToast("Diário de Projeto atualizado.");
                    }
                    else {
                        this.openToast("Occorreu um erro ao atualizar as o Diário de Projeto.");
                    }
                },

                _projectChange: function (e) {
                    if (e.detail.value) {
                        this.$.ajax_related.body = JSON.stringify(this.projectNumber);
                        this.$.ajax_related.generateRequest();
                    }
                    else {
                        this.$.piDescription = "";
                        this.$.piCodeRegion = "";
                        this.$.piFuncArea = "";
                        this.$.piCodeResponsabilityCenter = "";
                    }
                },

                _projectTypeChange: function (e) {
                    var type = e.detail.value;
                    if (type == "1") {
                        this.$.ajax_code_options.url = "/PopulateDropdowns/GetResourcesCode";
                        this.$.ajax_code_options.generateRequest();
                    }
                    else if (type == "2") {
                        this.$.ajax_code_options.url = "/PopulateDropdowns/GetProductsCode";
                        this.$.ajax_code_options.generateRequest();
                    }
                    else if (type == "3") {
                        this.$.ajax_code_options.url = "/PopulateDropdowns/GetCGAccountCode";
                        this.$.ajax_code_options.generateRequest();
                    }
                    else {
                        this.description = "";
                        this.codeMeasurementUnit = "";
                    }
                },

                _codeChange: function (e) {

                    if (e.detail.value != null && e.detail.value != "") {
                        var index = this.codeOptions.findIndex(i => i.code === e.detail.value);
                        this.code = this.codeOptions[index].code;
                        this.description = this.codeOptions[index].name;
                        this.codeMeasurementUnit = this.codeOptions[index].measureUnit;
                    }
                },

                //_lineProjectTypeChange: function (e) {
                //    if (e.target.id != null && e.target.id != "") {
                //        if (e.target.id != "type")
                //        {
                //            var code = e.target.id.slice(4);
                //        }
                //        var codecombo = this.$$("#code" + code);

                //        switch (e.target.value) {
                //            case 1:
                //                codecombo.items = this.allofit[0];
                //                break;
                //            case 2:
                //                codecombo.items = this.allofit[1];
                //                break;
                //            case 3:
                //                codecombo.items = this.allofit[2];
                //            default:
                //                break;
                //        }
                //    }
                //},

                _lineChange: function (e) {
                    if (e.target.id != null && e.target.id != "") {
                        if (e.target.id != "code") {
                            var code = e.target.id.slice(4);
                        }

                        var typcode = this.$$("#type" + code);
                        var codecombo = this.$$(e.target.id);

                        switch (typcode.value) {
                            case 1:
                                codecombo.items = this.allofit[0];
                                break;
                            case 2:
                                codecombo.items = this.allofit[1];
                                break;
                            case 3:
                                codecombo.items = this.allofit[2];
                            default:
                                break;
                        }
                    }
                },

                //_selectItem: function (e) {
                //    debugger;;

                //    if (e.target.id != null) {
                //        //get id line
                //        var code = e.target.id.slice(4);
                //        var codecombo = this.$$("#code" + code);

                //        switch (e.target.value) {
                //            case 1:
                //                codecombo.items = this.resourceCode;
                //                break;
                //            case 2:
                //                codecombo.items = this.productCode;
                //                break;
                //            case 3:
                //                codecombo.items = this.accountCode;
                //            default:
                //                codecombo.items = null;
                //                break;
                //        }
                //        //codecombo.value = e.model.item["code"];
                //    }
                //},

                _updateRelatedResponse: function (related) {
                    if (related != null) {
                        this.codeRegion = this.related.regionCode;
                        this.codeFuncArea = this.related.funcAreaCode;
                        this.codeProjectContabGroup = this.related.contabGroup;
                        this.codeResponsabilityCenter = this.related.responsabilityCenter;
                    }

                },

                _updateRegisterResponse: function (e) {
                    var self = this;
                    if (this.$.ajax_update.url == "/Projetos/RegisterDiaryLines") {
                        if (e.detail.status === 200) {
                            this.openToast("Linhas do Diário registadas com sucesso.");
                        }
                        else {
                            this.openToast("Occorreu um erro ao registar as linhas do Diário.");
                        }
                        this.$.ajax_update.url == "/Projetos/RegisterDiaryLines";
                    }
                },

                _registerDiary: function () {
                    this.$.ajax_register.body = JSON.stringify(this.result);
                    this.$.ajax_register.generateRequest();
                    this.$.projectDiaryProject.clearCache();
                },

                _getMovements: function () {
                    //Request
                    debugger;;
                    if (this.$.projectList.value != null && this.$.projectList.value != "")
                    {
                        this.$.ajax_movementLines.body = JSON.stringify(this.$.projectList.value);
                        this.$.ajax_movementLines.generateRequest();
                        //Update List
                    }
                    else
                    {
                        this.openToast("Precisa de selecionar um projeto.");
                    }

                },

                _movementLinesResponse: function () {
                    debugger;;
                    if (this.movementLines != null)
                    {
                        this.movementLines.forEach(function (e) {

                            this.result.unshift({
                                projectNo: e.projectNumber,
                                date: e.date,
                                movementType: e.projectMovementNumber,
                                type: e.projectTypeNumber,
                                code: e.codeNumber,
                                description: e.description,
                                quantity: 0,
                                measurementUnitCode: e.codeMeasurementUnit,
                                locationCode: e.codeLocation,
                                projectContabGroup: e.codeProjectContabGroup,
                                regionCode: e.codeRegion,
                                functionalAreaCode: e.codeFuncArea,
                                responsabilityCenterCode: e.codeResponsabilityCenter,
                                unitCost: e.unitCost,
                                totalCost: e.totalCost,
                                unitPrice: e.unitPrice,
                                totalPrice: e.totalPrice,
                                billable: e.billable,
                                invoiceToClientNo: e.invoiceClientNo
                            });
                        });
                        this.$.projectDiaryProject.clearCache();
                        this.openToast("Movimentos adicionados com sucesso.");

                    }
                }
            });
        });
    </script>
</dom-module>
