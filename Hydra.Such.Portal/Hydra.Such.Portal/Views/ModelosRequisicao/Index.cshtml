
@{
    ViewData["Title"] = "Modelos de Requisição";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-sorter.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-sort-behavior.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-filter.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-filter-behavior.html" />
<link rel="import" href="~/lib/vaadin-valo-theme/vaadin-checkbox.html">
<link rel="import" href="~/lib/vaadin-checkbox/vaadin-checkbox.html">
<link rel="import" href="~/lib/vaadin-valo-theme/vaadin-text-field.html">
<link rel="import" href="~/lib/vaadin-text-field/vaadin-text-field.html">
<link rel="import" href="~/lib/vaadin-valo-theme/vaadin-date-picker.html" />
<link rel="import" href="~/lib/vaadin-date-picker/vaadin-date-picker.html" />
<link rel="import" href="~/lib/vaadin-valo-theme/vaadin-combo-box.html" />
<link rel="import" href="/lib/vaadin-combo-box/vaadin-combo-box.html" />
<link rel="import" href="/lib/vaadin-combo-box/vaadin-combo-box-behavior.html" />
<link rel="import" href="~/lib/iron-form/iron-form.html" />
<link rel="import" href="~/lib/paper-button/paper-button.html" />
<link rel="import" href="~/lib/iron-flex-layout/iron-flex-layout.html" />
<link rel="import" href="~/lib/iron-flex-layout/iron-flex-layout-classes.html" />
<link rel="import" href="/lib/paper-toast-master/paper-toast.html" />
<link rel="import" href="~/elements/comboboxs/MovementTypeList.html" />
<link rel="import" href="~/elements/comboboxs/ProjectTypeList.html" />
<link rel="import" href="~/elements/comboboxs/ProjectList.html" />

<!--start ColumnToggle-->
<link rel="import" href="/lib/iron-menu-behavior/iron-menubar-behavior.html" />
<link rel="import" href="/lib/paper-tabs-master/paper-tabs.html" />
<link rel="import" href="/lib/iron-icons/iron-icons.html" />
<link rel="import" href="/lib/iron-behaviors/iron-button-state.html" />
<link rel="import" href="/lib/paper-menu-button/paper-menu-button.html" />
<!--end ColumnToggle-->

<x-requestmodels></x-requestmodels>

<dom-module id="x-requestmodels">
    <template>
        <link rel="stylesheet" href="/lib/bootstrap/dist/css/bootstrap.css" />
        <link rel="stylesheet" href="/lib/font-awesome-4.7.0/css/font-awesome.min.css" />
        <link rel="stylesheet" href="/css/main.css" />
        <paper-toast id="ToastError" style="background-color:red" duration="4000" horizontalAlign="right"></paper-toast>
        <paper-toast id="ToastMessage" duration="4000" horizontalAlign="right"></paper-toast>

        <iron-ajax url="/ModelosRequisicao/GetRequisitionTemplates" id="ajax_getgrid" last-response="{{result}}" method="post" handle-as="json" content-type="application/json"></iron-ajax>

        <iron-ajax url="/ModelosRequisicao/ExportToExcel_ModelosRequisicao"
                   last-response="{{export}}"
                   id="ajax_Export"
                   method="post"
                   handle-as="json"
                   on-response="_exportEXCELResponse"
                   content-type="application/json">
        </iron-ajax>

        <iron-ajax url="/PopulateDropdowns/GetRequestStatus" id="ajax_getstatus" auto last-response="{{resultstatus}}" method="post" handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/PopulateDropdowns/GetRegionCode" last-response="{{RegionData}}" auto method="post" handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/PopulateDropdowns/GetResponsabilityCenterCode" last-response="{{ResponsabilityCenterData}}" auto method="post" handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/PopulateDropdowns/GetFunctionalAreaCode" last-response="{{FunctionalAreaCodeData}}" auto method="post" handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/PopulateDropdowns/GetLocalMarketRegions" last-response="{{LocalMarketRegions}}" auto method="post" handle-as="json" content-type="application/json"></iron-ajax>

        <div class="subMenu">
            <template is="dom-if" if="{{ _permissions.create }}">
                <paper-button class="tablinks" on-tap="_create"><i class="fa fa-plus" aria-hidden="true"></i>&nbsp; Criar Novo</paper-button>
            </template>
            <paper-button id="btnExport" class="tablinks" on-tap="_exportEXCEL" title="Exportar para Excel"><i class="fa fa-file-excel-o" aria-hidden="true"></i>&nbsp; Exportar</paper-button>

            <!--start ColumnToggle-->
            <paper-menu-button class="column-toggle" no-animations id="gridOpcaoGeral">
                <paper-icon-button icon="view-column" slot="dropdown-trigger" alt="Colunas"></paper-icon-button>
                <div class="list-group" slot="dropdown-content">
                    <template is="dom-repeat" items="[[ _toArray(_columns)]]" id="columnsList">
                        <a href="javascript:void(0);" on-tap="_toggleColumn" data-item$="[[item]]" class$="list-group-item [[ _getColumnItemClass( item.key ) ]]">
                            {{ item.value.label }}
                        </a>
                        <hr />
                    </template>
                </div>
            </paper-menu-button>
            <!--end ColumnToggle-->
        </div>

        <vaadin-grid id="gridrequest" aria-label="ProfileModelsTabel" items="[[result]]" class="grid" active-item="{{_SelectedLine}}">
            <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.requisitionNo.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="requisitionNo">Nº Requisição </vaadin-grid-sorter>
                    <vaadin-grid-filter path="requisitionNo" />
                </template>
                <template>
                    {{item.requisitionNo}}
                </template>
            </vaadin-grid-column>

            @*<vaadin-grid-column width="160px" resizable hidden$="{{ _columns.localMarketRegion.hidden }}">
                    <template class="header">
                        <vaadin-grid-sorter path="localMarketRegion">Região Mercado Local</vaadin-grid-sorter>
                        <vaadin-grid-filter path="localMarketRegion" />
                    </template>
                    <template>
                        [[ _getLocalMarketRegionDescription(item.localMarketRegion) ]]
                    </template>
                </vaadin-grid-column>*@

            @*<vaadin-grid-column width="160px" resizable hidden$="{{ _columns.localMarketDate.hidden }}">
                    <template class="header">
                        <vaadin-grid-sorter path="localMarketDate">Data Mercado Local</vaadin-grid-sorter>
                        <vaadin-grid-filter path="localMarketDate" />
                    </template>
                    <template>
                        [[ _parseDateFormat(item.localMarketDate)]]
                    </template>
                </vaadin-grid-column>*@

            <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.comments.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="comments">Descrição</vaadin-grid-sorter>
                    <vaadin-grid-filter path="comments" />
                </template>
                <template>
                    {{ item.comments }}
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.regionCode.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="regionCode">Código Região</vaadin-grid-sorter>
                    <vaadin-grid-filter path="regionCode" />
                </template>
                <template>
                    [[ _parseregion(item.regionCode)]]
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.functionalAreaCode.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="functionalAreaCode">Código Área Funcional</vaadin-grid-sorter>
                    <vaadin-grid-filter path="functionalAreaCode" />
                </template>
                <template>
                    [[ _parseArea(item.functionalAreaCode)]]
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.centerResponsibilityCode.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="centerResponsibilityCode">Código Centro Responsabilidade</vaadin-grid-sorter>
                    <vaadin-grid-filter path="centerResponsibilityCode" />
                </template>
                <template>
                    [[ _parsecenterRespons(item.centerResponsibilityCode)]]
                </template>
            </vaadin-grid-column>

            @*<vaadin-grid-column width="160px" resizable hidden$="{{ _columns.marketInquiryNo.hidden }}">
                    <template class="header">
                        <vaadin-grid-sorter path="marketInquiryNo">Nº Consulta Mercado</vaadin-grid-sorter>
                        <vaadin-grid-filter path="marketInquiryNo" />
                    </template>
                    <template>
                        {{item.marketInquiryNo}}
                    </template>
                </vaadin-grid-column>*@

            @*<vaadin-grid-column width="160px" resizable hidden$="{{ _columns.orderNo.hidden }}">
                    <template class="header">
                        <vaadin-grid-sorter path="orderNo">Nº Encomenda</vaadin-grid-sorter>
                        <vaadin-grid-filter path="orderNo" />
                    </template>
                    <template>
                        {{item.orderNo}}
                    </template>
                </vaadin-grid-column>*@

            @*<vaadin-grid-column width="160px" resizable hidden$="{{ _columns.requestReclaimNo.hidden }}">
                    <template class="header">
                        <vaadin-grid-sorter path="requestReclaimNo">Nº Requisição Reclamada</vaadin-grid-sorter>
                        <vaadin-grid-filter path="requestReclaimNo" />
                    </template>
                    <template>
                        {{item.requestReclaimNo}}
                    </template>
                </vaadin-grid-column>*@

            @*<vaadin-grid-column width="160px" resizable hidden$="{{ _columns.requisitionDate.hidden }}">
                    <template class="header">
                        <vaadin-grid-sorter path="requisitionDate">Data requisição</vaadin-grid-sorter>
                        <vaadin-grid-filter path="requisitionDate" />
                    </template>
                    <template>
                        [[ _parseDateFormat(item.requisitionDate)]]
                    </template>
                </vaadin-grid-column>*@
        </vaadin-grid>
    </template>
    <script>
    document.addEventListener('WebComponentsReady', function () {
        Polymer({
            is: 'x-requestmodels',
            properties: {
                _filterActive: {
                    type: Boolean,
                    value: true
                },
                _SelectedLine: {
                    observer: '_rowSelected'
                },
                _permissions: {
                    type: Array,
                    value: @Html.Raw(Json.Serialize(ViewBag.UserPermissions)),
                },
                _columns: {
                    type: Object,
                    value: function () {
                        return {};
                    }
                },
            },
            observers: [
                '_onCacheLoaded(resultstatus,RegionData,FunctionalAreaCodeData,ResponsabilityCenterData,LocalMarketRegions)'
            ],
            _onCacheLoaded: function (resultstatus, RegionData, FunctionalAreaCodeData, ResponsabilityCenterData,LocalMarketRegions) {
                if (!this.Flag) {
                    this.$.ajax_getgrid.generateRequest();
                }
                this.Flag = true;

                /*ColumnToggle*/
                this._startColumnToggle();

                var _this = this;
                $(window).resize(function () {
                    _this.fixGridToBottom();
                });
                $(window).trigger('resize');
            },
            fixGridToBottom: function () {
                var grid_el = $(this.$.gridrequest);
                var parentHeight = $(this).offsetParent().height();
                var offsetTop = $(this).offset().top;
                var height = parentHeight - offsetTop;
                grid_el.height(height);
            },
            _rowSelected: function (item) {
                if (item != null) {
                    window.location.href = "/ModelosRequisicao/Detalhes/" + item.requisitionNo;
                }
            },
            _parseregion: function (param) {
                if (param != undefined && this.RegionData != undefined ) {
                    var sel = this.RegionData.find(x => x.id == param);
                    if (sel != undefined) {
                        return sel.value;
                    }
                }
                return "";

            },
            _parseArea: function (param) {
                if (param != undefined && this.FunctionalAreaCodeData != undefined ) {
                    var sel = this.FunctionalAreaCodeData.find(x => x.id == param);
                    if (sel != undefined) {
                        return sel.value;
                    }
                }
                return "";

            },
            _parseDateFormat: function (date) {
                if (date != null && date != "") {
                    var Date = date.split("T");
                    if (Date != "" && Date != undefined) {
                        var x = Date[0].split("-");
                        return x[2] + "-" + x[1] + "-" + x[0];
                    }
                }
            },
            _getLocalMarketRegionDescription: function (param) {
                if (param != undefined && this.LocalMarketRegions != undefined) {
                    var sel = this.LocalMarketRegions.find(x => x.id == param);
                    if (sel != undefined) {
                        return sel.value;
                    }
                }
                return "";
            },
            _parsecenterRespons: function (param) {
                if (param != undefined && this.ResponsabilityCenterData != undefined ) {
                    var sel = this.ResponsabilityCenterData.find(x => x.id == param);
                    if (sel != undefined) {
                        return sel.value;
                    }
                }
                return "";
            },
            _create: function (item) {
                if (item != null) {
                    window.location.href = "/ModelosRequisicao/Detalhes/";
                }
            },

            _exportEXCEL: function () {
                //debugger;
                this.result[0].ColunasEXCEL = this._columns;

                this.$.ajax_Export.body = JSON.stringify(this.result);
                this.$.ajax_Export.generateRequest();
            },

            _exportEXCELResponse: function (e) {
                //debugger
                var FileName = this.export;
                location.href = '../ModelosRequisicao/ExportToExcelDownload_ModelosRequisicao?sFileName=' + FileName;
            },

            /*start - ColumnToggle*/
            _startColumnToggle: function () {
                var columns = {
                    "requisitionNo": { hidden: false, label: "Nº Requisição" },
                    //"localMarketRegion": { hidden: false, label: "Região Mercado Local" },
                    //"localMarketDate": { hidden: false, label: "Data Mercado Local" },
                    "regionCode": { hidden: false, label: "Código Região" },
                    "functionalAreaCode": { hidden: false, label: "Código Área Funcional" },
                    "centerResponsibilityCode": { hidden: false, label: "Código Centro Responsabilidade" },
                    "comments": { hidden: false, label: "Observações" }
                    //"marketInquiryNo": { hidden: false, label: "Nº Consulta Mercado" },
                    //"orderNo": { hidden: false, label: "Nº Encomenda" },
                    //"requestReclaimNo": { hidden: false, label: "Nº Requisição Reclamada" },
                    //"requisitionDate": { hidden: false, label: "Data requisição" }
                };

                if (localStorage["requestmodels.ToggleColumn"]) {
                    var keys = Object.keys(columns);
                    var storedColumns = JSON.parse(localStorage["requestmodels.ToggleColumn"]);
                    for (var i = 0; i < keys.length; i++) {
                        columns[keys[i]] = storedColumns[keys[i]];
                    }
                };
                this._columns = columns;
            },
            _toggleColumn: function (event) {
                var columnIndex = JSON.parse(event.target.dataset.item).key;
                event.path[0].classList.toggle("selected");
                this.set('_columns.' + columnIndex + '.hidden', (!this._columns[columnIndex].hidden));
                if (typeof (Storage) !== "undefined") {
                    localStorage["requestmodels.ToggleColumn"] = JSON.stringify(this._columns);
                }
            },
            _getColumnItemClass: function (columnIndex) {
                return !this._columns[columnIndex].hidden ? "selected" : "";
            },
            _toArray: function (obj) {
                return Object.keys(obj).map(function (key) {
                    return {
                        key: key,
                        value: obj[key]
                    };
                });
            },
            /* end - ColumnToggle */

        });
    });

    </script>
</dom-module>
